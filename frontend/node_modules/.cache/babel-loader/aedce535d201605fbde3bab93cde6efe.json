{"ast":null,"code":"import _slicedToArray from\"/home/supersis03/Projects/dextera-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/** @format */import React,{Fragment,useState,useEffect}from\"react\";import axios from\"axios\";import{Paper,Table,TableCell,TableContainer,TableHead,TableRow,Typography,FormGroup,FormControlLabel,Checkbox}from\"@mui/material\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MatterList=function MatterList(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),matter=_useState2[0],setMatters=_useState2[1];var config={headers:{\"Content-Type\":\"application/json\",Accept:\"application/json\"}};useEffect(function(){var res=axios.get(\"\".concat(process.env.REACT_APP_API_URL,\"/api/matter\"),config);setMatters(res.data);},[]);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsxs(FormGroup,{\"aria-label\":\"position\",row:true,children:[/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{defaultChecked:true}),label:\"My Tasks\"}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{defaultChecked:true}),label:\"Red Tasks\"}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{defaultChecked:true}),label:\"Green Tasks\"}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{defaultChecked:true}),label:\"Yellow Tasks\"})]}),/*#__PURE__*/_jsx(Typography,{component:\"h3\",children:\"All Matters Task's List\"}),/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsx(Table,{children:/*#__PURE__*/_jsxs(TableHead,{children:[/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Matter Tasks\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Matter Name\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Last Action\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Next Action\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Assign To\"})]}),/*#__PURE__*/_jsx(TableRow,{children:/*#__PURE__*/_jsx(TableCell,{})})]})})})]});};export default MatterList;","map":{"version":3,"sources":["/home/supersis03/Projects/dextera-project/frontend/src/components/Matter/components/MatterList.jsx"],"names":["React","Fragment","useState","useEffect","axios","Paper","Table","TableCell","TableContainer","TableHead","TableRow","Typography","FormGroup","FormControlLabel","Checkbox","MatterList","matter","setMatters","config","headers","Accept","res","get","process","env","REACT_APP_API_URL","data"],"mappings":"yKAAA,cAEA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,CAAoCC,SAApC,KAAqD,OAArD,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OACEC,KADF,CAEEC,KAFF,CAGEC,SAHF,CAIEC,cAJF,CAKEC,SALF,CAMEC,QANF,CAOEC,UAPF,CAQEC,SARF,CASEC,gBATF,CAUEC,QAVF,KAWO,eAXP,C,wFAaA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,eACMb,QAAQ,CAAC,IAAD,CADd,wCAChBc,MADgB,eACRC,UADQ,eAEvB,GAAMC,CAAAA,MAAM,CAAG,CACbC,OAAO,CAAE,CACP,eAAgB,kBADT,CAEPC,MAAM,CAAE,kBAFD,CADI,CAAf,CAMAjB,SAAS,CAAC,UAAM,CACd,GAAMkB,CAAAA,GAAG,CAAGjB,KAAK,CAACkB,GAAN,WACPC,OAAO,CAACC,GAAR,CAAYC,iBADL,gBAEVP,MAFU,CAAZ,CAIAD,UAAU,CAACI,GAAG,CAACK,IAAL,CAAV,CACD,CANQ,CAMN,EANM,CAAT,CAOA,mBACE,MAAC,QAAD,yBACE,MAAC,SAAD,EAAW,aAAW,UAAtB,CAAiC,GAAG,KAApC,wBACE,KAAC,gBAAD,EACE,OAAO,cAAE,KAAC,QAAD,EAAU,cAAc,KAAxB,EADX,CAEE,KAAK,CAAC,UAFR,EADF,cAKE,KAAC,gBAAD,EACE,OAAO,cAAE,KAAC,QAAD,EAAU,cAAc,KAAxB,EADX,CAEE,KAAK,CAAC,WAFR,EALF,cASE,KAAC,gBAAD,EACE,OAAO,cAAE,KAAC,QAAD,EAAU,cAAc,KAAxB,EADX,CAEE,KAAK,CAAC,aAFR,EATF,cAaE,KAAC,gBAAD,EACE,OAAO,cAAE,KAAC,QAAD,EAAU,cAAc,KAAxB,EADX,CAEE,KAAK,CAAC,cAFR,EAbF,GADF,cAmBE,KAAC,UAAD,EAAY,SAAS,CAAC,IAAtB,qCAnBF,cAoBE,KAAC,cAAD,EAAgB,SAAS,CAAErB,KAA3B,uBACE,KAAC,KAAD,wBACE,MAAC,SAAD,yBACE,MAAC,QAAD,yBACE,KAAC,SAAD,2BADF,cAEE,KAAC,SAAD,0BAFF,cAGE,KAAC,SAAD,0BAHF,cAIE,KAAC,SAAD,0BAJF,cAKE,KAAC,SAAD,wBALF,GADF,cASE,KAAC,QAAD,wBACE,KAAC,SAAD,IADF,EATF,GADF,EADF,EApBF,GADF,CAwCD,CAvDD,CAyDA,cAAeU,CAAAA,UAAf","sourcesContent":["/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport {\n  Paper,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n} from \"@mui/material\";\n\nconst MatterList = () => {\n  const [matter, setMatters] = useState(null);\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n  };\n  useEffect(() => {\n    const res = axios.get(\n      `${process.env.REACT_APP_API_URL}/api/matter`,\n      config,\n    );\n    setMatters(res.data);\n  }, []);\n  return (\n    <Fragment>\n      <FormGroup aria-label=\"position\" row>\n        <FormControlLabel\n          control={<Checkbox defaultChecked />}\n          label=\"My Tasks\"\n        />\n        <FormControlLabel\n          control={<Checkbox defaultChecked />}\n          label=\"Red Tasks\"\n        />\n        <FormControlLabel\n          control={<Checkbox defaultChecked />}\n          label=\"Green Tasks\"\n        />\n        <FormControlLabel\n          control={<Checkbox defaultChecked />}\n          label=\"Yellow Tasks\"\n        />\n      </FormGroup>\n      <Typography component=\"h3\">All Matters Task's List</Typography>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assign To</TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableHead>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default MatterList;\n"]},"metadata":{},"sourceType":"module"}