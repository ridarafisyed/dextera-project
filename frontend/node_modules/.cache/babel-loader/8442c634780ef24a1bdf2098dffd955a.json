{"ast":null,"code":"/** @format */ // import React, { useState } from \"react\";\nimport axios from\"axios\";export var CONFIG={headers:{\"Content-Type\":\"application/json\",Accept:\"application/json\"}};export var CreateMatter=function CreateMatter(contact,matter_name,matter_type,matter_source,matter_status,assign_to,assign_by,billing_rate,alerts,open_date,close_date,total_days,jurisdiction,status_limitaion,opposing_counsel,where,when,involved,witnesses,narrative){var status=\"\";var body=JSON.stringify({contact:contact,matter_name:matter_name,matter_type:matter_type,matter_source:matter_source,matter_status:matter_status,assign_to:assign_to,assign_by:assign_by,billing_rate:billing_rate,alerts:alerts,open_date:open_date,close_date:close_date,total_days:total_days,jurisdiction:jurisdiction,status_limitaion:status_limitaion,opposing_counsel:opposing_counsel,where:where,when:when,involved:involved,witnesses:witnesses,narrative:narrative});axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/api/new-matter/\"),body,CONFIG).then(function(res){status=res.statusText;}).catch(function(err){status=err.message;});return status;};export var retrive_matter=function retrive_matter(){};","map":{"version":3,"sources":["/home/supersis03/Projects/Dextera/dextera-project/frontend/src/api/MatterApi.js"],"names":["axios","CONFIG","headers","Accept","CreateMatter","contact","matter_name","matter_type","matter_source","matter_status","assign_to","assign_by","billing_rate","alerts","open_date","close_date","total_days","jurisdiction","status_limitaion","opposing_counsel","where","when","involved","witnesses","narrative","status","body","JSON","stringify","post","process","env","REACT_APP_API_URL","then","res","statusText","catch","err","message","retrive_matter"],"mappings":"AAAA,c,CAEA;AACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,IAAMC,CAAAA,MAAM,CAAG,CACpBC,OAAO,CAAE,CACP,eAAgB,kBADT,CAEPC,MAAM,CAAE,kBAFD,CADW,CAAf,CAOP,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAC1BC,OAD0B,CAE1BC,WAF0B,CAG1BC,WAH0B,CAI1BC,aAJ0B,CAK1BC,aAL0B,CAM1BC,SAN0B,CAO1BC,SAP0B,CAQ1BC,YAR0B,CAS1BC,MAT0B,CAU1BC,SAV0B,CAW1BC,UAX0B,CAY1BC,UAZ0B,CAa1BC,YAb0B,CAc1BC,gBAd0B,CAe1BC,gBAf0B,CAgB1BC,KAhB0B,CAiB1BC,IAjB0B,CAkB1BC,QAlB0B,CAmB1BC,SAnB0B,CAoB1BC,SApB0B,CAqBvB,CACH,GAAIC,CAAAA,MAAM,CAAG,EAAb,CACA,GAAMC,CAAAA,IAAI,CAAGC,IAAI,CAACC,SAAL,CAAe,CAC1BvB,OAAO,CAAPA,OAD0B,CAE1BC,WAAW,CAAXA,WAF0B,CAG1BC,WAAW,CAAXA,WAH0B,CAI1BC,aAAa,CAAbA,aAJ0B,CAK1BC,aAAa,CAAbA,aAL0B,CAM1BC,SAAS,CAATA,SAN0B,CAO1BC,SAAS,CAATA,SAP0B,CAQ1BC,YAAY,CAAZA,YAR0B,CAS1BC,MAAM,CAANA,MAT0B,CAU1BC,SAAS,CAATA,SAV0B,CAW1BC,UAAU,CAAVA,UAX0B,CAY1BC,UAAU,CAAVA,UAZ0B,CAa1BC,YAAY,CAAZA,YAb0B,CAc1BC,gBAAgB,CAAhBA,gBAd0B,CAe1BC,gBAAgB,CAAhBA,gBAf0B,CAgB1BC,KAAK,CAALA,KAhB0B,CAiB1BC,IAAI,CAAJA,IAjB0B,CAkB1BC,QAAQ,CAARA,QAlB0B,CAmB1BC,SAAS,CAATA,SAnB0B,CAoB1BC,SAAS,CAATA,SApB0B,CAAf,CAAb,CAuBAxB,KAAK,CACF6B,IADH,WACWC,OAAO,CAACC,GAAR,CAAYC,iBADvB,qBAC4DN,IAD5D,CACkEzB,MADlE,EAEGgC,IAFH,CAEQ,SAACC,GAAD,CAAS,CACbT,MAAM,CAAGS,GAAG,CAACC,UAAb,CACD,CAJH,EAKGC,KALH,CAKS,SAACC,GAAD,CAAS,CACdZ,MAAM,CAAGY,GAAG,CAACC,OAAb,CACD,CAPH,EASA,MAAOb,CAAAA,MAAP,CACD,CAxDM,CA0DP,MAAO,IAAMc,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAAE,CAA/B","sourcesContent":["/** @format */\n\n// import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport const CONFIG = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n};\n\nexport const CreateMatter = (\n  contact,\n  matter_name,\n  matter_type,\n  matter_source,\n  matter_status,\n  assign_to,\n  assign_by,\n  billing_rate,\n  alerts,\n  open_date,\n  close_date,\n  total_days,\n  jurisdiction,\n  status_limitaion,\n  opposing_counsel,\n  where,\n  when,\n  involved,\n  witnesses,\n  narrative,\n) => {\n  let status = \"\";\n  const body = JSON.stringify({\n    contact,\n    matter_name,\n    matter_type,\n    matter_source,\n    matter_status,\n    assign_to,\n    assign_by,\n    billing_rate,\n    alerts,\n    open_date,\n    close_date,\n    total_days,\n    jurisdiction,\n    status_limitaion,\n    opposing_counsel,\n    where,\n    when,\n    involved,\n    witnesses,\n    narrative,\n  });\n\n  axios\n    .post(`${process.env.REACT_APP_API_URL}/api/new-matter/`, body, CONFIG)\n    .then((res) => {\n      status = res.statusText;\n    })\n    .catch((err) => {\n      status = err.message;\n    });\n\n  return status;\n};\n\nexport const retrive_matter = () => {};\n"]},"metadata":{},"sourceType":"module"}