{"ast":null,"code":"var _jsxFileName = \"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Tasks/CreateTask.jsx\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { TextField, Switch, FormControl, Select, MenuItem, InputLabel, FormControlLabel, Box, Grid, Button, Typography } from \"@mui/material\";\nimport { LocalizationProvider, DateRangePicker, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport axios from \"axios\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateTask = () => {\n  _s();\n\n  const [value, setValue] = useState(null);\n  const [bill, setBill] = useToggle(true);\n  const [matterData, setMatterData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isPrivate, setIsPrivate] = useToggle(true);\n  const [taskData, setTaskData] = useState({\n    matter_no: 0,\n    matter_contact: \"\",\n    matter: \"\",\n    billable: true,\n    is_private: true,\n    task: \"\",\n    due_date: \"\",\n    assign_to: \"\",\n    detail: \"\"\n  });\n  const {\n    matter_no,\n    matter_contact,\n    matter,\n    billable,\n    is_private,\n    task,\n    due_date,\n    assign_to,\n    detail\n  } = taskData;\n\n  const onChange = e => setTaskData({ ...matterData,\n    [e.target.name]: e.target.value\n  });\n\n  const FetchData = () => {\n    axios.get(`${process.env.REACT_APP_API_URL}/api/matter/`, CONFIG).then(res => {\n      console.log(res.data);\n      setLoading(false);\n      setMatterData(res.data);\n    }).catch(err => {\n      console.log(err);\n      setLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  const onSubmit = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      Validate: true,\n      sx: {\n        \"& .MuiTextField-root\": {\n          m: 1\n        },\n        \"& .MuiSelect-root\": {\n          m: 1\n        }\n      },\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h3\",\n        variant: \"h4\",\n        children: \"Create New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        p: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-simple-select-label\",\n              children: \"Matter #\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              size: \"small\",\n              fullWidth: true,\n              labelId: \"demo-simple-select-label\",\n              id: \"demo-simple-select\",\n              value: matter,\n              label: \"matter_id\",\n              onChange: e => onChange(e),\n              children: matterData === null || matterData === void 0 ? void 0 : matterData.map(data => /*#__PURE__*/_jsxDEV(MenuItem, {\n                id: data.id,\n                value: data.id,\n                children: data.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            size: \"small\",\n            margin: \"normal\",\n            variant: \"outlined\",\n            name: \"matter\",\n            label: \"Matter\",\n            type: \"text\",\n            value: matterData.con,\n            onChange: e => onChange(e),\n            id: \"matter\",\n            autoComplete: \"matter\",\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            size: \"small\",\n            margin: \"normal\",\n            variant: \"outlined\",\n            name: \"task\",\n            label: \"Task\",\n            type: \"task\",\n            value: task,\n            onChange: e => onChange(e),\n            id: \"task\",\n            autoComplete: \"task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            ml: 2,\n            mt: 1,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              children: \"+ Attach File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            size: \"small\",\n            margin: \"normal\",\n            variant: \"outlined\",\n            name: \"matter_contact\",\n            label: \"Matter Contact\",\n            type: \"text\",\n            value: matter_contact,\n            onChange: e => onChange(e),\n            id: \"matter_contact\",\n            autoComplete: \"matter_contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            p: 1,\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              fullWidth: true,\n              size: \"large\",\n              label: \"Billable\",\n              labelPlacement: \"start\",\n              control: /*#__PURE__*/_jsxDEV(Switch, {\n                size: \"large\",\n                checked: bill,\n                onChange: () => setBill(bill)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              fullWidth: true,\n              size: \"large\",\n              label: \"Private\",\n              labelPlacement: \"start\",\n              control: /*#__PURE__*/_jsxDEV(Switch, {\n                size: \"large\",\n                checked: isPrivate,\n                onChange: () => setIsPrivate(isPrivate)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n            dateAdapter: AdapterDateFns,\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"Due Date\",\n              disablePast: true,\n              value: value,\n              onChange: newValue => {\n                setValue(newValue);\n              },\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                size: \"small\",\n                ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            size: \"small\",\n            margin: \"normal\",\n            variant: \"outlined\",\n            name: \"assign_to\",\n            label: \"Assign to\",\n            type: \"assign_to\",\n            value: assign_to,\n            onChange: e => onChange(e),\n            id: \"assign_to\",\n            autoComplete: \"assign_to\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            multiline: true,\n            rows: 5,\n            size: \"small\",\n            margin: \"normal\",\n            variant: \"outlined\",\n            name: \"detail\",\n            label: \"Detail\",\n            type: \"text\",\n            value: detail,\n            onChange: e => onChange(e),\n            id: \"detail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            sx: {\n              float: \"right\"\n            },\n            endIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 24\n            }, this),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateTask, \"ukwNJbSJeATKjHRVFDZB7J95LMY=\", false, function () {\n  return [useToggle, useToggle];\n});\n\n_c = CreateTask;\nexport default CreateTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"sources":["/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Tasks/CreateTask.jsx"],"names":["React","Fragment","useEffect","useState","TextField","Switch","FormControl","Select","MenuItem","InputLabel","FormControlLabel","Box","Grid","Button","Typography","LocalizationProvider","DateRangePicker","DatePicker","AdapterDateFns","axios","SaveIcon","useToggle","CONFIG","CreateTask","value","setValue","bill","setBill","matterData","setMatterData","loading","setLoading","isPrivate","setIsPrivate","taskData","setTaskData","matter_no","matter_contact","matter","billable","is_private","task","due_date","assign_to","detail","onChange","e","target","name","FetchData","get","process","env","REACT_APP_API_URL","then","res","console","log","data","catch","err","onSubmit","preventDefault","m","map","id","con","newValue","params","float"],"mappings":"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","sourcesContent":["/** @format */\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  TextField,\n  Switch,\n  FormControl,\n  Select,\n  MenuItem,\n  InputLabel,\n  FormControlLabel,\n  Box,\n  Grid,\n  Button,\n  Typography,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DateRangePicker, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport axios from \"axios\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst CreateTask = () => {\n  const [value, setValue] = useState(null);\n  const [bill, setBill] = useToggle(true);\n  const [matterData, setMatterData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isPrivate, setIsPrivate] = useToggle(true);\n\n  const [taskData, setTaskData] = useState({\n    matter_no: 0,\n    matter_contact: \"\",\n    matter: \"\",\n    billable: true,\n    is_private: true,\n    task: \"\",\n    due_date: \"\",\n    assign_to: \"\",\n    detail: \"\",\n  });\n\n  const {\n    matter_no,\n    matter_contact,\n    matter,\n    billable,\n    is_private,\n    task,\n    due_date,\n    assign_to,\n    detail,\n  } = taskData;\n\n  const onChange = (e) =>\n    setTaskData({ ...matterData, [e.target.name]: e.target.value });\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/matter/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setMatterData(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n          \"& .MuiSelect-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create New Task\n        </Typography>\n        <Grid container spacing={2} p={2}>\n          <Grid item xs={6}>\n            <FormControl fullWidth>\n              <InputLabel id=\"demo-simple-select-label\">Matter #</InputLabel>\n              <Select\n                size=\"small\"\n                fullWidth\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={matter}\n                label=\"matter_id\"\n                onChange={(e) => onChange(e)}\n              >\n                {matterData?.map((data) => (\n                  <MenuItem id={data.id} value={data.id}>\n                    {data.id}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter\"\n              label=\"Matter\"\n              type=\"text\"\n              value={matterData.con}\n              onChange={(e) => onChange(e)}\n              id=\"matter\"\n              autoComplete=\"matter\"\n              disabled\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"task\"\n              label=\"Task\"\n              type=\"task\"\n              value={task}\n              onChange={(e) => onChange(e)}\n              id=\"task\"\n              autoComplete=\"task\"\n            />\n            <Box ml={2} mt={1}>\n              <Button variant=\"contained\">+ Attach File</Button>\n            </Box>\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_contact\"\n              label=\"Matter Contact\"\n              type=\"text\"\n              value={matter_contact}\n              onChange={(e) => onChange(e)}\n              id=\"matter_contact\"\n              autoComplete=\"matter_contact\"\n            />\n            <Box p={1}>\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Billable\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    size=\"large\"\n                    checked={bill}\n                    onChange={() => setBill(bill)}\n                  />\n                }\n              />\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Private\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    size=\"large\"\n                    checked={isPrivate}\n                    onChange={() => setIsPrivate(isPrivate)}\n                  />\n                }\n              />\n            </Box>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                label=\"Due Date\"\n                disablePast\n                value={value}\n                onChange={(newValue) => {\n                  setValue(newValue);\n                }}\n                renderInput={(params) => <TextField size=\"small\" {...params} />}\n              />\n            </LocalizationProvider>\n            {/* <DatePicker\n              fullWidth\n              size=\"small\"\n              id=\"due_date\"\n              label=\"Due Date\"\n              disablePast\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            /> */}\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"assign_to\"\n              label=\"Assign to\"\n              type=\"assign_to\"\n              value={assign_to}\n              onChange={(e) => onChange(e)}\n              id=\"assign_to\"\n              autoComplete=\"assign_to\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              multiline\n              rows={5}\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"detail\"\n              label=\"Detail\"\n              type=\"text\"\n              value={detail}\n              onChange={(e) => onChange(e)}\n              id=\"detail\"\n            />\n\n            <Button\n              variant=\"contained\"\n              sx={{ float: \"right\" }}\n              endIcon={<SaveIcon />}\n            >\n              Save\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateTask;\n"]},"metadata":{},"sourceType":"module"}