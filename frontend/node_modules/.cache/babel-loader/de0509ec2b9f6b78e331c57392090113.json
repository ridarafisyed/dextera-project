{"ast":null,"code":"var _jsxFileName = \"/home/supersis03/Projects/dextera-project/frontend/src/components/Profile/Profile.js\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React from 'react';\nimport { Button, TextField, Checkbox, Grid, FormControlLabel, Tab } from '@mui/material';\nimport { TabList, TabContext, TabPanel } from '@mui/lab';\nimport { useToggle } from '../../context/useToggle';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Profile = ({\n  user\n}) => {\n  _s();\n\n  const [open, setOpen] = useToggle(false);\n  const [value, setValue] = React.useState('1');\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        p: 8,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            fullWidth: true,\n            variant: \"outlined\",\n            lable: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"outlined\",\n            lable: \"Mobile #\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"outlined\",\n            lable: \"Phone #\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"outlined\",\n            lable: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"outlined\",\n            lable: \"State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"outlined\",\n            lable: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"outlined\",\n            lable: \"Language\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), ' ', /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            fullWidth: true,\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              defaultChecked: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 24\n            }, this),\n            label: \"Willing to locate\",\n            labelPlacement: \"start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            fullWidth: true,\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              defaultChecked: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 24\n            }, this),\n            label: \"Search Type (Active/ Passiv)\",\n            labelPlacement: \"start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            sx: {\n              float: 'right'\n            },\n            color: \"success\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n};\n\n_s(Profile, \"lOTGBN4s1HnEy1OwKH/CcRKZpFM=\", false, function () {\n  return [useToggle];\n});\n\n_c = Profile;\n\nconst mapStateToProps = state => ({\n  // isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user\n});\n\nexport default connect(mapStateToProps)(Profile);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/supersis03/Projects/dextera-project/frontend/src/components/Profile/Profile.js"],"names":["React","Button","TextField","Checkbox","Grid","FormControlLabel","Tab","TabList","TabContext","TabPanel","useToggle","connect","Profile","user","open","setOpen","value","setValue","useState","handleChange","event","newValue","float","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React from 'react';\n\nimport {\n  Button,\n  TextField,\n  Checkbox,\n  Grid,\n  FormControlLabel,\n  Tab,\n} from '@mui/material';\nimport { TabList, TabContext, TabPanel } from '@mui/lab';\nimport { useToggle } from '../../context/useToggle';\nimport { connect } from 'react-redux';\n\nconst Profile = ({ user }) => {\n  const [open, setOpen] = useToggle(false);\n  const [value, setValue] = React.useState('1');\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <>\n      <>\n        <Grid container p={8} spacing={2}>\n          <Grid item xs={4}>\n            <TextField\n              margin=\"normal\"\n              fullWidth\n              variant=\"outlined\"\n              lable=\"Username\"\n            ></TextField>\n            <TextField\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              lable=\"Mobile #\"\n            ></TextField>\n            <TextField\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              lable=\"Phone #\"\n            ></TextField>\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              lable=\"Email\"\n            ></TextField>\n            <TextField\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              lable=\"State\"\n            ></TextField>\n            <TextField\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              lable=\"City\"\n            ></TextField>\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              lable=\"Language\"\n            ></TextField>{' '}\n            <FormControlLabel\n              fullWidth\n              control={<Checkbox defaultChecked />}\n              label=\"Willing to locate\"\n              labelPlacement=\"start\"\n            />\n            <FormControlLabel\n              fullWidth\n              control={<Checkbox defaultChecked />}\n              label=\"Search Type (Active/ Passiv)\"\n              labelPlacement=\"start\"\n            />\n            <br />\n            <Button\n              variant=\"contained\"\n              sx={{\n                float: 'right',\n              }}\n              color=\"success\"\n            >\n              Submit\n            </Button>\n          </Grid>\n        </Grid>\n      </>\n    </>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(Profile);\n"]},"metadata":{},"sourceType":"module"}