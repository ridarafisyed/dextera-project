{"ast":null,"code":"var _jsxFileName = \"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Category/Category.jsx\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { Fragment, useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { Typography, Button, Grid, Box, Checkbox, List, ListItem, ListItemButton, ListItemText, FormControlLabel } from \"@mui/material\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONFIG = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\"\n  }\n};\n\nconst catHandler = id => {\n  console.log(id);\n};\n\nconst Category = () => {\n  _s();\n\n  const [category, setCategory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}/api/category/`, CONFIG).then(res => {\n      console.log(res.data);\n      setLoading(false);\n      setStatus(res.statusText);\n      setCategory(res.data);\n    }).catch(err => {\n      console.log(err);\n      setLoading(false);\n      setError(err.message);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      fullWidth: true,\n      sx: {\n        borderRadius: \"0.5rem\"\n      },\n      children: \"+ New Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), !loading ? category.map(data => /*#__PURE__*/_jsxDEV(Box, {\n      mt: 1,\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          disablePadding: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            children: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: catHandler(data.id),\n            sx: {\n              borderRadius: \"0.5rem\",\n              float: \"right\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Category, \"GHgOLPz5mKCSU9dffdEOk4EGTYo=\");\n\n_c = Category;\nexport default Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Category/Category.jsx"],"names":["React","Fragment","useState","useEffect","useCallback","axios","Typography","Button","Grid","Box","Checkbox","List","ListItem","ListItemButton","ListItemText","FormControlLabel","ClearIcon","CONFIG","headers","Accept","catHandler","id","console","log","Category","category","setCategory","loading","setLoading","error","setError","status","setStatus","get","process","env","REACT_APP_API_URL","then","res","data","statusText","catch","err","message","borderRadius","map","name","float"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,EAA+CC,WAA/C,QAAkE,OAAlE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,UADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,GAJF,EAKEC,QALF,EAMEC,IANF,EAOEC,QAPF,EAQEC,cARF,EASEC,YATF,EAUEC,gBAVF,QAWO,eAXP;AAaA,OAAOC,SAAP,MAAsB,2BAAtB;;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE;AACP,oBAAgB,kBADT;AAEPC,IAAAA,MAAM,EAAE;AAFD;AADI,CAAf;;AAOA,MAAMC,UAAU,GAAIC,EAAD,IAAQ;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACD,CAFD;;AAIA,MAAMG,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BxB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACyB,OAAD,EAAUC,UAAV,IAAwB1B,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAAC2B,KAAD,EAAQC,QAAR,IAAoB5B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC6B,MAAD,EAASC,SAAT,IAAsB9B,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACF4B,GADH,CACQ,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,gBADxC,EACyDnB,MADzD,EAEGoB,IAFH,CAESC,GAAD,IAAS;AACbhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,GAAG,CAACC,IAAhB;AACAX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAI,MAAAA,SAAS,CAACM,GAAG,CAACE,UAAL,CAAT;AACAd,MAAAA,WAAW,CAACY,GAAG,CAACC,IAAL,CAAX;AACD,KAPH,EAQGE,KARH,CAQUC,GAAD,IAAS;AACdpB,MAAAA,OAAO,CAACC,GAAR,CAAYmB,GAAZ;AACAd,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACY,GAAG,CAACC,OAAL,CAAR;AACD,KAZH;AAaD,GAdQ,EAcN,EAdM,CAAT;AAeA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,SAAS,MAFX;AAGE,MAAA,EAAE,EAAE;AACFC,QAAAA,YAAY,EAAE;AADZ,OAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAUG,CAACjB,OAAD,GACCF,QAAQ,CAACoB,GAAT,CAAcN,IAAD,iBACX,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,6BACE,QAAC,IAAD;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,cAAc,MAAxB;AAAA,kCACE,QAAC,YAAD;AAAA,sBAAeA,IAAI,CAACO;AAApB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,WADV;AAEE,YAAA,OAAO,EAAE1B,UAAU,CAACmB,IAAI,CAAClB,EAAN,CAFrB;AAGE,YAAA,EAAE,EAAE;AACFuB,cAAAA,YAAY,EAAE,QADZ;AAEFG,cAAAA,KAAK,EAAE;AAFL,aAHN;AAAA,mCAQE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,CADD,gBAqBC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CAzDD;;GAAMvB,Q;;KAAAA,Q;AA2DN,eAAeA,QAAf","sourcesContent":["/** @format */\n\nimport React, { Fragment, useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport {\n  Typography,\n  Button,\n  Grid,\n  Box,\n  Checkbox,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemText,\n  FormControlLabel,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\n\nconst CONFIG = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n};\n\nconst catHandler = (id) => {\n  console.log(id);\n};\n\nconst Category = () => {\n  const [category, setCategory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/category/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setCategory(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  }, []);\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New Category\n      </Button>\n      {!loading ? (\n        category.map((data) => (\n          <Box mt={1}>\n            <List>\n              <ListItem disablePadding>\n                <ListItemText>{data.name}</ListItemText>\n                <Button\n                  variant=\"contained\"\n                  onClick={catHandler(data.id)}\n                  sx={{\n                    borderRadius: \"0.5rem\",\n                    float: \"right\",\n                  }}\n                >\n                  <ClearIcon />\n                </Button>\n              </ListItem>\n            </List>\n          </Box>\n        ))\n      ) : (\n        <Typography>Loading ...</Typography>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Category;\n"]},"metadata":{},"sourceType":"module"}