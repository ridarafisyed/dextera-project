{"ast":null,"code":"var _jsxFileName = \"/home/supersis03/Projects/dextera-project/frontend/src/components/Matter/components/MatterListLong.jsx\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React from \"react\";\nimport { Table, TableContainer, TableHead, TableRow, TableCell } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MatterListLong = () => {\n  _s();\n\n  const [matters, setMatters] = useState(null);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: /*#__PURE__*/_jsxDEV(TableHead, {\n        children: [/*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Matter Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Matter Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Last Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Next Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Assign To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), matters === null || matters === void 0 ? void 0 : matters.map(matter => {\n          /*#__PURE__*/\n          _jsxDEV(TableRow, {\n            id: matter.id,\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: matter.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: matter.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: matter.lastAction\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: matter.nextAction\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: matter.assign_to\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MatterListLong, \"jFk+O+MpGpjpqrnBlrxbFEzLwnc=\");\n\n_c = MatterListLong;\nexport default MatterListLong;\n\nvar _c;\n\n$RefreshReg$(_c, \"MatterListLong\");","map":{"version":3,"sources":["/home/supersis03/Projects/dextera-project/frontend/src/components/Matter/components/MatterListLong.jsx"],"names":["React","Table","TableContainer","TableHead","TableRow","TableCell","MatterListLong","matters","setMatters","useState","map","matter","id","type","name","lastAction","nextAction","assign_to"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,KADF,EAEEC,cAFF,EAGEC,SAHF,EAIEC,QAJF,EAKEC,SALF,QAMO,eANP;;;AAQA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,IAAD,CAAtC;AACA,sBACE,QAAC,cAAD;AAAA,2BACE,QAAC,KAAD;AAAA,6BACE,QAAC,SAAD;AAAA,gCACE,QAAC,QAAD;AAAA,kCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAQGF,OARH,aAQGA,OARH,uBAQGA,OAAO,CAAEG,GAAT,CAAcC,MAAD,IAAY;AACxB;AAAA,kBAAC,QAAD;AAAU,YAAA,EAAE,EAAEA,MAAM,CAACC,EAArB;AAAA,oCACE,QAAC,SAAD;AAAA,wBAAYD,MAAM,CAACE;AAAnB;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,SAAD;AAAA,wBAAYF,MAAM,CAACG;AAAnB;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,SAAD;AAAA,wBAAYH,MAAM,CAACI;AAAnB;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE,QAAC,SAAD;AAAA,wBAAYJ,MAAM,CAACK;AAAnB;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE,QAAC,SAAD;AAAA,wBAAYL,MAAM,CAACM;AAAnB;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAOD,SARA,CARH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA1BD;;GAAMX,c;;KAAAA,c;AA4BN,eAAeA,cAAf","sourcesContent":["/** @format */\n\nimport React from \"react\";\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n} from \"@mui/material\";\n\nconst MatterListLong = () => {\n  const [matters, setMatters] = useState(null);\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Matter Tasks</TableCell>\n            <TableCell>Matter Name</TableCell>\n            <TableCell>Last Action</TableCell>\n            <TableCell>Next Action</TableCell>\n            <TableCell>Assign To</TableCell>\n          </TableRow>\n          {matters?.map((matter) => {\n            <TableRow id={matter.id}>\n              <TableCell>{matter.type}</TableCell>\n              <TableCell>{matter.name}</TableCell>\n              <TableCell>{matter.lastAction}</TableCell>\n              <TableCell>{matter.nextAction}</TableCell>\n              <TableCell>{matter.assign_to}</TableCell>\n            </TableRow>;\n          })}\n        </TableHead>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default MatterListLong;\n"]},"metadata":{},"sourceType":"module"}