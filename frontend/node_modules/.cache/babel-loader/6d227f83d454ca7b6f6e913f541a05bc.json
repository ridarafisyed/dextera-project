{"ast":null,"code":"var _jsxFileName = \"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Dashboards/UserRoles/ClientDashboard.jsx\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React from \"react\"; // import axios from 'axios';\n\nimport { connect } from \"react-redux\";\nimport { Paper, Grid } from \"@mui/material\";\nimport Calender from \"./components/Calender\";\nimport ProgressBar from \"./components/ProgressBar\";\nimport { useToggle } from \"../../context/useToggle\";\nimport Tasks from \"./components/Tasks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ClientDashboard = () => {\n  _s();\n\n  const [calendarToggle, setCalendarToggle] = useToggle(true);\n  const [tasksToggle, setTasksToggle] = useToggle(true);\n  const [progressToggle, setProgressToggle] = useToggle(true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        minHeight: \"84vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [calendarToggle ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Calender, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this) : null, tasksToggle ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          mt: 3,\n          p: 2,\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Tasks, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this) : null, progressToggle ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(ProgressBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ClientDashboard, \"VU9bWds6Mfr61oiR8WtB5qNfPiM=\", false, function () {\n  return [useToggle, useToggle, useToggle];\n});\n\n_c = ClientDashboard;\n\nconst mapStateToProps = state => ({\n  // isAuthenticated: state.auth.isAuthenticated\n  user: state.auth.user\n});\n\nexport default connect(mapStateToProps)(ClientDashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientDashboard\");","map":{"version":3,"sources":["/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Dashboards/UserRoles/ClientDashboard.jsx"],"names":["React","connect","Paper","Grid","Calender","ProgressBar","useToggle","Tasks","ClientDashboard","calendarToggle","setCalendarToggle","tasksToggle","setTasksToggle","progressToggle","setProgressToggle","minHeight","mapStateToProps","state","user","auth"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,eAA5B;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,SAASC,SAAT,QAA0B,yBAA1B;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCJ,SAAS,CAAC,IAAD,CAArD;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,SAAS,CAAC,IAAD,CAA/C;AACA,QAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCR,SAAS,CAAC,IAAD,CAArD;AAEA,sBACE;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAE,CAAlB;AAAqB,MAAA,EAAE,EAAE;AAAES,QAAAA,SAAS,EAAE;AAAb,OAAzB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA,mBACGN,cAAc,gBACb,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA,iCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADa,GAIX,IALN,EAMGE,WAAW,gBACV,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAkB,UAAA,CAAC,EAAE,CAArB;AAAwB,UAAA,EAAE,EAAE,CAA5B;AAAA,iCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADU,GAIR,IAVN,EAWGE,cAAc,gBACb,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADa,GAIX,IAfN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAuBD,CA5BD;;GAAML,e;UACwCF,S,EACNA,S,EACMA,S;;;KAHxCE,e;;AA6BN,MAAMQ,eAAe,GAAIC,KAAD,KAAY;AAClC;AACAC,EAAAA,IAAI,EAAED,KAAK,CAACE,IAAN,CAAWD;AAFiB,CAAZ,CAAxB;;AAIA,eAAejB,OAAO,CAACe,eAAD,CAAP,CAAyBR,eAAzB,CAAf","sourcesContent":["/** @format */\n\nimport React from \"react\";\n// import axios from 'axios';\n\nimport { connect } from \"react-redux\";\n\nimport { Paper, Grid } from \"@mui/material\";\n\nimport Calender from \"./components/Calender\";\nimport ProgressBar from \"./components/ProgressBar\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nimport Tasks from \"./components/Tasks\";\n\nconst ClientDashboard = () => {\n  const [calendarToggle, setCalendarToggle] = useToggle(true);\n  const [tasksToggle, setTasksToggle] = useToggle(true);\n  const [progressToggle, setProgressToggle] = useToggle(true);\n\n  return (\n    <>\n      <Paper elevation={3} sx={{ minHeight: \"84vh\" }}>\n        <Grid container>\n          {calendarToggle ? (\n            <Grid item xs={4}>\n              <Calender />\n            </Grid>\n          ) : null}\n          {tasksToggle ? (\n            <Grid item mt={3} p={2} xs={8}>\n              <Tasks />\n            </Grid>\n          ) : null}\n          {progressToggle ? (\n            <Grid item xs={12}>\n              <ProgressBar />\n            </Grid>\n          ) : null}\n        </Grid>\n      </Paper>\n    </>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated\n  user: state.auth.user,\n});\nexport default connect(mapStateToProps)(ClientDashboard);\n"]},"metadata":{},"sourceType":"module"}