{"ast":null,"code":"import _slicedToArray from\"/home/supersis03/Projects/dextera-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import Button from'@mui/material/Button';import Dialog from'@mui/material/Dialog';import DialogActions from'@mui/material/DialogActions';import DialogContent from'@mui/material/DialogContent';import DialogContentText from'@mui/material/DialogContentText';import DialogTitle from'@mui/material/DialogTitle';import{useToggle}from'../../context/useToggle';import{connect}from'react-redux';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Profile=function Profile(_ref){var user=_ref.user;var _useToggle=useToggle(false),_useToggle2=_slicedToArray(_useToggle,2),open=_useToggle2[0],setOpen=_useToggle2[1];return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:function onClick(){return setOpen(open);},children:\"Open alert dialog\"}),/*#__PURE__*/_jsxs(Dialog,{open:open,onClose:function onClose(){return setOpen(open);},\"aria-labelledby\":\"alert-dialog-title\",\"aria-describedby\":\"alert-dialog-description\",children:[/*#__PURE__*/_jsx(DialogTitle,{id:\"alert-dialog-title\",children:\"Use Google's location service?\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(DialogContentText,{id:\"alert-dialog-description\",children:\"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return setOpen(open);},children:\"Disagree\"}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return setOpen(open);},autoFocus:true,children:\"Agree\"})]})]})]});};var mapStateToProps=function mapStateToProps(state){return{// isAuthenticated: state.auth.isAuthenticated,\nuser:state.auth.user};};export default connect(mapStateToProps)(Profile);","map":{"version":3,"sources":["/home/supersis03/Projects/dextera-project/frontend/src/components/Profile/Profile.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useToggle","connect","Profile","user","open","setOpen","mapStateToProps","state","auth"],"mappings":"yKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAGA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,iCAA9B,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CAEA,OAAQC,SAAR,KAAwB,yBAAxB,CACA,OAAQC,OAAR,KAAsB,aAAtB,C,6IAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,gBAEFH,SAAS,CAAC,KAAD,CAFP,0CAEnBI,IAFmB,gBAEbC,OAFa,gBAK1B,mBACI,wCACA,KAAC,MAAD,EAAQ,OAAO,CAAC,UAAhB,CAA2B,OAAO,CAAE,yBAAKA,CAAAA,OAAO,CAACD,IAAD,CAAZ,EAApC,+BADA,cAII,MAAC,MAAD,EACI,IAAI,CAAEA,IADV,CAEI,OAAO,CAAE,yBAAKC,CAAAA,OAAO,CAACD,IAAD,CAAZ,EAFb,CAGI,kBAAgB,oBAHpB,CAII,mBAAiB,0BAJrB,wBAMI,KAAC,WAAD,EAAa,EAAE,CAAC,oBAAhB,UACC,gCADD,EANJ,cASI,KAAC,aAAD,wBACA,KAAC,iBAAD,EAAmB,EAAE,CAAC,0BAAtB,2IADA,EATJ,cAeI,MAAC,aAAD,yBACA,KAAC,MAAD,EAAQ,OAAO,CAAE,yBAAKC,CAAAA,OAAO,CAACD,IAAD,CAAZ,EAAjB,sBADA,cAEA,KAAC,MAAD,EAAQ,OAAO,CAAE,yBAAKC,CAAAA,OAAO,CAACD,IAAD,CAAZ,EAAjB,CAAqC,SAAS,KAA9C,mBAFA,GAfJ,GAJJ,GADJ,CA6BH,CAlCD,CAmCA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9B;AACAJ,IAAI,CAACI,KAAK,CAACC,IAAN,CAAWL,IAFc,CAAL,EAA7B,CAMA,cAAeF,CAAAA,OAAO,CAACK,eAAD,CAAP,CAAyBJ,OAAzB,CAAf","sourcesContent":["import React from 'react'\n\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport {useToggle} from '../../context/useToggle'\nimport {connect} from 'react-redux'\n\nconst Profile = ( {user} ) => {\n\n    const [open, setOpen] = useToggle(false);\n\n    \n    return (\n        <>\n        <Button variant=\"outlined\" onClick={()=> setOpen(open)}>\n                Open alert dialog\n            </Button>\n            <Dialog\n                open={open}\n                onClose={()=> setOpen(open)}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                {\"Use Google's location service?\"}\n                </DialogTitle>\n                <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    Let Google help apps determine location. This means sending anonymous\n                    location data to Google, even when no apps are running.\n                </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                <Button onClick={()=> setOpen(open)}>Disagree</Button>\n                <Button onClick={()=> setOpen(open)} autoFocus>\n                    Agree\n                </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\nconst mapStateToProps = state => ({\n    // isAuthenticated: state.auth.isAuthenticated,\n    user:state.auth.user\n});\n\n\nexport default connect(mapStateToProps)(Profile);\n"]},"metadata":{},"sourceType":"module"}