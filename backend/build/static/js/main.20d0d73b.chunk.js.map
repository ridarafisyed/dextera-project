{"version":3,"sources":["store/actions/types.js","store/reducers/auth.js","store/reducers/index.js","store/store.js","store/actions/profile.js","store/actions/auth.js","asserts/logo_white copy.png","components/Navbars/Navbar.jsx","styles/styles.jsx","components/Navbars/NavbarSec.jsx","context/useToggle.jsx","components/Sidebar/Sidebar.jsx","hocs/Theme.js","hocs/Layout.js","utils/PrivateRoute.js","context/User/reducer.js","context/User/index.js","containers/Home.js","asserts/login_light.png","containers/Auth/Login.js","asserts/signup_light.png","containers/Auth/Signup.js","containers/Auth/Activate.js","containers/Auth/ResetPassword.js","containers/Auth/ResetPasswordConfirm.js","utils/ActionAlerts.js","api/MatterApi.js","components/Profile/Profile.js","components/Profile/Company.jsx","components/Dashboard/Calender.jsx","components/Dashboard/ProgressBar.jsx","components/Dashboard/Tasks.jsx","containers/Dashboards/UserRoles/AdminDashboard.jsx","containers/Dashboards/UserRoles/ClientDashboard.jsx","containers/Dashboards/UserRoles/LawyerDashboard.jsx","components/Dashboard/Cards.jsx","containers/Dashboards/UserRoles/FirmDashboard.jsx","containers/Dashboards/DashBoard.js","components/Matter/Cards.jsx","components/Matter/Calendar.jsx","components/Matter/MatterList.jsx","containers/Matters/MatterDashboard.jsx","components/Matter/Filters.jsx","components/Matter/MatterCards.jsx","components/Matter/MatterListLong.jsx","containers/Matters/Matters.jsx","components/Matter/MatterDetail.jsx","components/Matter/NewMatter.jsx","components/Invoice/Filters.jsx","components/Invoice/InvoiceList.jsx","containers/Invoice/Invoice.jsx","components/Invoice/CreateInvoice.jsx","components/Invoice/Payment.jsx","components/Category/SubCategory.jsx","components/Category/Category.jsx","components/Category/Classification.jsx","components/Category/ManageCategory.jsx","components/User/CreateUser.jsx","components/User/ManageUser.jsx","components/User/ManageUserGroup.jsx","components/User/UserRole.jsx","components/Legder/Time.jsx","components/Legder/TimeList.jsx","components/Legder/LedgerTImeList.jsx","components/Legder/LedgerActivity.jsx","components/Legder/Fillters.jsx","components/Legder/LedgerCards.jsx","components/Legder/LegderDashbard.jsx","components/Tasks/CreateTask.jsx","components/Tasks/ViewTasks.jsx","components/Legder/LedgerDoc.jsx","components/Job/Ssearch.jsx","components/Job/Result.jsx","components/Job/JobView.jsx","components/Template/Templates.jsx","components/Contact/Contact.jsx","App.js","index.js"],"names":["LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","PASSWORD_RESET_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","GOOGLE_AUTH_SUCCESS","GOOGLE_AUTH_FAIL","FACEBOOK_AUTH_SUCCESS","FACEBOOK_AUTH_FAIL","LOGOUT","PROFILE_CREATED_SUCCESS","PROFILE_CREATED_FAIL","PROFILE_LOADED_SUCCESS","PROFILE_LOADED_FAIL","PROFILE_UPDATE_SUCCESS","PROFILE_UPDATE_FAIL","initialState","access","localStorage","getItem","refresh","isAuthenticated","user","profile","combineReducers","auth","state","action","type","payload","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","create_profile","username","email","dispatch","a","config","headers","Accept","body","JSON","stringify","axios","post","process","res","data","get_profile","get","load_user","Authorization","logout","connect","useState","is_firm","is_lawyer","is_client","localuser","setLocalUser","useEffect","redirect","setRedirect","React","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","logout_user","Box","sx","flexGrow","component","AppBar","position","color","border","Toolbar","Typography","variant","to","src","Logo","alt","style","height","width","Button","aria-controls","aria-haspopup","aria-expanded","undefined","onClick","Menu","id","onClose","MenuListProps","MenuItem","Link","href","SideBarBtn","styled","fontSize","textTransform","textAlign","margin","borderColor","padding","backgroundColor","SecNavbar","boxShadow","LinkButton","textDecoration","borderRadius","cursor","Search","marginRight","theme","spacing","marginLeft","SearchIconWrapper","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","paddingLeft","transition","transitions","create","breakpoints","up","time","Date","toLocaleTimeString","settingAcnchorEl","setSettingAcnchorEl","openSetting","Message","EmailRounded","CalendarToday","CheckBox","NotificationAdd","mr","ml","IconButton","aria-label","Settings","TransitionComponent","Fade","Divider","my","useToggle","isToggled","setIsToggled","useCallback","Sidebar","controlToggle","setControlToggle","Paper","elevation","fullWidth","endIcon","KeyboardArrowDown","marginTop","Grid","item","AddCircle","Receipt","Map","Person","FileCopy","MoneyOff","Work","AssignmentTurnedIn","createTheme","palette","primary","main","secondary","error","red","A400","checkAuthenticated","token","code","children","ThemeProvider","contianer","rowSpacing","columnSpacing","xs","container","direction","wrap","m","p","rest","reducer","active","UserContext","createContext","UserProvider","useReducer","Provider","value","Home","mx","flexDirection","mt","mb","role","login","password","formData","setFormData","onChange","e","target","name","sm","md","backgroundImage","BackgroundImage","backgroundRepeat","t","mode","grey","backgroundSize","backgroundPosition","square","Avatar","bgcolor","Validate","onSubmit","preventDefault","TextField","required","label","autoComplete","autoFocus","minLength","signup","first_name","last_name","re_password","accountCreated","setAccountCreated","isFirm","setIsFirm","console","log","FormLabel","RadioGroup","row","FormControlLabel","control","Radio","FormGroup","Checkbox","verify","uid","match","verified","setVerified","params","reset_password","requestSent","setRequestSent","reset_password_confirm","new_password","re_new_password","ActionAlerts","status","Alert","severity","TotalDays","date1","date2","dt1","dt2","Math","floor","UTC","getFullYear","getMonth","getDate","GetDate","date","CONFIG","setValue","mobile","phone","city","language","locate","search_active","law_school","grad_year","bar_admit_date","undergrad_school","undergrad_area","undergrad_year","bar_no","admitted_practice","practice_time","longest_tenure","average_tenure","current_tenure","past_bar_companies_no","primary_area","TabContext","patch","then","statusText","message","catch","err","borderBottom","TabList","newValue","Tab","TabPanel","defaultValue","disabled","defaultChecked","labelPlacement","float","Company","approvel","setApprovel","f_name","m_name","l_name","c_email","rate","time_zone","group","job_title","street","suite","zip","ext","home","work_no","phone_ext","userData","setUserData","p_email","size","Switch","checked","background","Calender","LocalizationProvider","dateAdapter","AdapterDateFns","StaticDatePicker","shouldDisableDate","isWeekend","renderInput","ProgressBar","progress","paddingRight","LinearProgress","randomDate","start","end","getDateTime","getTime","random","toLocaleDateString","getHours","getMinutes","Task","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","revToggle","setRevToggle","empToggle","setEmpToggle","calendarToggle","setCalendarToggle","tasksToggle","setTasksToggle","progressToggle","setProgressToggle","minHeight","TodayRounded","TrendingUp","HourglassBottom","MonetizationOn","Tasks","Cards","Card","CardContent","gutterBottom","displayType","thousandSeparator","prefix","cardsToggle","px","minWidth","Calendar","List","ListItem","MatterList","tasks","setTasks","setStatus","loading","setLoading","redTask","setRedTask","greenTask","setGreenTask","yellowTask","setYellowTask","myTask","setMyTask","map","task_nature","matter","last_action","next_action","assign_to","MatterDashboard","Filters","age","setAge","handleChange","FormControl","InputLabel","Select","labelId","MatterCards","MatterListLong","matters","setMatters","index","matter_name","contact","matter_type","billing_rate","open_date","close_date","decimalScale","fixedDecimalScale","Matters","MatterTask","components","Activities","MatterDetail","placeholder","inputProps","NewMatter","mask","openDate","setOpenDate","whenDate","setWhenDate","closeDate","setCloseDate","totalDays","setTotalDays","matter_source","matter_status","assign_by","alerts","jurisdiction","status_limitaion","opposing_counsel","where","involved","witnesses","narrative","matterData","setMatterData","days","when","total_days","min","step","DatePicker","inputFormat","multiline","rows","paid","setPaid","InvoiceList","invoice","created","due","tax","interest","discount","total","balance","last_payment","approvel_date","by","created_by","Invoice","CreateInvoice","billable","date_range","create_date","due_date","template","invoice_no","submit","invoiceData","setInvoiceData","dateRange","setDateRange","DateRangePicker","calendars","startProps","endProps","InputLabelProps","shrink","sub_cat","discription","hours","sub","int","dics","biller","PaymentPlan","payment_no","amount","late_fee","total_due","payment","posted","method","paymentData","paddingInline","InvoicePayment","hard","soft","Payment","isPlan","setIsPlan","payment_type","retainer","menu","bank_account","payment_method","SubCategory","subCategory","setSubCategory","setOpen","FetchData","Dialog","handleSubmit","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","disablePadding","ListItemText","delete","Category","category","setCategory","setError","Classification","classification","setClassification","ManageCategory","CreateUser","ManageUser","activityData","setActivityData","ManageUserGroup","setGroup","loadingUser","setLoadingUser","UserRole","Time","pickTime","setPickTime","pickDate","setPickDate","timeToggle","setTimeToggle","setBillable","sub_category","unit","qty","file","detail","bill_by","note","timeData","setTimeData","getSeconds","GetTime","TimePicker","TimeList","conatact","LedgerTImeList","ledgerData","setLedgerData","LedgerActivity","Fillters","billedby","setBilledby","filter","setFilter","LedgerCards","f","LegderDashbard","CreateTask","dueDate","setDueDate","bill","setBill","isPrivate","setIsPrivate","setFile","matter_id","matter_contact","task","filename","taskData","setTaskData","due_at","is_billable","is_private","ViewTasks","LedgerDoc","practice_area","bar_adm_year","undergrad_study","lamguages","admitted_state","relocate","searchData","setSearchData","Result","JobView","mail_add","link","notes","jobData","setJobData","Templates","Contact","company_name","webiste","ger_email","billing_email","plus_4","client_no","dob","ssn","mobile_no","home_no","office_no","fax_no","other_no","email_1","email_2","email_3","street2","suite2","city2","state2","zip2","plus_42","office","team","member","relation","contactData","setContactData","App","exact","path","Login","Signup","ResetPassword","ResetPasswordConfirm","Activate","PrivateRoute","DashBoard","Profile","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20d0d73b.chunk.js","sourcesContent":["/** @format */\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\nexport const GOOGLE_AUTH_SUCCESS = 'GOOGLE_AUTH_SUCCESS';\nexport const GOOGLE_AUTH_FAIL = 'GOOGLE_AUTH_FAIL';\nexport const FACEBOOK_AUTH_SUCCESS = 'FACEBOOK_AUTH_SUCCESS';\nexport const FACEBOOK_AUTH_FAIL = 'FACEBOOK_AUTH_FAIL';\nexport const LOGOUT = 'LOGOUT';\n\nexport const PROFILE_CREATED_SUCCESS = 'PROFILE_CREATED_SUCCESS';\nexport const PROFILE_CREATED_FAIL = 'PROFILE_CREATED_FAIL';\n\nexport const PROFILE_LOADED_SUCCESS = 'PROFILE_LOADED_SUCCESS';\nexport const PROFILE_LOADED_FAIL = 'PROFILE_LOADED_FAIL';\n\nexport const PROFILE_UPDATE_SUCCESS = 'PROFILE_UPDATE_SUCCESS';\nexport const PROFILE_UPDATE_FAIL = 'PROFILE_UPDATE_FAIL';\n","/** @format */\n\nimport {\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  USER_LOADED_SUCCESS,\n  USER_LOADED_FAIL,\n  AUTHENTICATED_SUCCESS,\n  AUTHENTICATED_FAIL,\n  PASSWORD_RESET_SUCCESS,\n  PASSWORD_RESET_FAIL,\n  PASSWORD_RESET_CONFIRM_SUCCESS,\n  PASSWORD_RESET_CONFIRM_FAIL,\n  SIGNUP_SUCCESS,\n  SIGNUP_FAIL,\n  ACTIVATION_SUCCESS,\n  ACTIVATION_FAIL,\n  GOOGLE_AUTH_SUCCESS,\n  GOOGLE_AUTH_FAIL,\n  FACEBOOK_AUTH_SUCCESS,\n  FACEBOOK_AUTH_FAIL,\n  LOGOUT,\n  PROFILE_CREATED_SUCCESS,\n  PROFILE_CREATED_FAIL,\n  PROFILE_LOADED_SUCCESS,\n  PROFILE_LOADED_FAIL,\n  PROFILE_UPDATE_SUCCESS,\n  PROFILE_UPDATE_FAIL,\n} from \"../actions/types\";\n\nconst initialState = {\n  access: localStorage.getItem(\"access\"),\n  refresh: localStorage.getItem(\"refresh\"),\n  isAuthenticated: null,\n  user: null,\n  profile: null,\n};\n// eslint-disable-next-line\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case AUTHENTICATED_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n      };\n    case LOGIN_SUCCESS:\n    case GOOGLE_AUTH_SUCCESS:\n    case FACEBOOK_AUTH_SUCCESS:\n      localStorage.setItem(\"access\", payload.access);\n      localStorage.setItem(\"refresh\", payload.refresh);\n      return {\n        ...state,\n        isAuthenticated: true,\n        access: payload.access,\n        refresh: payload.refresh,\n      };\n    case SIGNUP_SUCCESS:\n    case PROFILE_CREATED_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: false,\n      };\n    case USER_LOADED_SUCCESS:\n      return {\n        ...state,\n        user: payload,\n      };\n    case AUTHENTICATED_FAIL:\n      return {\n        ...state,\n        isAuthenticated: false,\n      };\n    case USER_LOADED_FAIL:\n      return {\n        ...state,\n        user: null,\n      };\n    case PROFILE_LOADED_SUCCESS:\n    case PROFILE_UPDATE_SUCCESS:\n      return {\n        ...state,\n        profile: payload,\n      };\n    case PROFILE_LOADED_FAIL:\n      return {\n        ...state,\n        profile: null,\n      };\n    case GOOGLE_AUTH_FAIL:\n    case FACEBOOK_AUTH_FAIL:\n    case LOGIN_FAIL:\n    case SIGNUP_FAIL:\n    case LOGOUT:\n      localStorage.removeItem(\"access\");\n      localStorage.removeItem(\"refresh\");\n      return {\n        ...state,\n        access: null,\n        refresh: null,\n        isAuthenticated: false,\n        user: null,\n      };\n    case PASSWORD_RESET_SUCCESS:\n    case PASSWORD_RESET_FAIL:\n    case PASSWORD_RESET_CONFIRM_SUCCESS:\n    case PASSWORD_RESET_CONFIRM_FAIL:\n    case ACTIVATION_SUCCESS:\n    case ACTIVATION_FAIL:\n    case PROFILE_UPDATE_FAIL:\n    case PROFILE_CREATED_FAIL:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport auth from './auth';\n\nexport default combineReducers({\n    auth\n});\n","/** @format */\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware)),\n);\n\nexport default store;\n","/** @format */\n\nimport axios from \"axios\";\nimport {\n  PROFILE_UPDATE_FAIL,\n  PROFILE_UPDATE_SUCCESS,\n  PROFILE_LOADED_SUCCESS,\n  PROFILE_LOADED_FAIL,\n  PROFILE_CREATED_FAIL,\n  PROFILE_CREATED_SUCCESS,\n} from \"./types\";\nexport const set_status = (status) => async (dispatch) => {};\nexport const create_profile = (username, email) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n  };\n  const body = JSON.stringify({\n    username,\n    email,\n  });\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/api/profile/`,\n      body,\n      config,\n    );\n\n    dispatch({\n      type: PROFILE_CREATED_SUCCESS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_CREATED_FAIL,\n    });\n  }\n};\n\nexport const get_profile = (username) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n  };\n  const body = JSON.stringify({ username });\n\n  try {\n    const res = await axios.get(\n      `${process.env.REACT_APP_API_URL}/api/profile/`,\n      body,\n      config,\n    );\n    dispatch({\n      type: PROFILE_LOADED_SUCCESS,\n      payload: res.data[0],\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_LOADED_FAIL,\n    });\n  }\n};\n\nexport const update_profile =\n  (\n    id,\n    username,\n    email,\n    mobile,\n    phone,\n    state,\n    city,\n    language,\n    locate,\n    search_active,\n    law_school,\n    grad_year,\n    bar_admit_date,\n    undergrad_school,\n    undergrad_area,\n    undergrad_year,\n    bar_no,\n    admitted_practice,\n    practice_time,\n    longest_tenure,\n    average_tenure,\n    current_tenure,\n    past_bar_companies_no,\n    primary_area,\n  ) =>\n  async (dispatch) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const body = JSON.stringify({\n      username,\n      email,\n      mobile,\n      phone,\n      state,\n      city,\n      language,\n      locate,\n      search_active,\n      law_school,\n      grad_year,\n      bar_admit_date,\n      undergrad_school,\n      undergrad_area,\n      undergrad_year,\n      bar_no,\n      admitted_practice,\n      practice_time,\n      longest_tenure,\n      average_tenure,\n      current_tenure,\n      past_bar_companies_no,\n      primary_area,\n    });\n\n    try {\n      const res = await axios.patch(\n        `${process.env.REACT_APP_API_URL}/api/profile/${id}`,\n        body,\n        config,\n      );\n      dispatch({\n        type: PROFILE_UPDATE_SUCCESS,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: PROFILE_UPDATE_FAIL,\n      });\n    }\n  };\n","/** @format */\n\nimport axios from \"axios\";\nimport {\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  USER_LOADED_SUCCESS,\n  USER_LOADED_FAIL,\n  AUTHENTICATED_SUCCESS,\n  AUTHENTICATED_FAIL,\n  PASSWORD_RESET_SUCCESS,\n  PASSWORD_RESET_FAIL,\n  PASSWORD_RESET_CONFIRM_SUCCESS,\n  PASSWORD_RESET_CONFIRM_FAIL,\n  SIGNUP_SUCCESS,\n  SIGNUP_FAIL,\n  ACTIVATION_SUCCESS,\n  ACTIVATION_FAIL,\n  GOOGLE_AUTH_SUCCESS,\n  GOOGLE_AUTH_FAIL,\n  FACEBOOK_AUTH_SUCCESS,\n  FACEBOOK_AUTH_FAIL,\n  LOGOUT,\n} from \"./types\";\nimport { create_profile, get_profile } from \"./profile\";\n\nexport const load_user = () => async (dispatch) => {\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\n        Accept: \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.get(\n        `${process.env.REACT_APP_API_URL}/auth/users/me/`,\n        config,\n      );\n\n      dispatch({\n        type: USER_LOADED_SUCCESS,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: USER_LOADED_FAIL,\n      });\n    }\n  } else {\n    dispatch({\n      type: USER_LOADED_FAIL,\n    });\n  }\n};\n\nexport const checkAuthenticated = () => async (dispatch) => {\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    };\n\n    const body = JSON.stringify({ token: localStorage.getItem(\"access\") });\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/auth/jwt/verify/`,\n        body,\n        config,\n      );\n\n      if (res.data.code !== \"token_not_valid\") {\n        dispatch({\n          type: AUTHENTICATED_SUCCESS,\n        });\n      } else {\n        dispatch({\n          type: AUTHENTICATED_FAIL,\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: AUTHENTICATED_FAIL,\n      });\n    }\n  } else {\n    dispatch({\n      type: AUTHENTICATED_FAIL,\n    });\n  }\n};\n\nexport const login = (username, email, password) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/auth/jwt/create/`,\n      body,\n      config,\n    );\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n    dispatch(load_user());\n    dispatch(get_profile(username));\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n\nexport const signup =\n  (\n    email,\n    first_name,\n    last_name,\n    username,\n    password,\n    re_password,\n    is_firm,\n    is_client,\n  ) =>\n  async (dispatch) => {\n    const is_lawyer = false;\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const body = JSON.stringify({\n      email,\n      first_name,\n      last_name,\n      username,\n      password,\n      re_password,\n      is_firm,\n      is_lawyer,\n      is_client,\n    });\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/auth/users/`,\n        body,\n        config,\n      );\n      dispatch({\n        type: SIGNUP_SUCCESS,\n        payload: res.data,\n      });\n      dispatch(create_profile(username, email));\n    } catch (err) {\n      dispatch({\n        type: SIGNUP_FAIL,\n      });\n    }\n  };\n\nexport const verify = (uid, token) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ uid, token });\n\n  try {\n    await axios.post(\n      `${process.env.REACT_APP_API_URL}/auth/users/activation/`,\n      body,\n      config,\n    );\n\n    dispatch({\n      type: ACTIVATION_SUCCESS,\n    });\n  } catch (err) {\n    dispatch({\n      type: ACTIVATION_FAIL,\n    });\n  }\n};\n\nexport const reset_password = (email) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ email });\n\n  try {\n    await axios.post(\n      `${process.env.REACT_APP_API_URL}/auth/users/reset_password/`,\n      body,\n      config,\n    );\n\n    dispatch({\n      type: PASSWORD_RESET_SUCCESS,\n    });\n  } catch (err) {\n    dispatch({\n      type: PASSWORD_RESET_FAIL,\n    });\n  }\n};\n\nexport const reset_password_confirm =\n  (uid, token, new_password, re_new_password) => async (dispatch) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\n\n    try {\n      await axios.post(\n        `${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`,\n        body,\n        config,\n      );\n\n      dispatch({\n        type: PASSWORD_RESET_CONFIRM_SUCCESS,\n      });\n    } catch (err) {\n      dispatch({\n        type: PASSWORD_RESET_CONFIRM_FAIL,\n      });\n    }\n  };\n\nexport const logout = () => (dispatch) => {\n  dispatch({\n    type: LOGOUT,\n  });\n};\n\nexport const googleAuthenticate = (state, code) => async (dispatch) => {\n  if (state && code && !localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n    };\n\n    const details = {\n      state: state,\n      code: code,\n    };\n\n    const formBody = Object.keys(details)\n      .map(\n        (key) =>\n          encodeURIComponent(key) + \"=\" + encodeURIComponent(details[key]),\n      )\n      .join(\"&\");\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?${formBody}`,\n        config,\n      );\n\n      dispatch({\n        type: GOOGLE_AUTH_SUCCESS,\n        payload: res.data,\n      });\n\n      dispatch(load_user());\n    } catch (err) {\n      dispatch({\n        type: GOOGLE_AUTH_FAIL,\n      });\n    }\n  }\n};\n\nexport const facebookAuthenticate = (state, code) => async (dispatch) => {\n  if (state && code && !localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n    };\n\n    const details = {\n      state: state,\n      code: code,\n    };\n\n    const formBody = Object.keys(details)\n      .map(\n        (key) =>\n          encodeURIComponent(key) + \"=\" + encodeURIComponent(details[key]),\n      )\n      .join(\"&\");\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/auth/o/facebook/?${formBody}`,\n        config,\n      );\n\n      dispatch({\n        type: FACEBOOK_AUTH_SUCCESS,\n        payload: res.data,\n      });\n\n      dispatch(load_user());\n    } catch (err) {\n      dispatch({\n        type: FACEBOOK_AUTH_FAIL,\n      });\n    }\n  }\n};\n","export default __webpack_public_path__ + \"static/media/logo_white copy.8cf635fb.png\";","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../store/actions/auth\";\n\n// styling imports\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  Typography,\n  Button,\n  Menu,\n  MenuItem,\n} from \"@mui/material\";\n\nimport Logo from \"../../asserts/logo_white copy.png\";\n\nconst Navbar = ({ logout, isAuthenticated, user }) => {\n  const [localuser, setLocalUser] = useState({\n    username: \"Guest\",\n    is_firm: true,\n    is_lawyer: false,\n    is_client: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n  const [redirect, setRedirect] = useState(false);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const logout_user = () => {\n    logout();\n    setRedirect(true);\n  };\n\n  const guestLinks = () => (\n    <Fragment>\n      <Button component={Link} color=\"inherit\" to=\"/login\">\n        Login{\" \"}\n      </Button>\n      <Button component={Link} color=\"inherit\" to=\"/signup\">\n        Sign Up\n      </Button>\n    </Fragment>\n  );\n\n  const authLinks = () => (\n    <Fragment>\n      <Button\n        color=\"inherit\"\n        aria-controls=\"basic-menu\"\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : undefined}\n        onClick={handleClick}\n      >\n        {localuser.username} - ( {localuser.is_firm ? \"Firm\" : \"Client\"} )\n      </Button>\n      <Menu\n        id=\"basic-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          \"aria-labelledby\": \"basic-button\",\n        }}\n      >\n        <MenuItem component={Link} to=\"/profile\">\n          Profile\n        </MenuItem>\n        {/* <MenuItem component={Link} to=''>My account</MenuItem> */}\n        <MenuItem\n          component={Link}\n          color=\"inherit\"\n          href=\"#!\"\n          onClick={logout_user}\n        >\n          Logout\n        </MenuItem>\n      </Menu>\n      <Button component={Link} color=\"inherit\" to=\"/dashboard\">\n        Dashboard\n      </Button>\n      <Button component={Link} color=\"inherit\" href=\"#!\" onClick={logout_user}>\n        Logout\n      </Button>\n    </Fragment>\n  );\n  return (\n    <Fragment>\n      <Box sx={{ flexGrow: 1 }} component=\"nav\">\n        <AppBar position=\"static\" color=\"transparent\" sx={{ border: \"none\" }}>\n          <Toolbar>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n              <Link to=\"/\">\n                <img\n                  src={Logo}\n                  alt=\"logo\"\n                  style={{ height: \"2rem\", width: \"auto\" }}\n                />\n              </Link>\n            </Typography>\n            {isAuthenticated ? authLinks() : guestLinks()}\n          </Toolbar>\n        </AppBar>\n      </Box>\n      {redirect ? <Redirect to=\"/\" /> : <Fragment></Fragment>}\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps, { logout })(Navbar);\n","/** @format */\n\n// import * as React from 'react';\nimport { styled } from \"@mui/styles\";\nimport { Link } from \"react-router-dom\";\nimport { Button, InputBase } from \"@mui/material\";\n\n// export const Login_btn = styled(Button)({\n//     background: 'primary ',\n//     border: 0,\n//     borderRadius: 3,\n//     boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n//     color: 'white',\n//     height: 48,\n//     padding: '0 30px',\n//   });\n\nexport const SideBarBtn = styled(Button)({\n  fontSize: \"0.6em\",\n  textTransform: \"none\",\n  textAlign: \"center\",\n  width: \"8em\",\n  height: \"8em\",\n  margin: \"0.7em\",\n  borderColor: \"#eee\",\n  padding: \"1em\",\n  \"&:hover\": {\n    backgroundColor: \"white\",\n  },\n});\n\nexport const SecNavbar = styled(\"nav\")({\n  boxShadow: \"none\",\n  backgroundColor: \"#1c54b2\",\n  color: \"#eee\",\n  position: \"reletive\",\n  padding: \"0\",\n  margin: \"0\",\n  height: \"3.5rem\",\n  width: \"100%\",\n});\n\nexport const LinkButton = styled(Link)({\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  textDecoration: \"none\",\n  margin: \"0.7em\",\n  backgroundColor: \"#2979ff\",\n  borderColor: \"#2979ff\",\n  color: \"white\",\n  padding: \"0.65rem 1.2rem\",\n  borderRadius: \"0.5rem\",\n  \"&:hover\": {\n    backgroundColor: \"#1c54b2\",\n    cursor: \"pointer\",\n    color: \"white\",\n  },\n});\n\nexport const Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: \"1.5rem\",\n  backgroundColor: \"#eee\",\n  \"&:hover\": {\n    backgroundColor: \"#ddd\",\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: \"40%\",\n}));\n\nexport const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\n","/** @format */\n/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../store/actions/auth\";\n\n// styling imports\nimport {\n  Box,\n  Toolbar,\n  Typography,\n  IconButton,\n  Menu,\n  MenuItem,\n  Fade,\n  Divider,\n} from \"@mui/material\";\n\nimport { SecNavbar } from \"../../styles/styles\";\n\nimport {\n  Message,\n  EmailRounded,\n  CalendarToday,\n  CheckBox,\n  NotificationAdd,\n  Settings,\n} from \"@mui/icons-material/\";\n\nconst NavbarSec = () => {\n  const today = new Date();\n  const time = today.toLocaleTimeString();\n  // const [localuser, setLocalUser] = useState({\n  //   username: \"Guest\",\n  //   is_firm: true,\n  //   is_lawyer: false,\n  //   is_client: false,\n  // });\n\n  // useEffect(() => {\n  //   if (user) {\n  //     setLocalUser({\n  //       username: user.username,\n  //       is_firm: user.is_firm,\n  //       is_lawyer: user.is_lawyer,\n  //       is_client: user.is_client,\n  //     });\n  //   }\n  // }, [user]);\n  const [redirect, setRedirect] = useState(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n\n  const openSetting = Boolean(settingAcnchorEl);\n\n  const handleClick = (event) => {\n    setSettingAcnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setSettingAcnchorEl(null);\n  };\n\n  return (\n    <Fragment>\n      <SecNavbar>\n        <Toolbar>\n          <Box component=\"div\" sx={{ flexGrow: 1 }}>\n            <Message /> <EmailRounded /> <CalendarToday /> <CheckBox />\n          </Box>\n          <NotificationAdd mr={2} />{\" \"}\n          <Typography component=\"h5\" variant=\"h6\" ml={2} mr={2}>\n            |\n          </Typography>\n          <Typography component=\"h5\" variant=\"h6\" mr={2}>\n            {time}\n          </Typography>\n          <IconButton\n            aria-label=\"more\"\n            id=\"long-button\"\n            aria-controls=\"long-menu\"\n            aria-expanded={openSetting ? \"true\" : undefined}\n            aria-haspopup=\"true\"\n            onClick={handleClick}\n            sx={{\n              color: \"white\",\n            }}\n          >\n            <Settings />\n          </IconButton>\n          <Menu\n            id=\"fade-menu\"\n            MenuListProps={{\n              \"aria-labelledby\": \"fade-button\",\n            }}\n            anchorEl={settingAcnchorEl}\n            open={openSetting}\n            onClose={handleClose}\n            TransitionComponent={Fade}\n          >\n            <MenuItem onClick={handleClose}>Setting Option1</MenuItem>\n            <MenuItem onClick={handleClose}>Setting Option2</MenuItem>\n            <Divider sx={{ my: 0.5 }} />\n            <MenuItem onClick={handleClose}>Setting Option3</MenuItem>\n          </Menu>\n        </Toolbar>\n      </SecNavbar>\n\n      {redirect ? <Redirect to=\"/\" /> : <Fragment></Fragment>}\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps, { logout })(NavbarSec);\n","/** @format */\n\nimport { useState, useCallback } from \"react\";\n\nexport const useToggle = (initialState) => {\n  const [isToggled, setIsToggled] = useState(initialState);\n\n  // put [setIsToggled] into the useCallback's dependencies array\n  // this value never changes so the callback is not going to be ever re-created\n  const toggle = useCallback(\n    () => setIsToggled((state) => !state),\n    [setIsToggled],\n  );\n\n  return [isToggled, toggle];\n};\n","/** @format */\n\nimport React from \"react\";\nimport { Button, Box, Grid, Paper } from \"@mui/material\";\n\nimport {\n  KeyboardArrowDown,\n  Task,\n  MoneyOff,\n  FileCopy,\n  Receipt,\n  HourglassBottom,\n  AssignmentTurnedIn,\n  Map,\n  AddCircle,\n  Work,\n  Person,\n} from \"@mui/icons-material\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nimport { SideBarBtn } from \"../../styles/styles\";\nimport { Link } from \"react-router-dom\";\n// import { UserContext } from '../../context/User';\n\nconst Sidebar = () => {\n  const [controlToggle, setControlToggle] = useToggle(true);\n\n  // const [state, dispatch] = useContext(UserContext);\n  return (\n    <Paper elevation={3}>\n      <Button\n        variant=\"text\"\n        fullWidth\n        endIcon={<KeyboardArrowDown />}\n        sx={{ padding: \"0.5em\", marginTop: \"0.5em\", textTransform: \"none\" }}\n        onClick={() => setControlToggle(controlToggle)}\n      >\n        Controls\n      </Button>\n      {controlToggle ? (\n        <Box>\n          <SideBarBtn variant=\"outlined\">\n            <Grid>\n              <Box component={Link} to=\"/dashboard\">\n                <Grid item>\n                  <AddCircle fontSize=\"medium\" />\n                </Grid>\n                <Grid item>DashBoard</Grid>\n              </Box>\n            </Grid>\n          </SideBarBtn>\n          <SideBarBtn variant=\"outlined\">\n            <Grid>\n              <Box component={Link} to=\"/invoices\">\n                <Grid item>\n                  <Receipt fontSize=\"medium\" />\n                </Grid>\n                <Grid item>Invoices</Grid>\n              </Box>\n            </Grid>\n          </SideBarBtn>\n          <SideBarBtn variant=\"outlined\">\n            <Grid>\n              <Box component={Link} to=\"/Profile\">\n                <Grid item>\n                  <Map fontSize=\"medium\" />\n                </Grid>\n                <Grid item>Profile</Grid>\n              </Box>\n            </Grid>\n          </SideBarBtn>\n          <SideBarBtn variant=\"outlined\">\n            <Grid>\n              <Box component={Link} to=\"/users\">\n                <Grid item>\n                  <Person fontSize=\"medium\" />\n                </Grid>\n                <Grid item>Manage User</Grid>\n              </Box>\n            </Grid>\n          </SideBarBtn>\n          <SideBarBtn variant=\"outlined\">\n            <Grid>\n              <Box component={Link} to=\"/manage-categories\">\n                <Grid item>\n                  <FileCopy fontSize=\"medium\" />\n                </Grid>\n                <Grid item>Manage Categories</Grid>\n              </Box>\n            </Grid>\n          </SideBarBtn>\n          <SideBarBtn variant=\"outlined\">\n            <Grid>\n              <Box component={Link} to=\"/ledgers\">\n                <Grid item>\n                  <MoneyOff fontSize=\"medium\" />\n                </Grid>\n                <Grid item>Ledger</Grid>\n              </Box>\n            </Grid>\n          </SideBarBtn>\n          <SideBarBtn variant=\"outlined\">\n            <Grid>\n              <Box component={Link} to=\"/create-task\">\n                <Grid item>\n                  <Task fontSize=\"medium\" />\n                </Grid>\n                <Grid item>New Task</Grid>\n              </Box>\n            </Grid>\n          </SideBarBtn>\n          <SideBarBtn variant=\"outlined\">\n            <Grid>\n              <Box component={Link} to=\"/job-search\">\n                <Grid item>\n                  <Work fontSize=\"medium\" />\n                </Grid>\n                <Grid item>Job Search</Grid>\n              </Box>\n            </Grid>\n          </SideBarBtn>\n          <SideBarBtn variant=\"outlined\">\n            <Grid>\n              <Box component={Link} to=\"/matter-dashboard\">\n                <Grid item>\n                  <AssignmentTurnedIn fontSize=\"medium\" />\n                </Grid>\n                <Grid item>Matters Dashboard</Grid>\n              </Box>\n            </Grid>\n          </SideBarBtn>\n          <SideBarBtn variant=\"outlined\">\n            <Grid>\n              <Box component={Link} to=\"/matters\">\n                <Grid item>\n                  <AssignmentTurnedIn fontSize=\"medium\" />\n                </Grid>\n                <Grid item>Matters</Grid>\n              </Box>\n            </Grid>\n          </SideBarBtn>\n          <SideBarBtn variant=\"outlined\">\n            <Grid>\n              <Box component={Link} to=\"/matter-detail\">\n                <Grid item>\n                  <AssignmentTurnedIn fontSize=\"medium\" />\n                </Grid>\n                <Grid item>Matter Detail</Grid>\n              </Box>\n            </Grid>\n          </SideBarBtn>\n          <SideBarBtn variant=\"outlined\">\n            <Grid>\n              <Box component={Link} to=\"/create-matter\">\n                <Grid item>\n                  <AssignmentTurnedIn fontSize=\"medium\" />\n                </Grid>\n                <Grid item>New Matter</Grid>\n              </Box>\n            </Grid>\n          </SideBarBtn>\n        </Box>\n      ) : null}\n    </Paper>\n  );\n};\n\nexport default Sidebar;\n","import { red } from '@mui/material/colors';\nimport { createTheme } from '@mui/material/styles';\n\n// A custom theme for this app\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n  },\n  // Paper: {\n\n  // },\n  // Box:{\n\n  // },\n});\n\nexport default theme;","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Navbar from \"../components/Navbars/Navbar\";\nimport NavbarSec from \"../components/Navbars/NavbarSec\";\nimport Sidebar from \"../components/Sidebar/Sidebar\";\nimport { connect } from \"react-redux\";\nimport { checkAuthenticated, load_user } from \"../store/actions/auth\";\n\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport { Grid } from \"@mui/material\";\nimport theme from \"./Theme\";\nconst Layout = ({\n  // checkAuthenticated,\n  // load_user,\n  children,\n  isAuthenticated,\n}) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid contianer rowSpacing={2} columnSpacing={2}>\n        <Grid item xs={12}>\n          <Navbar />\n        </Grid>\n\n        {isAuthenticated ? (\n          <Fragment>\n            <Grid item xs={12}>\n              <NavbarSec />\n            </Grid>\n            <Grid container direction=\"row\" wrap=\"nowrap\">\n              <Grid item xs={2} m={3}>\n                <Sidebar />\n              </Grid>\n              <Grid item xs={10} p={1}>\n                {children}\n              </Grid>\n            </Grid>\n          </Fragment>\n        ) : (\n          <Grid item xs={12}>\n            {children}\n          </Grid>\n        )}\n      </Grid>\n    </ThemeProvider>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { checkAuthenticated, load_user })(\n  Layout,\n);\n","import React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport { connect } from 'react-redux';\n\nconst PrivateRoutes = ({ isAuthenticated, children, ...rest}) => {\n    \n\n    return (\n        <Route {...rest}>\n            {isAuthenticated ? children: <Redirect to=\"/login\"/>}\n        </Route>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(PrivateRoutes);","/** @format */\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case 'toggle_button':\n      return {\n        ...state,\n        active: !state.active,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const initialState = {\n  active: false,\n};\n","/** @format */\n\nimport React from 'react';\nimport { reducer, initialState } from './reducer';\n\nexport const UserContext = React.createContext({\n  state: initialState,\n  dispatch: () => null,\n});\n\nexport const UserProvider = ({ children }) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  return (\n    <UserContext.Provider value={[state, dispatch]}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n","/** @format */\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Button, Grid, Box, Typography } from \"@mui/material\";\n\nconst Home = () => (\n  <Grid>\n    <Box\n      sx={{\n        my: 15,\n        mx: 4,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      }}\n    >\n      <Typography component=\"h1\" variant=\"h3\">\n        Welcome to Dextera\n      </Typography>\n      <Typography component=\"h3\" variant=\"h5\">\n        The Law Firm\n      </Typography>\n\n      <Button\n        component={Link}\n        variant=\"contained\"\n        sx={{ mt: 3, mb: 2 }}\n        to=\"/login\"\n        role=\"button\"\n      >\n        Login\n      </Button>\n    </Box>\n  </Grid>\n);\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/login_light.68269488.png\";","/** @format */\n\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../store/actions/auth\";\n\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Box,\n  Typography,\n  TextField,\n} from \"@mui/material\";\n\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\n\nimport BackgroundImage from \"../../asserts/login_light.png\";\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const { username, email, password } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    login(username, email, password);\n  };\n  //   const continueWithGoogle = async () => {\n  //     try {\n  //         const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?redirect_uri=${process.env.REACT_APP_API_URL}/google`)\n\n  //         window.location.replace(res.data.authorization_url);\n  //     } catch (err) {\n\n  //     }\n  // };\n\n  //   const continueWithFacebook = async () => {\n  //       try {\n  //           const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/facebook/?redirect_uri=${process.env.REACT_APP_API_URL}/facebook`)\n\n  //           window.location.replace(res.data.authorization_url);\n  //       } catch (err) {\n\n  //       }\n  //   };\n  if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <Grid container component=\"main\" sx={{ height: \"87vh\" }}>\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={8}\n        sx={{\n          backgroundImage: `url(${BackgroundImage})`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: (t) =>\n            t.palette.mode === \"light\"\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      />\n      <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"warning.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{ mt: 1 }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            {/* csrf_token */}\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              variant=\"standard\"\n              id=\"username\"\n              label=\"Username\"\n              name=\"username\"\n              value={username}\n              onChange={(e) => onChange(e)}\n              autoComplete=\"username\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              variant=\"standard\"\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => onChange(e)}\n              autoComplete=\"email\"\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              variant=\"standard\"\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => onChange(e)}\n              id=\"password\"\n              minLength=\"6\"\n              autoComplete=\"password\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n          </Box>\n          <Grid container>\n            <Grid item xs>\n              <Link to=\"/reset-password\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link to=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","export default __webpack_public_path__ + \"static/media/signup_light.43c9406f.png\";","/** @format */\n\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signup } from \"../../store/actions/auth\";\n\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Box,\n  Typography,\n  TextField,\n  FormControlLabel,\n  FormLabel,\n  FormGroup,\n  Checkbox,\n  RadioGroup,\n  Radio,\n} from \"@mui/material\";\n\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\n\nimport BackgroundImage from \"../../asserts/signup_light.png\";\n\nconst Signup = ({ signup, isAuthenticated }) => {\n  const [accountCreated, setAccountCreated] = useState(false);\n  const [isFirm, setIsFirm] = useState(false);\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    password: \"\",\n    re_password: \"\",\n  });\n\n  const { username, email, first_name, last_name, password, re_password } =\n    formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    let is_firm = isFirm;\n    let is_client = !isFirm;\n\n    if (password === re_password) {\n      signup(\n        email,\n        first_name,\n        last_name,\n        username,\n        password,\n        re_password,\n        is_firm,\n        is_client,\n      );\n\n      setAccountCreated(true);\n    } else {\n      console.log(\"Password no match, Please type again!\");\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (accountCreated) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <Grid container component=\"main\" sx={{ height: \"85vh\" }}>\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={8}\n        sx={{\n          backgroundImage: `url(${BackgroundImage})`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: (t) =>\n            t.palette.mode === \"light\"\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      />\n      <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"warning.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{ mt: 1 }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  value={username}\n                  onChange={(e) => onChange(e)}\n                  autoComplete=\"username\"\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"first_name\"\n                  label=\"First Name\"\n                  name=\"first_name\"\n                  value={first_name}\n                  onChange={(e) => onChange(e)}\n                  autoComplete=\"first_name\"\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"last_name\"\n                  label=\"Last Name\"\n                  name=\"last_name\"\n                  autoComplete=\"last_name\"\n                  value={last_name}\n                  onChange={(e) => onChange(e)}\n                  autoFocus\n                />\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={email}\n                onChange={(e) => onChange(e)}\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"password\"\n                value={password}\n                onChange={(e) => onChange(e)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                name=\"re_password\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                value={re_password}\n                onChange={(e) => onChange(e)}\n                id=\"re_password\"\n                autoComplete=\"re_password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Sign up as a </FormLabel>\n              <RadioGroup\n                row\n                value={isFirm}\n                onChange={(e) => setIsFirm(e.target.value)}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Firm\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"Individual\"\n                />\n              </RadioGroup>\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormGroup>\n                <FormControlLabel\n                  control={<Checkbox />}\n                  label=\"Agreed on Term and Contidions\"\n                />\n              </FormGroup>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Register\n            </Button>\n          </Box>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link to=\"/login\" variant=\"body2\">\n                {\"Already have an account? Sign in\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { signup })(Signup);\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { verify } from \"../../store/actions/auth\";\n\nimport { Button, Grid, Box, Typography } from \"@mui/material\";\n\nconst Activate = ({ verify, match }) => {\n  const [verified, setVerified] = useState(false);\n\n  const verify_account = (e) => {\n    const uid = match.params.uid;\n    const token = match.params.token;\n\n    verify(uid, token);\n    setVerified(true);\n  };\n\n  if (verified) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Grid>\n      <Box\n        sx={{\n          my: 15,\n          mx: 4,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Typography component=\"h1\" variant=\"h3\">\n          Verify your Account:\n        </Typography>\n\n        <Button\n          onClick={verify_account}\n          variant=\"contained\"\n          sx={{ mt: 3, mb: 2 }}\n          to=\"/login\"\n          role=\"button\"\n        >\n          Verify\n        </Button>\n      </Box>\n    </Grid>\n  );\n};\n\nexport default connect(null, { verify })(Activate);\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { reset_password } from \"../../store/actions/auth\";\n\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Box,\n  Typography,\n  TextField,\n} from \"@mui/material\";\n\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\n\nimport BackgroundImage from \"../../asserts/login_light.png\";\n\nconst ResetPassword = ({ reset_password }) => {\n  const [requestSent, setRequestSent] = useState(false);\n  const [formData, setFormData] = useState({\n    email: \"\",\n  });\n\n  const { email } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    reset_password(email);\n    setRequestSent(true);\n  };\n\n  if (requestSent) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <Grid container component=\"main\" sx={{ height: \"87vh\" }}>\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={8}\n        sx={{\n          backgroundImage: `url(${BackgroundImage})`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: (t) =>\n            t.palette.mode === \"light\"\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      />\n      <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"warning.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Request Password Reset\n          </Typography>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{ mt: 1 }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => onChange(e)}\n              autoComplete=\"email\"\n              autoFocus\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Reset Password\n            </Button>\n          </Box>\n          <Grid container>\n            <Grid item xs>\n              <Link to=\"/reset-password\" variant=\"body2\">\n                {\"Already have an account? Sign In\"}\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link to=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default connect(null, { reset_password })(ResetPassword);\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { reset_password_confirm } from \"../../store/actions/auth\";\n\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Box,\n  Typography,\n  TextField,\n} from \"@mui/material\";\n\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\n\nimport BackgroundImage from \"../../asserts/login_light.png\";\n\nconst ResetPasswordConfirm = ({ match, reset_password_confirm }) => {\n  const [requestSent, setRequestSent] = useState(false);\n  const [formData, setFormData] = useState({\n    new_password: \"\",\n    re_new_password: \"\",\n  });\n\n  const { new_password, re_new_password } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const uid = match.params.uid;\n    const token = match.params.token;\n\n    reset_password_confirm(uid, token, new_password, re_new_password);\n    setRequestSent(true);\n  };\n\n  if (requestSent) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <Grid container component=\"main\" sx={{ height: \"87vh\" }}>\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={8}\n        sx={{\n          backgroundImage: `url(${BackgroundImage})`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: (t) =>\n            t.palette.mode === \"light\"\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      />\n      <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"warning.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Set New Password\n          </Typography>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{ mt: 1 }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"new_password\"\n              label=\"Password\"\n              type=\"password\"\n              value={new_password}\n              onChange={(e) => onChange(e)}\n              id=\"new_password\"\n              minLength=\"6\"\n              autoComplete=\"new_password\"\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"re_new_password\"\n              label=\"Confirem Password\"\n              type=\"password\"\n              value={re_new_password}\n              onChange={(e) => onChange(e)}\n              id=\"re_new_password\"\n              minLength=\"6\"\n              autoComplete=\"re_new_password\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Reset Password\n            </Button>\n          </Box>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);\n","/** @format */\n\nimport React from \"react\";\nimport { Alert } from \"@mui/material\";\n\nexport const ActionAlerts = (status) => {\n  switch (status) {\n    case \"OK\":\n      return <Alert severity=\"success\">Sussues</Alert>;\n    case \"error\":\n      return <Alert severity=\"error\">Error</Alert>;\n    default:\n      return (\n        <Alert severity=\"info\">Something went wronge Please tryagain</Alert>\n      );\n  }\n};\n\nexport const TotalDays = (date1, date2) => {\n  let dt1 = new Date(date1);\n  let dt2 = new Date(date2);\n  return Math.floor(\n    (Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) -\n      Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate())) /\n      (1000 * 60 * 60 * 24),\n  );\n};\n\nexport const GetDate = (date) => {\n  let newDate =\n    date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\n  return newDate;\n};\n\nexport const GetTime = (time) => {\n  let newTime =\n    time.getHours() + \":\" + time.getMinutes() + \":\" + time.getSeconds();\n  return newTime;\n};\n","/** @format */\n\n// import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport const CONFIG = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n};\n\nexport const CreateMatter = (\n  contact,\n  matter_name,\n  matter_type,\n  matter_source,\n  matter_status,\n  assign_to,\n  assign_by,\n  billing_rate,\n  alerts,\n  open_date,\n  close_date,\n  total_days,\n  jurisdiction,\n  status_limitaion,\n  opposing_counsel,\n  where,\n  when,\n  involved,\n  witnesses,\n  narrative,\n) => {\n  let status = \"\";\n  const body = JSON.stringify({\n    contact,\n    matter_name,\n    matter_type,\n    matter_source,\n    matter_status,\n    assign_to,\n    assign_by,\n    billing_rate,\n    alerts,\n    open_date,\n    close_date,\n    total_days,\n    jurisdiction,\n    status_limitaion,\n    opposing_counsel,\n    where,\n    when,\n    involved,\n    witnesses,\n    narrative,\n  });\n\n  axios\n    .post(`${process.env.REACT_APP_API_URL}/api/new-matter/`, body, CONFIG)\n    .then((res) => {\n      status = res.statusText;\n    })\n    .catch((err) => {\n      status = err.message;\n    });\n\n  return status;\n};\n\nexport const retrive_matter = () => {};\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  Button,\n  TextField,\n  Checkbox,\n  Grid,\n  FormControlLabel,\n  Tab,\n  Paper,\n  Box,\n  Typography,\n} from \"@mui/material\";\nimport { TabList, TabContext, TabPanel } from \"@mui/lab\";\nimport { connect } from \"react-redux\";\nimport KeyboardArrowRightIcon from \"@mui/icons-material/KeyboardArrowRight\";\nimport axios from \"axios\";\nimport { LinkButton } from \"../../styles/styles\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nimport { update_profile } from \"../../store/actions/profile\";\n\nconst Profile = ({ profile }) => {\n  const [value, setValue] = React.useState(\"1\");\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    mobile: 0,\n    phone: 0,\n    state: \"\",\n    city: \"\",\n    language: \"\",\n    locate: false,\n    search_active: false,\n    law_school: \"\",\n    grad_year: 0,\n    bar_admit_date: \"\",\n    undergrad_school: \"\",\n    undergrad_area: \"\",\n    undergrad_year: \"\",\n    bar_no: 0,\n    admitted_practice: \"\",\n    practice_time: \"\",\n    longest_tenure: \"\",\n    average_tenure: \"\",\n    current_tenure: \"\",\n    past_bar_companies_no: \"\",\n    primary_area: \"\",\n  });\n  const {\n    username,\n    email,\n    mobile,\n    phone,\n    state,\n    city,\n    language,\n    locate,\n    search_active,\n    law_school,\n    grad_year,\n    bar_admit_date,\n    undergrad_school,\n    undergrad_area,\n    undergrad_year,\n    bar_no,\n    admitted_practice,\n    practice_time,\n    longest_tenure,\n    average_tenure,\n    current_tenure,\n    past_bar_companies_no,\n    primary_area,\n  } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let id = profile.id;\n    const body = JSON.stringify({\n      username,\n      email,\n      mobile,\n      phone,\n      state,\n      city,\n      language,\n      locate,\n      search_active,\n      law_school,\n      grad_year,\n      bar_admit_date,\n      undergrad_school,\n      undergrad_area,\n      undergrad_year,\n      bar_no,\n      admitted_practice,\n      practice_time,\n      longest_tenure,\n      average_tenure,\n      current_tenure,\n      past_bar_companies_no,\n      primary_area,\n    });\n    console.log(body);\n    axios\n      .patch(\n        `${process.env.REACT_APP_API_URL}/api/profile/${id}/`,\n        body,\n        CONFIG,\n      )\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Fragment>\n      {profile ? (\n        <Box p={5}>\n          <Paper elevation={5} sx={{ borderRadius: 3 }}>\n            <TabContext value={value} p={8}>\n              <Box component=\"form\" onSubmit={(e) => onSubmit(e)}>\n                <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n                  <TabList\n                    onChange={handleChange}\n                    aria-label=\"lab API tabs example\"\n                  >\n                    <Tab label=\"profile\" value=\"1\" />\n                    <Tab label=\"Education\" value=\"2\" />\n                    <Tab label=\"Work History\" value=\"3\" />\n                  </TabList>\n                </Box>\n                <TabPanel value=\"1\">\n                  <Grid container spacing={2}>\n                    <Grid item sx={12} xs={4}>\n                      <TextField\n                        margin=\"normal\"\n                        fullWidth\n                        variant=\"outlined\"\n                        label=\"Username\"\n                        value={username}\n                        id=\"username\"\n                        name=\"username\"\n                        type=\"text\"\n                        onChange={(e) => onChange(e)}\n                        defaultValue={profile.username}\n                        disabled\n                      />\n                      <TextField\n                        fullWidth\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        label=\"Mobile #\"\n                        id=\"mobile\"\n                        name=\"mobile\"\n                        type=\"number\"\n                        value={mobile}\n                        onChange={(e) => onChange(e)}\n                        defaultValue={profile.mobile}\n                      />\n                      <TextField\n                        fullWidth\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        label=\"Phone #\"\n                        id=\"phone\"\n                        name=\"phone\"\n                        type=\"number\"\n                        value={phone}\n                        onChange={(e) => onChange(e)}\n                        defaultValue={profile.phone}\n                      />\n                    </Grid>\n                    <Grid item xs={4}>\n                      <TextField\n                        fullWidth\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        label=\"Email #\"\n                        id=\"email\"\n                        name=\"email\"\n                        type=\"email\"\n                        value={email}\n                        onChange={(e) => onChange(e)}\n                        defaultValue={profile.email}\n                        disabled\n                      />\n                      <TextField\n                        fullWidth\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        label=\"State\"\n                        id=\"state\"\n                        name=\"state\"\n                        type=\"text\"\n                        value={state}\n                        onChange={(e) => onChange(e)}\n                        defaultValue={profile.state}\n                      />\n                      <TextField\n                        fullWidth\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        label=\"City\"\n                        id=\"city\"\n                        name=\"city\"\n                        type=\"text\"\n                        value={city}\n                        onChange={(e) => onChange(e)}\n                        defaultValue={profile.city}\n                      />\n                    </Grid>\n                    <Grid item xs={4}>\n                      <TextField\n                        fullWidth\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        label=\"Language\"\n                        value={language}\n                        id=\"language\"\n                        name=\"language\"\n                        type=\"text\"\n                        onChange={(e) => onChange(e)}\n                        defaultValue={profile.language}\n                      />\n                      <FormControlLabel\n                        fullWidth\n                        control={<Checkbox defaultChecked />}\n                        label=\"Willing to locate\"\n                        labelPlacement=\"start\"\n                        id=\"locate\"\n                        name=\"locate\"\n                        value={locate}\n                        onChange={(e) => onChange(e)}\n                        defaultValue={profile.locate}\n                      />\n                      <FormControlLabel\n                        fullWidth\n                        control={<Checkbox defaultChecked />}\n                        label=\"Search Type (Active/ Passiv)\"\n                        labelPlacement=\"start\"\n                        id=\"search_active\"\n                        name=\"search_active\"\n                        value={search_active}\n                        onChange={(e) => onChange(e)}\n                        defaultValue={profile.search_active}\n                      />\n                      <br />\n                      <br />\n                      <Button\n                        m={5}\n                        variant=\"contained\"\n                        sx={{\n                          float: \"right\",\n                        }}\n                        color=\"success\"\n                        onClick={() => setValue(\"2\")}\n                        endIcon={<KeyboardArrowRightIcon />}\n                      >\n                        Save & Next\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </TabPanel>\n                <TabPanel value=\"2\">\n                  <Grid container spacing={2}>\n                    <Grid item xs={4}>\n                      <TextField\n                        margin=\"normal\"\n                        fullWidth\n                        variant=\"outlined\"\n                        label=\"Law School\"\n                        id=\"law_school\"\n                        name=\"law_school\"\n                        value={law_school}\n                        onChange={(e) => onChange(e)}\n                        defaultValue={profile.law_school}\n                      />\n                      <TextField\n                        fullWidth\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        label=\"Grad year\"\n                        id=\"grad_year\"\n                        name=\"grad_year\"\n                        type=\"number\"\n                        value={grad_year}\n                        onChange={(e) => onChange(e)}\n                        defaultValue={profile.grad_year}\n                      />\n                      <TextField\n                        fullWidth\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        label=\"Bar Admittance Date\"\n                        id=\"bar_admit_date\"\n                        name=\"bar_admit_date\"\n                        value={bar_admit_date}\n                        onChange={(e) => onChange(e)}\n                        defaultValue={profile.bar_admit_date}\n                      />\n                    </Grid>\n                    <Grid item xs={4}>\n                      <TextField\n                        fullWidth\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        label=\"Undergrad school\"\n                        id=\"undergrad_school\"\n                        name=\"undergrad_school\"\n                        value={undergrad_school}\n                        onChange={(e) => onChange(e)}\n                        defaultValue={profile.undergrad_school}\n                      />\n                      <TextField\n                        fullWidth\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        label=\"Undergrade area of study\"\n                        id=\"undergrad_area\"\n                        name=\"undergrad_area\"\n                        value={undergrad_area}\n                        onChange={(e) => onChange(e)}\n                        defaultValue={profile.undergrad_area}\n                      />\n                      <TextField\n                        fullWidth\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        label=\"Undergrade year\"\n                        id=\"undergrad_year\"\n                        name=\"undergrad_year\"\n                        value={undergrad_year}\n                        onChange={(e) => onChange(e)}\n                        defaultValue={profile.undergrad_year}\n                      />\n                    </Grid>\n                    <Grid item xs={4}>\n                      <TextField\n                        fullWidth\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        label=\"Bar\"\n                        id=\"bar_no\"\n                        type=\"number\"\n                        name=\"bar_no\"\n                        value={bar_no}\n                        onChange={(e) => onChange(e)}\n                        defaultValue={profile.bar_no}\n                      />\n                      <TextField\n                        fullWidth\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        label=\"Admitted practice (state & District)\"\n                        value={admitted_practice}\n                        id=\"admitted_practice\"\n                        name=\"admitted_practice\"\n                        onChange={(e) => onChange(e)}\n                        defaultValue={profile.admitted_practice}\n                      />\n                      <br />\n                      <br />\n                      <Button\n                        variant=\"contained\"\n                        mb={5}\n                        sx={{\n                          float: \"right\",\n                        }}\n                        color=\"success\"\n                        onClick={() => setValue(\"3\")}\n                        endIcon={<KeyboardArrowRightIcon />}\n                      >\n                        Save & Next\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </TabPanel>\n                <TabPanel value=\"3\">\n                  <Grid container spacing={2}>\n                    <Grid item xs={4}>\n                      <TextField\n                        margin=\"normal\"\n                        fullWidth\n                        variant=\"outlined\"\n                        label=\"Practive Time (months / years)\"\n                        id=\"practice_time\"\n                        name=\"practice_time\"\n                        value={practice_time}\n                        onChange={(e) => onChange(e)}\n                        defaultValue={profile.practice_time}\n                      />\n                      <TextField\n                        fullWidth\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        label=\"Longest tenure (months / years)\"\n                        id=\"longest_tenure\"\n                        name=\"longest_tenure\"\n                        value={longest_tenure}\n                        onChange={(e) => onChange(e)}\n                        defaultValue={profile.longest_tenure}\n                      />\n                      <TextField\n                        fullWidth\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        label=\"Average tenure (months / years)\"\n                        value={average_tenure}\n                        onChange={(e) => onChange(e)}\n                        id=\"average_tenure\"\n                        name=\"average_tenure\"\n                        defaultValue={profile.average_tenure}\n                      />\n                    </Grid>\n                    <Grid item xs={4}>\n                      <TextField\n                        fullWidth\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        label=\"Time at Current Company (months / years)\"\n                        id=\"current_tenure\"\n                        name=\"current_tenure\"\n                        value={current_tenure}\n                        onChange={(e) => onChange(e)}\n                        defaultValue={profile.current_tenure}\n                      />\n                      <TextField\n                        fullWidth\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        label=\"# of Companies past Bar\"\n                        id=\"past_bar_companies_no\"\n                        name=\"past_bar_companies_no\"\n                        value={past_bar_companies_no}\n                        onChange={(e) => onChange(e)}\n                        defaultValue={profile.past_bar_companies_no}\n                      />\n                      <TextField\n                        fullWidth\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        label=\"Primary areas of Law\"\n                        id=\"primary_area\"\n                        name=\"primary_area\"\n                        value={primary_area}\n                        onChange={(e) => onChange(e)}\n                        defaultValue={profile.primary_area}\n                      />\n                    </Grid>\n                    <Grid item xs={4}>\n                      <Button\n                        variant=\"contained\"\n                        type=\"submit\"\n                        sx={{\n                          float: \"right\",\n                          marginTop: \"10rem\",\n                        }}\n                        color=\"success\"\n                      >\n                        Save\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </TabPanel>\n              </Box>\n            </TabContext>\n          </Paper>\n        </Box>\n      ) : (\n        <Typography>Something wend wrong!</Typography>\n      )}\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n  profile: state.auth.profile,\n});\n\nexport default connect(mapStateToProps)(Profile);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  Divider,\n  FormControlLabel,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { LinkButton } from \"../../styles/styles\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Company = () => {\n  const [approvel, setApprovel] = useToggle(false);\n  const [userData, setUserData] = useState({\n    f_name: \"\",\n    m_name: \"\",\n    l_name: \"\",\n    c_email: \"\",\n    rate: 0.0,\n    role: \"\",\n    time_zone: \"\",\n    group: \"\",\n    job_title: \"\",\n    bar_no: 0,\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    zip: 0,\n    ext: 0,\n    mobile: 0,\n    home: 0,\n    work_no: 0,\n\n    phone_ext: 0,\n  });\n\n  const {\n    f_name,\n    m_name,\n    l_name,\n    c_email,\n    rate,\n    role,\n    time_zone,\n    group,\n    job_title,\n    bar_no,\n    street,\n    suite,\n    city,\n    state,\n    zip,\n    ext,\n    mobile,\n    home,\n    work_no,\n    p_email,\n    phone_ext,\n  } = userData;\n  const onChange = (e) =>\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({\n      f_name,\n      m_name,\n      l_name,\n      c_email,\n      rate,\n      role,\n      time_zone,\n      group,\n      job_title,\n      bar_no,\n      street,\n      suite,\n      city,\n      state,\n      zip,\n      ext,\n      mobile,\n      home,\n      work_no,\n      p_email,\n      phone_ext,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/create-member/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Box p={3} sx={{ float: \"right\" }}>\n        <LinkButton to=\"/users\">Manage User</LinkButton>\n        <LinkButton to=\"/user-group\">Manage Group</LinkButton>\n        <LinkButton to=\"/user-role\">Manage Role</LinkButton>\n      </Box>\n\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create User\n        </Typography>\n        <Grid container spacing={2} mt={2}>\n          <Grid item xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"f_name\"\n              label=\"f_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"f_name\"\n              autoComplete=\"f_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"m_name\"\n              label=\"m_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"m_name\"\n              autoComplete=\"m_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"l_name\"\n              label=\"l_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"l_name\"\n              autoComplete=\"l_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"c_email\"\n              label=\"c_email\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"c_email\"\n              autoComplete=\"c_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"rate\"\n              label=\"rate\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"rate\"\n              autoComplete=\"rate\"\n            />\n            <FormControlLabel\n              label=\"Round Entries (Round [up/down] to nearnest 0.00 fraction of the hour\"\n              control={\n                <Switch\n                  checked={approvel}\n                  onChange={() => setApprovel(approvel)}\n                />\n              }\n              sx={{ width: \"35rem\" }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"role\"\n              label=\"role\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"role\"\n              autoComplete=\"role\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"time_zone\"\n              label=\"time_zone\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"time_zone\"\n              autoComplete=\"time_zone\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"group\"\n              label=\"group\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"group\"\n              autoComplete=\"group\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"job_title\"\n              label=\"job_title\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"job_title\"\n              autoComplete=\"job_title\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bar_no\"\n              label=\"bar_no\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"bar_no\"\n              autoComplete=\"bar_no\"\n            />\n          </Grid>\n          <Grid item mt={2}>\n            <Divider textAlign=\"left\">\n              <Typography component=\"h3\" variant=\"h5\">\n                Contact Info\n              </Typography>\n            </Divider>\n            <Box>\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"street\"\n                label=\"street\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"street\"\n                autoComplete=\"street\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"suite\"\n                label=\"suite\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"suite\"\n                autoComplete=\"suite\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"city\"\n                label=\"city\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"city\"\n                autoComplete=\"city\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"state\"\n                label=\"state\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"state\"\n                autoComplete=\"state\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"zip\"\n                label=\"zip\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"zip\"\n                autoComplete=\"zip\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"ext\"\n                label=\"ext\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"ext\"\n                autoComplete=\"ext\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"mobile\"\n                label=\"mobile\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"mobile\"\n                autoComplete=\"mobile\"\n              />\n              <Button\n                variant=\"contained\"\n                sx={{ background: \"#5cb85c\", marginTop: \"0.5rem\" }}\n              >\n                Set Password Automaticly\n              </Button>\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"home\"\n                label=\"home\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"home\"\n                autoComplete=\"home\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"work_no\"\n                label=\"work_no\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"work_no\"\n                autoComplete=\"work_no\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"p_email\"\n                label=\"p_email\"\n                type=\"email\"\n                onChange={(e) => onChange(e)}\n                id=\"p_email\"\n                autoComplete=\"p_email\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"phone_ext\"\n                label=\"phone_ext\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"phone_ext\"\n                autoComplete=\"phone_ext\"\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={12}>\n            <Box\n              sx={{\n                \"& .MuiButton-root\": { m: 1 },\n                float: \"right\",\n              }}\n            >\n              <Button variant=\"contained\" type=\"submit\">\n                Create Member\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Company;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport isWeekend from \"date-fns/isWeekend\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport StaticDatePicker from \"@mui/lab/StaticDatePicker\";\nimport { TextField, Box, Paper } from \"@mui/material\";\n\nconst Calender = () => {\n  const [value, setValue] = useState(new Date());\n\n  return (\n    <Box component={Paper} m={2}>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <StaticDatePicker\n          value={value}\n          shouldDisableDate={isWeekend}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(params) => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n    </Box>\n  );\n};\n\nexport default Calender;\n","import React,{useState} from 'react'\nimport { LinearProgress, Box , Grid, Typography} from '@mui/material';\n\nconst ProgressBar = () => {\n    const [progress, setProgress] = useState(69);\n    return (\n        <Box paddingLeft={3} paddingRight={3}>\n        <Grid container >\n          <Grid item xs={1}>\n            <Typography>{progress}%</Typography>\n          </Grid>\n          <Grid item xs={11}mt={2}>\n            <LinearProgress variant=\"determinate\" value = {progress} />\n          </Grid>\n          </Grid>\n        </Box>\n    )\n}\n\nexport default ProgressBar\n","/** @format */\n\nimport React from \"react\";\nimport { Typography, Box, Paper } from \"@mui/material\";\nimport {\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n} from \"@mui/material\";\n\nconst randomDate = (start, end) => {\n  const getDateTime = new Date(\n    start.getTime() + Math.random() * (end.getTime() - start.getTime()),\n  );\n  const date = getDateTime.toLocaleDateString();\n  const hour = getDateTime.getHours();\n  const min = getDateTime.getMinutes();\n\n  return date + \" \" + hour + \":\" + min;\n};\n\nconst Task = () => {\n  return (\n    <Box elevation={3} m={2}>\n      <Typography component=\"h3\" variant=\"h5\">\n        My Tasks\n      </Typography>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>Date</TableCell>\n              <TableCell>Subject</TableCell>\n              <TableCell>Detail</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow>\n              <TableCell>123452</TableCell>\n              <TableCell>\n                {randomDate(new Date(2012, 0, 1), new Date())}\n              </TableCell>\n              <TableCell>Submit Document X</TableCell>\n              <TableCell>Display first 3 links </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>113457</TableCell>\n              <TableCell>\n                {randomDate(new Date(2012, 0, 1), new Date())}\n              </TableCell>\n              <TableCell>Document Y</TableCell>\n              <TableCell>Display more details</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>113455</TableCell>\n              <TableCell>\n                {randomDate(new Date(2012, 0, 1), new Date())}\n              </TableCell>\n              <TableCell>Document Z</TableCell>\n              <TableCell>Note in popup</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>113458</TableCell>\n              <TableCell>\n                {randomDate(new Date(2012, 0, 1), new Date())}\n              </TableCell>\n              <TableCell>Document XY</TableCell>\n              <TableCell>Display First 3 links</TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n\nexport default Task;\n","/** @format */\n\nimport React from \"react\";\n// import axios from 'axios';\n\nimport { connect } from \"react-redux\";\n\nimport { Box, Button, Paper, Grid } from \"@mui/material\";\nimport { SideBarBtn } from \"../../../styles/styles\";\nimport {\n  TodayRounded,\n  TrendingUp,\n  KeyboardArrowDown,\n  Task,\n  MoneyOff,\n  MonetizationOn,\n  FileCopy,\n  HourglassBottom,\n  AssignmentTurnedIn,\n  Map,\n  AddCircle,\n} from \"@mui/icons-material\";\n\nimport Calender from \"../../../components/Dashboard/Calender\";\nimport ProgressBar from \"../../../components/Dashboard/ProgressBar\";\n\nimport { useToggle } from \"../../../context/useToggle\";\n\nimport Tasks from \"../../../components/Dashboard/Tasks\";\n\nconst AdminDashboard = () => {\n  const [revToggle, setRevToggle] = useToggle(true);\n  const [empToggle, setEmpToggle] = useToggle(true);\n\n  const [calendarToggle, setCalendarToggle] = useToggle(true);\n  const [tasksToggle, setTasksToggle] = useToggle(true);\n  const [progressToggle, setProgressToggle] = useToggle(true);\n\n  return (\n    <>\n      <Grid item xs={2}>\n        <Paper elevation={3} sx={{ minHeight: \"84vh\" }}>\n          <Button\n            variant=\"text\"\n            fullWidth\n            endIcon={<KeyboardArrowDown />}\n            sx={{ padding: \"0.3em\", marginTop: \"0.5em\", textTransform: \"none\" }}\n            onClick={() => setRevToggle(revToggle)}\n          >\n            Components\n          </Button>\n\n          {revToggle ? (\n            <Box>\n              <SideBarBtn\n                variant=\"outlined\"\n                onClick={() => setCalendarToggle(calendarToggle)}\n              >\n                <Grid>\n                  <Grid item>\n                    <TodayRounded fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Calendar</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn\n                variant=\"outlined\"\n                onClick={() => setTasksToggle(tasksToggle)}\n              >\n                <Grid>\n                  <Grid item>\n                    <Task fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Tasks</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn\n                variant=\"outlined\"\n                onClick={() => setProgressToggle(progressToggle)}\n              >\n                <Grid>\n                  <Grid item>\n                    <TrendingUp fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Progress</Grid>\n                </Grid>\n              </SideBarBtn>\n            </Box>\n          ) : null}\n\n          <Button\n            variant=\"text\"\n            fullWidth\n            endIcon={<KeyboardArrowDown />}\n            sx={{ padding: \"0.5em\", marginTop: \"0.5em\", textTransform: \"none\" }}\n            onClick={() => setEmpToggle(empToggle)}\n          >\n            Employee Performance\n          </Button>\n\n          {empToggle ? (\n            <Box>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <AddCircle fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>New Accounts</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <Map fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Map</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <AssignmentTurnedIn fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Task Completed</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <HourglassBottom fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Billable Hour</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <FileCopy fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Billable v Non-Billable</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <MoneyOff fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Spending</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <MonetizationOn fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Profit & Lost</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <Task fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Tasks</Grid>\n                </Grid>\n              </SideBarBtn>\n            </Box>\n          ) : null}\n        </Paper>\n      </Grid>\n      <Grid item xs={10}>\n        <Paper elevation={3} sx={{ minHeight: \"84vh\" }}>\n          <Grid container>\n            {calendarToggle ? (\n              <Grid item xs={4}>\n                <Calender />\n              </Grid>\n            ) : null}\n            {tasksToggle ? (\n              <Grid item mt={3} p={2} xs={8}>\n                <Tasks />\n              </Grid>\n            ) : null}\n            {progressToggle ? (\n              <Grid item xs={12}>\n                <ProgressBar />\n              </Grid>\n            ) : null}\n          </Grid>\n        </Paper>\n      </Grid>\n    </>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated\n  user: state.auth.user,\n});\nexport default connect(mapStateToProps)(AdminDashboard);\n","/** @format */\n\nimport React from \"react\";\n// import axios from 'axios';\n\nimport { connect } from \"react-redux\";\n\nimport { Paper, Grid } from \"@mui/material\";\n\nimport { useToggle } from \"../../../context/useToggle\";\n\nimport Calender from \"../../../components/Dashboard/Calender\";\nimport ProgressBar from \"../../../components/Dashboard/ProgressBar\";\n\nimport Tasks from \"../../../components/Dashboard/Tasks\";\n\nconst ClientDashboard = () => {\n  const [calendarToggle, setCalendarToggle] = useToggle(true);\n  const [tasksToggle, setTasksToggle] = useToggle(true);\n  const [progressToggle, setProgressToggle] = useToggle(true);\n\n  return (\n    <>\n      <Paper elevation={3} sx={{ minHeight: \"84vh\" }}>\n        <Grid container>\n          {calendarToggle ? (\n            <Grid item xs={4}>\n              <Calender />\n            </Grid>\n          ) : null}\n          {tasksToggle ? (\n            <Grid item mt={3} p={2} xs={8}>\n              <Tasks />\n            </Grid>\n          ) : null}\n          {progressToggle ? (\n            <Grid item xs={12}>\n              <ProgressBar />\n            </Grid>\n          ) : null}\n        </Grid>\n      </Paper>\n    </>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated\n  user: state.auth.user,\n});\nexport default connect(mapStateToProps)(ClientDashboard);\n","/** @format */\n\nimport React from \"react\";\n// import axios from 'axios';\n\nimport { connect } from \"react-redux\";\n\nimport { Box, Button, Paper, Grid } from \"@mui/material\";\nimport { SideBarBtn } from \"../../../styles/styles\";\nimport {\n  TodayRounded,\n  TrendingUp,\n  KeyboardArrowDown,\n  Task,\n  MoneyOff,\n  MonetizationOn,\n  FileCopy,\n  HourglassBottom,\n  AssignmentTurnedIn,\n  Map,\n  AddCircle,\n} from \"@mui/icons-material\";\n\nimport Calender from \"../../../components/Dashboard/Calender\";\nimport ProgressBar from \"../../../components/Dashboard/ProgressBar\";\nimport Tasks from \"../../../components/Dashboard/Tasks\";\n\nimport { useToggle } from \"../../../context/useToggle\";\n\nconst LawyerDashboard = () => {\n  const [revToggle, setRevToggle] = useToggle(true);\n  const [empToggle, setEmpToggle] = useToggle(true);\n\n  const [calendarToggle, setCalendarToggle] = useToggle(true);\n  const [tasksToggle, setTasksToggle] = useToggle(true);\n  const [progressToggle, setProgressToggle] = useToggle(true);\n\n  return (\n    <>\n      <Grid item xs={2}>\n        <Paper elevation={3} sx={{ minHeight: \"84vh\" }}>\n          <Button\n            variant=\"text\"\n            fullWidth\n            endIcon={<KeyboardArrowDown />}\n            sx={{ padding: \"0.3em\", marginTop: \"0.5em\", textTransform: \"none\" }}\n            onClick={() => setRevToggle(revToggle)}\n          >\n            Components\n          </Button>\n\n          {revToggle ? (\n            <Box>\n              <SideBarBtn\n                variant=\"outlined\"\n                onClick={() => setCalendarToggle(calendarToggle)}\n              >\n                <Grid>\n                  <Grid item>\n                    <TodayRounded fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Calendar</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn\n                variant=\"outlined\"\n                onClick={() => setTasksToggle(tasksToggle)}\n              >\n                <Grid>\n                  <Grid item>\n                    <Task fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Tasks</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn\n                variant=\"outlined\"\n                onClick={() => setProgressToggle(progressToggle)}\n              >\n                <Grid>\n                  <Grid item>\n                    <TrendingUp fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Progress</Grid>\n                </Grid>\n              </SideBarBtn>\n            </Box>\n          ) : null}\n\n          <Button\n            variant=\"text\"\n            fullWidth\n            endIcon={<KeyboardArrowDown />}\n            sx={{ padding: \"0.5em\", marginTop: \"0.5em\", textTransform: \"none\" }}\n            onClick={() => setEmpToggle(empToggle)}\n          >\n            Employee Performance\n          </Button>\n\n          {empToggle ? (\n            <Box>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <AddCircle fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>New Accounts</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <Map fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Map</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <AssignmentTurnedIn fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Task Completed</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <HourglassBottom fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Billable Hour</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <FileCopy fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Billable v Non-Billable</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <MoneyOff fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Spending</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <MonetizationOn fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Profit & Lost</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <Task fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Tasks</Grid>\n                </Grid>\n              </SideBarBtn>\n            </Box>\n          ) : null}\n        </Paper>\n      </Grid>\n      <Grid item xs={10}>\n        <Paper elevation={3} sx={{ minHeight: \"84vh\" }}>\n          <Grid container>\n            {calendarToggle ? (\n              <Grid item xs={4}>\n                <Calender />\n              </Grid>\n            ) : null}\n            {tasksToggle ? (\n              <Grid item mt={3} p={2} xs={8}>\n                <Tasks />\n              </Grid>\n            ) : null}\n            {progressToggle ? (\n              <Grid item xs={12}>\n                <ProgressBar />\n              </Grid>\n            ) : null}\n          </Grid>\n        </Paper>\n      </Grid>\n    </>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated\n  user: state.auth.user,\n});\nexport default connect(mapStateToProps)(LawyerDashboard);\n","/** @format */\n\nimport React from \"react\";\nimport { Box, Card, CardContent, Typography, Grid } from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nconst Cards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item xs={4}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 14 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Revenue In\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={4}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 14 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Revenue out\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={4}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 14 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                New Matters\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={3425}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Cards;\n","/** @format */\n\nimport React from \"react\";\n// import axios from 'axios';\n\nimport { connect } from \"react-redux\";\nimport { Paper, Grid } from \"@mui/material\";\n\nimport Calender from \"../../../components/Dashboard/Calender\";\nimport Tasks from \"../../../components/Dashboard/Tasks\";\nimport Cards from \"../../../components/Dashboard/Cards\";\n\nimport { cardData } from \"../../../data/data\";\n\nimport { useToggle } from \"../../../context/useToggle\";\n\nconst FirmDashboard = () => {\n  // const [revToggle, setRevToggle] = useToggle(true);\n  // const [empToggle, setEmpToggle] = useToggle(true);\n  const [cardsToggle, setCardsToggle] = useToggle(true);\n  // const [sidebarToggle, setSidebarToggle] = useToggle(true);\n\n  const [calendarToggle, setCalendarToggle] = useToggle(true);\n  const [tasksToggle, setTasksToggle] = useToggle(true);\n  // const [progressToggle, setProgressToggle] = useToggle(true);\n\n  return (\n    <>\n      {/*main dashboard section for display  */}\n      <Paper elevation={3} sx={{ minHeight: \"84vh\" }}>\n        <Grid container px={2}>\n          {cardsToggle ? (\n            <Grid item xs={12} mt={2}>\n              <Cards />\n            </Grid>\n          ) : null}\n          {calendarToggle ? (\n            <Grid item xs={4}>\n              <Calender />\n            </Grid>\n          ) : null}\n          {tasksToggle ? (\n            <Grid item mt={3} p={2} xs={8}>\n              <Tasks />\n            </Grid>\n          ) : null}\n        </Grid>\n      </Paper>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated\n  user: state.auth.user,\n});\nexport default connect(mapStateToProps)(FirmDashboard);\n","/** @format */\n\nimport React, { useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport AdminDashboard from \"./UserRoles/AdminDashboard\";\nimport ClientDashboard from \"./UserRoles/ClientDashboard\";\nimport LawyerDashboard from \"./UserRoles/LawyerDashboard\";\nimport FirmDashboard from \"./UserRoles/FirmDashboard\";\n\nconst Dashboard = ({ user }) => {\n  // checker type of user\n  const [localuser, setLocalUser] = useState({\n    username: \"Guest\",\n    is_firm: true,\n    is_lawyer: false,\n    is_client: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n\n  const dashboardRedirect = () => {\n    if (localuser.is_firm) {\n      return <FirmDashboard />;\n    } else if (localuser.is_client) {\n      return <ClientDashboard />;\n    } else if (localuser.is_lawyer) {\n      return <LawyerDashboard />;\n    } else {\n      return <AdminDashboard />;\n    }\n  };\n  return <>{dashboardRedirect()}</>;\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(Dashboard);\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Card, CardContent, Typography } from \"@mui/material\";\n\nconst Cards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Tasks cleared Last day\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Goal Today\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Personal Best\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Company Record\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Cards;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Link, Typography, List, ListItem, Paper } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nconst Calendar = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography variant=\"h6\" component=\"h7\">\n          My Calendar at a Glance\n        </Typography>\n        <List>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Start motion for trail</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Calendar;\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport {\n  Paper,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableBody,\n  TableRow,\n  Typography,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  Box,\n  containerClasses,\n} from \"@mui/material\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { GetDate } from \"../../utils/ActionAlerts\";\n\nconst MatterList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const [redTask, setRedTask] = useState(false);\n  const [greenTask, setGreenTask] = useState(false);\n  const [yellowTask, setYellowTask] = useState(false);\n  const [myTask, setMyTask] = useState(true);\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/tasks/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setTasks(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Box component={Paper} p={2}>\n      <FormGroup aria-label=\"position\" row>\n        <FormControlLabel\n          control={\n            <Checkbox value={myTask} onChange={() => setMyTask(!myTask)} />\n          }\n          label=\"My Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox value={redTask} onChange={() => setRedTask(!redTask)} />\n          }\n          label=\"Red Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              value={greenTask}\n              onChange={() => setGreenTask(!greenTask)}\n            />\n          }\n          label=\"Green Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              value={yellowTask}\n              onChange={() => setYellowTask(!yellowTask)}\n            />\n          }\n          label=\"Yellow Tasks\"\n        />\n      </FormGroup>\n      <Typography component=\"h3\">All Matters Task's List</Typography>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assign To</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {loading\n              ? null\n              : tasks?.map((data) => {\n                  return (\n                    <TableRow id={data.id}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>\n                        {data.task_nature === \"urgent\" ? (\n                          <CircleIcon color=\"error\" />\n                        ) : (\n                          <CircleIcon color=\"success\" />\n                        )}\n                      </TableCell>\n                      <TableCell>{data.matter}</TableCell>\n                      <TableCell>\n                        {data.last_action ? data.next_action : \"-\"}\n                      </TableCell>\n                      <TableCell>\n                        {data.next_action ? data.next_action : \"-\"}\n                      </TableCell>\n                      <TableCell>{data.assign_to}</TableCell>\n                    </TableRow>\n                  );\n                })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n\nexport default MatterList;\n","/** @format */\n\nimport { Grid, Box } from \"@mui/material\";\nimport React, { Fragment } from \"react\";\nimport Cards from \"../../components/Matter/Cards\";\nimport Calendar from \"../../components/Matter/Calendar\";\nimport MatterList from \"../../components/Matter/MatterList\";\n\nconst MatterDashboard = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container spacing={2}>\n          <Grid item xs={7}>\n            <MatterList />\n            <Calendar />\n          </Grid>\n          <Grid item xs={5}>\n            <Cards />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default MatterDashboard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Select,\n  InputLabel,\n  FormControl,\n  MenuItem,\n  Typography,\n} from \"@mui/material\";\n\nconst Filters = () => {\n  // const [user, setUser] = useState(\"Any user\");\n  const [age, setAge] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item>\n          <Typography>Assign To</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography>Organized By</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography>Status</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography color=\"white\">-</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography color=\"white\">-</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Filters;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Card, Button, Typography } from \"@mui/material\";\n\nimport { LinkButton } from \"../../styles/styles\";\n\nconst MatterCards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2} mt={1.5}>\n        <Grid item xs={9}>\n          <Grid container spacing={2}>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  backgroundColor: \"red\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item xs={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Urgent\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  backgroundColor: \"orange\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item xs={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Concern\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  backgroundColor: \"green\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item xs={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Start\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  backgroundColor: \"white\",\n                  color: \"black\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item xs={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      New\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={3}>\n          <Button\n            variant=\"outlined\"\n            sx={{\n              minWidth: 100,\n              height: 40,\n              borderRadius: \"0.5rem\",\n              backgroundColor: \"white\",\n              color: \"black\",\n            }}\n          >\n            Import\n          </Button>\n          <LinkButton to=\"/create-matter\"> + New </LinkButton>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default MatterCards;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n  TableBody,\n} from \"@mui/material\";\nimport { LinkButton } from \"../../styles/styles\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst MatterListLong = () => {\n  const [matters, setMatters] = useState([]);\n\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/new-matter/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setMatters(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  return (\n    <Fragment>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Matter Contact</TableCell>\n              <TableCell>Matter Type</TableCell>\n              <TableCell>Bill Rate</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assigned to</TableCell>\n              <TableCell>Billable</TableCell>\n              <TableCell>Open Invoice</TableCell>\n              <TableCell>Trust Account</TableCell>\n              <TableCell>Last Payment</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {loading\n              ? null\n              : matters?.map((data, index) => {\n                  return (\n                    <TableRow id={index}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>\n                        <CircleIcon color=\"error\" />\n                      </TableCell>\n                      <TableCell>{data.matter_name}</TableCell>\n                      <TableCell>{data.contact}</TableCell>\n                      <TableCell>{data.matter_type}</TableCell>\n                      <TableCell>{data.billing_rate}</TableCell>\n                      <TableCell>{data.open_date}</TableCell>\n                      <TableCell>{data.close_date}</TableCell>\n                      <TableCell>{data.assign_to}</TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 100)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        {\" \"}\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />{\" \"}\n                        - {data.close_date}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default MatterListLong;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box } from \"@mui/material\";\nimport Filters from \"../../components/Matter/Filters\";\nimport MatterCards from \"../../components/Matter/MatterCards\";\nimport MatterListLong from \"../../components/Matter/MatterListLong\";\n\nconst Matters = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container>\n          <Grid item xs={12}>\n            <Filters />\n          </Grid>\n          <Grid item xs={12}>\n            <MatterCards />\n          </Grid>\n          <Grid item xs={12} mt={2}>\n            <MatterListLong />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Matters;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { styled } from \"@mui/material/styles\";\n\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  CardContent,\n  Typography,\n  Card,\n  Grid,\n  Box,\n  List,\n  ListItem,\n  Paper,\n  InputBase,\n} from \"@mui/material\";\n\nconst MatterTask = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography sx={{ fontSize: \"0.8rem\" }}>Upcoming Activity</Typography>\n        <List mt={1} sx={{ fontSize: \"0.75rem\" }}>\n          <ListItem components=\"p\">\n            Date: - Activity - Responsible Party\n          </ListItem>\n          <ListItem components=\"p\">\n            YYYY/MM/DD: - Hearing for MSC - MJJ\n          </ListItem>\n          <ListItem components=\"p\">YYYY/MM/DD: - Trail - KSK</ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Activities = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography sx={{ fontSize: \"0.8rem\" }}>Upcoming Activity</Typography>\n        <List mt={1} sx={{ fontSize: \"0.75rem\" }}>\n          <ListItem components={Typography}>\n            Date: - Activity - Responsible Party\n          </ListItem>\n          <ListItem components={Typography}>\n            YYYY/MM/DD: - Hearing for MSC - MJJ\n          </ListItem>\n          <ListItem components={Typography}>YYYY/MM/DD: - Trail - KSK</ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Cards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                Classification\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                % time spent\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                Matter Completion\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst MatterDetail = () => {\n  const Search = styled(\"div\")(({ theme }) => ({\n    position: \"relative\",\n    borderRadius: \"1.5rem\",\n    backgroundColor: \"#eee\",\n    \"&:hover\": {\n      backgroundColor: \"#ddd\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"40%\",\n  }));\n\n  const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  }));\n\n  const StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: \"inherit\",\n    \"& .MuiInputBase-input\": {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"md\")]: {\n        width: \"20ch\",\n      },\n    },\n  }));\n  // const [matters, setMatters] = useState(null);\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item xs={12}>\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n        </Grid>\n        <Grid item xs={12}>\n          <Grid container spacing={2}>\n            <Grid item mt={2} xs={7}>\n              <TableContainer>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>#</TableCell>\n                      <TableCell>Recent Document</TableCell>\n                      <TableCell>Version</TableCell>\n                      <TableCell>Last Open</TableCell>\n                      <TableCell>User</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>1</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>2</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>3</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                  </TableHead>\n                </Table>\n              </TableContainer>\n              <Grid container spacing={3}>\n                <Grid item>\n                  <Activities />\n                </Grid>\n                <Grid item>\n                  <MatterTask />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item mt={2} xs={5}>\n              <Cards />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default MatterDetail;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { TextField, Box, Grid, Button, Typography } from \"@mui/material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\n\nimport { LocalizationProvider, DateRangePicker, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nimport { CreateMatter, CONFIG } from \"../../api/MatterApi\";\n\nimport { ActionAlerts, TotalDays, GetDate } from \"../../utils/ActionAlerts\";\n\nconst NewMatter = () => {\n  // const matter_number = Math.floor(Math.random() * 10000000);\n  const mask = \"____-__-__\";\n  const matter_number = 23568;\n  const [openDate, setOpenDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [whenDate, setWhenDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [closeDate, setCloseDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [totalDays, setTotalDays] = useState(0);\n  const [matterData, setMatterData] = useState({\n    contact: 0,\n    matter_name: \"\",\n    matter_type: \"\",\n    matter_source: \"\",\n    matter_status: \"\",\n    assign_to: 0,\n    assign_by: 0,\n    billing_rate: 0,\n    alerts: \"\",\n\n    jurisdiction: \"\",\n    status_limitaion: null,\n    opposing_counsel: \"\",\n    where: \"\",\n    involved: \"\",\n    witnesses: \"\",\n    narrative: \"\",\n  });\n\n  const {\n    contact,\n    matter_name,\n    matter_type,\n    matter_source,\n    matter_status,\n    assign_to,\n    assign_by,\n    billing_rate,\n    alerts,\n\n    jurisdiction,\n    status_limitaion,\n    opposing_counsel,\n    where,\n    involved,\n    witnesses,\n    narrative,\n  } = matterData;\n\n  const onChange = (e) =>\n    setMatterData({ ...matterData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let open_date = GetDate(openDate);\n    let close_date = GetDate(closeDate);\n    let when = GetDate(whenDate);\n    let total_days = totalDays;\n    const body = JSON.stringify({\n      contact,\n      matter_name,\n      matter_type,\n      matter_source,\n      matter_status,\n      assign_to,\n      assign_by,\n      billing_rate,\n      alerts,\n      open_date,\n      close_date,\n      total_days,\n      jurisdiction,\n      status_limitaion,\n      opposing_counsel,\n      where,\n      when,\n      involved,\n      witnesses,\n      narrative,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/new-matter/`, body, CONFIG)\n      .then((res) => {\n        <ActionAlerts value={{ status: res.statusText, message: \"Success\" }} />;\n      })\n      .catch((err) => {\n        <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />;\n      });\n    console.log(body);\n  };\n  useEffect(() => {\n    let days = TotalDays(openDate, closeDate);\n    setTotalDays(days);\n  }, [openDate, closeDate]);\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create New Matter\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={8}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"contact\"\n              label=\"contact\"\n              type=\"number\"\n              min=\"0\"\n              value={contact}\n              onChange={(e) => onChange(e)}\n              id=\"contact\"\n              sx={{\n                width: \"97%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_number\"\n              label=\"matter_number\"\n              type=\"text\"\n              value={matter_number}\n              // onChange={(e) => onChange(e)}\n              id=\"matter_number\"\n              disabled\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_name\"\n              label=\"matter_name\"\n              type=\"text\"\n              value={matter_name}\n              onChange={(e) => onChange(e)}\n              id=\"matter_name\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"alerts\"\n              label=\"alerts\"\n              type=\"text\"\n              value={alerts}\n              onChange={(e) => onChange(e)}\n              id=\"alerts\"\n              autoComplete=\"alerts\"\n              sx={{\n                width: \"97%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_type\"\n              label=\"matter_type\"\n              type=\"text\"\n              value={matter_type}\n              onChange={(e) => onChange(e)}\n              id=\"matter_type\"\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_source\"\n              label=\"matter_source\"\n              type=\"text\"\n              value={matter_source}\n              onChange={(e) => onChange(e)}\n              id=\"matter_source\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_status\"\n              label=\"matter_status\"\n              type=\"text\"\n              value={matter_status}\n              onChange={(e) => onChange(e)}\n              id=\"matter_status\"\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"assign_to\"\n              label=\"assign_to\"\n              type=\"number\"\n              value={assign_to}\n              onChange={(e) => onChange(e)}\n              id=\"assign_to\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"billing_rate\"\n              label=\"billing_rate\"\n              step=\"0.01\"\n              type=\"number\"\n              value={billing_rate}\n              onChange={(e) => onChange(e)}\n              id=\"billing_rate\"\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"Open Date\"\n                value={openDate}\n                name=\"open\"\n                id=\"open\"\n                onChange={(e) => setOpenDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"Close Date\"\n                value={closeDate}\n                name=\"closed\"\n                id=\"closed\"\n                onChange={(e) => setCloseDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"total_days\"\n              label=\"total_days\"\n              type=\"number\"\n              value={totalDays}\n              onChange={(e) => setTotalDays(TotalDays(openDate, closeDate))}\n              id=\"total_days\"\n              disabled\n            />\n          </Grid>\n\n          <Grid item xs={4}>\n            <br />\n            <Typography component=\"h5\" variant=\"h6\">\n              Legal Concerns\n            </Typography>\n            <br />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"jurisdiction\"\n              label=\"jurisdiction\"\n              type=\"text\"\n              value={jurisdiction}\n              onChange={(e) => onChange(e)}\n              id=\"jurisdiction\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"status_limitaion\"\n              label=\"status_limitaion\"\n              type=\"text\"\n              value={status_limitaion}\n              onChange={(e) => onChange(e)}\n              id=\"status_limitaion\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"opposing_counsel\"\n              label=\"opposing_counsel\"\n              type=\"text\"\n              value={opposing_counsel}\n              onChange={(e) => onChange(e)}\n              id=\"opposing_counsel\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <Typography component=\"h5\" variant=\"h6\" sx={{ fontSize: \"1rem\" }}>\n              Event Detail\n            </Typography>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"where\"\n              label=\"where\"\n              type=\"text\"\n              value={where}\n              onChange={(e) => onChange(e)}\n              id=\"where\"\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"When\"\n                value={whenDate}\n                name=\"when\"\n                id=\"when\"\n                onChange={(e) => setWhenDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"involved\"\n              label=\"Who was involved\"\n              type=\"text\"\n              value={involved}\n              onChange={(e) => onChange(e)}\n              id=\"involved\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"witnesses\"\n              label=\"witnesses\"\n              type=\"text\"\n              value={witnesses}\n              onChange={(e) => onChange(e)}\n              id=\"witnesses\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              label=\"Customer Narrative of the Event\"\n              multiline\n              type=\"text\"\n              rows={10}\n              value={narrative}\n              onChange={(e) => onChange(e)}\n              defaultValue=\"Narrative\"\n              name=\"narrative\"\n              id=\"narrative\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          sx={{ float: \"right\" }}\n          endIcon={<SaveIcon />}\n        >\n          Save\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default NewMatter;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Box,\n  Switch,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography,\n  FormControlLabel,\n} from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nimport { styled } from \"@mui/material/styles\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nconst Filters = () => {\n  const [paid, setPaid] = useToggle(false);\n\n  const [age, setAge] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n\n  return (\n    <Fragment>\n      <Box\n        p={3}\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n      >\n        <LinkButton to=\"/create-invoice\">Create Invoice</LinkButton>\n        <LinkButton to=\"/recive-invoice\">Receive Money</LinkButton>\n        <FormControlLabel\n          label=\" Paid/ Unpaid\"\n          control={<Switch checked={paid} onChange={() => setPaid(paid)} />}\n        />\n        <Box mt={2}>\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n        </Box>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">All Invoice</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={age}\n            label=\"Age\"\n            onChange={handleChange}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Bill Date</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={age}\n            label=\"Age\"\n            onChange={handleChange}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">All Times</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={age}\n            label=\"Age\"\n            onChange={handleChange}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <Typography component=\"span\" variant=\"h8\" sx={{ width: \"8rem\", m: 2 }}>\n          Status:\n        </Typography>\n\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Any </InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={age}\n            label=\"Age\"\n            onChange={handleChange}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Dropd-own</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={age}\n            label=\"Age\"\n            onChange={handleChange}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Filters;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n} from \"@mui/material\";\nimport Filters from \"./Filters\";\n\nconst InvoiceList = () => {\n  const [invoice, setInvoice] = useState(null);\n\n  // useEffect(() => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   };\n  //   const res = axios.get(\n  //     `${process.env.REACT_APP_API_URL}/api/invoices`,\n  //     config,\n  //   );\n  //   setInvoice(res.data);\n  // }, []);\n\n  return (\n    <Fragment>\n      <Filters />\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Invoice</TableCell>\n              <TableCell>Created</TableCell>\n              <TableCell>Due</TableCell>\n              <TableCell>Tax</TableCell>\n              <TableCell>Interest</TableCell>\n              <TableCell>Discount</TableCell>\n              <TableCell>Total</TableCell>\n              <TableCell>Balance</TableCell>\n              <TableCell>Last Payment</TableCell>\n              <TableCell>Approval Date</TableCell>\n              <TableCell>Approval by</TableCell>\n              <TableCell>Created by</TableCell>\n            </TableRow>\n            {invoice?.map((invoice) => {\n              <TableRow id={invoice.id}>\n                <TableCell>\n                  <Checkbox />\n                </TableCell>\n                <TableCell>{invoice.id}</TableCell>\n                <TableCell>{invoice.created}</TableCell>\n                <TableCell>{invoice.due}</TableCell>\n                <TableCell>{invoice.tax}</TableCell>\n                <TableCell>{invoice.interest}</TableCell>\n                <TableCell>{invoice.discount}</TableCell>\n                <TableCell>{invoice.total}</TableCell>\n                <TableCell>{invoice.balance}</TableCell>\n                <TableCell>{invoice.last_payment}</TableCell>\n                <TableCell>{invoice.approvel_date}</TableCell>\n                <TableCell>{invoice.approvel.by}</TableCell>\n                <TableCell>{invoice.created_by}</TableCell>\n              </TableRow>;\n            })}\n          </TableHead>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default InvoiceList;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport InvoiceList from \"../../components/Invoice/InvoiceList\";\n\nconst Invoice = () => {\n  return (\n    <Fragment>\n      <InvoiceList />\n    </Fragment>\n  );\n};\n\nexport default Invoice;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Typography,\n  Grid,\n  TextField,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n  FormControlLabel,\n  Switch,\n  Button,\n} from \"@mui/material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { LinkButton } from \"../../styles/styles\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nconst CreateInvoice = () => {\n  const [approvel, setApprovel] = useToggle(false);\n  const [invoiceData, setInvoiceData] = useState({\n    matter: \"\",\n    contact: \"\",\n    billable: false,\n    date_range: \"\",\n    create_date: \"\",\n    due_date: \"\",\n    template: \"\",\n    invoice_no: \"\",\n    discount: \"\",\n    submit: false,\n  });\n\n  // const {\n  //   matter,\n  //   contact,\n  //   billable,\n  //   date_range,\n  //   create_date,\n  //   due_date,\n  //   template,\n  //   invoice_no,\n  //   discount,\n  //   submit,\n  // } = invoiceData;\n  const onChange = (e) =>\n    setInvoiceData({ ...invoiceData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  const [invoice, setInvoice] = useState(null);\n  // useEffect(() => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   };\n  //   const res = axios.get(\n  //     `${process.env.REACT_APP_API_URL}/api/invoice`,\n  //     config,\n  //   );\n  //   setInvoice(res.data);\n  // }, []);\n\n  const [dateRange, setDateRange] = React.useState([null, null]);\n  return (\n    <Fragment>\n      <Typography component=\"h3\" variant=\"h4\">\n        Create New Invoice\n      </Typography>\n      <Box p={3}>\n        <LinkButton to=\"/invoices\" sx={{ float: \"right\" }}>\n          Invoice Dashboard\n        </LinkButton>\n      </Box>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter\"\n              label=\"matter\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"matter\"\n              autoComplete=\"matter\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"contact\"\n              label=\"contact\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"contact\"\n              autoComplete=\"contact\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  name=\"billable\"\n                  value=\"billable\"\n                  onChange={(e) => onChange(e)}\n                  id=\"billable\"\n                />\n              }\n              label=\"Unbillable\"\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <Typography sx={{ mt: 2, mb: 1 }}> Date Range </Typography>\n              <DateRangePicker\n                calendars={1}\n                value={dateRange}\n                onChange={(newValue) => {\n                  setDateRange(newValue);\n                }}\n                renderInput={(startProps, endProps) => (\n                  <Fragment>\n                    <TextField size=\"small\" {...startProps} />\n                    <Box sx={{ mx: 2 }}> to </Box>\n                    <TextField size=\"small\" {...endProps} />\n                  </Fragment>\n                )}\n              />\n            </LocalizationProvider>\n            <TextField\n              size=\"small\"\n              id=\"create_date\"\n              label=\"create_date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <TextField\n              size=\"small\"\n              id=\"due_date\"\n              label=\"due_date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"template\"\n              label=\"template\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"template\"\n              autoComplete=\"template\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"contact\"\n              label=\"contact\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"contact\"\n              autoComplete=\"contact\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"invoice_no\"\n              label=\"invoice_no\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"invoice_no\"\n              autoComplete=\"invoice_no\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"discount\"\n              label=\"discount\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"discount\"\n              autoComplete=\"discount\"\n            />\n            <FormControlLabel\n              label=\"Submit For Approvel\"\n              control={\n                <Switch\n                  checked={approvel}\n                  onChange={() => setApprovel(approvel)}\n                />\n              }\n            />\n          </Grid>\n          <Grid item xs={12} mt={2}>\n            <TableContainer>\n              <Table size=\"small\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell></TableCell>\n                    <TableCell>Sub-Category</TableCell>\n                    <TableCell>Description</TableCell>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Hours</TableCell>\n                    <TableCell>Rate</TableCell>\n                    <TableCell>Sub</TableCell>\n                    <TableCell>Tax</TableCell>\n                    <TableCell>int</TableCell>\n                    <TableCell>Disc.</TableCell>\n                    <TableCell>Total</TableCell>\n                    <TableCell>Biller</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                  </TableRow>\n                  {invoice?.map((invoice) => {\n                    <TableRow id={invoice.id}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n\n                      <TableCell>{invoice.sub_cat}</TableCell>\n                      <TableCell>{invoice.discription}</TableCell>\n                      <TableCell>{invoice.date}</TableCell>\n                      <TableCell>{invoice.hours}</TableCell>\n                      <TableCell>{invoice.rate}</TableCell>\n                      <TableCell>{invoice.sub}</TableCell>\n                      <TableCell>{invoice.tax}</TableCell>\n                      <TableCell>{invoice.int}</TableCell>\n                      <TableCell>{invoice.dics}</TableCell>\n                      <TableCell>{invoice.total}</TableCell>\n                      <TableCell>{invoice.biller}</TableCell>\n                    </TableRow>;\n                  })}\n                </TableHead>\n              </Table>\n            </TableContainer>\n          </Grid>\n          <Grid item mt={3}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  name=\"billable\"\n                  value=\"billable\"\n                  onChange={(e) => onChange(e)}\n                  id=\"billable\"\n                />\n              }\n              label=\"Notes\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  name=\"billable\"\n                  value=\"billable\"\n                  onChange={(e) => onChange(e)}\n                  id=\"Accept Online Payment\"\n                />\n              }\n              label=\"Unbillable\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  name=\"billable\"\n                  value=\"billable\"\n                  onChange={(e) => onChange(e)}\n                  id=\"billable\"\n                />\n              }\n              label=\"Terms & Conditions\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  name=\"billable\"\n                  value=\"billable\"\n                  onChange={(e) => onChange(e)}\n                  id=\"billable\"\n                />\n              }\n              label=\"Add interest (Compound / Simple)\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  name=\"billable\"\n                  value=\"billable\"\n                  onChange={(e) => onChange(e)}\n                  id=\"billable\"\n                />\n              }\n              label=\"Use Trust Balanace\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  name=\"billable\"\n                  value=\"billable\"\n                  onChange={(e) => onChange(e)}\n                  id=\"billable\"\n                />\n              }\n              label=\"Send Reminders Every\"\n            />\n            <TextField size=\"small\" sx={{ width: \"5rem\" }} />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  name=\"billable\"\n                  value=\"billable\"\n                  onChange={(e) => onChange(e)}\n                  id=\"billable\"\n                />\n              }\n              label=\"Add all unpaid invoices\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  name=\"billable\"\n                  value=\"billable\"\n                  onChange={(e) => onChange(e)}\n                  id=\"billable\"\n                />\n              }\n              label=\"use Operating Balance\"\n            />\n            <br />\n            <Button\n              variant=\"contained\"\n              sx={{ float: \"right\" }}\n              endIcon={<SaveIcon />}\n            >\n              Send\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateInvoice;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  Grid,\n  Box,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  FormControl,\n  Checkbox,\n  Typography,\n  TextField,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableCell,\n  Button,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nconst PaymentPlan = () => {\n  const [paymentData, setPaymentData] = useState({\n    payment_no: \"File# - 001\",\n    due: \"2020/07/01\",\n    amount: \"$ 750.00\",\n    late_fee: \"$22.00\",\n    total_due: \"$ 775.00\",\n    payment: \"$775.00\",\n    posted: \"$2020/07/05\",\n    method: \"Check\",\n  });\n\n  return (\n    <Fragment>\n      <Grid container mt={3} mb={3}>\n        <Grid item xs={4}>\n          <Typography>Start Balance:</Typography>\n          <Typography>Start Date:</Typography>\n          <Typography>Interest Rate:</Typography>\n        </Grid>\n        <Grid item xs={4}>\n          <Typography>Payment Amout:</Typography>\n          <Typography>Payment Date:</Typography>\n          <Typography>No Payments:</Typography>\n        </Grid>\n        <Grid item xs={4}>\n          <Typography>Payment Remaining:</Typography>\n          <Typography>Last Payment:</Typography>\n          <Typography>Last Payment $:</Typography>\n        </Grid>\n      </Grid>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Payment #</TableCell>\n            <TableCell>Due</TableCell>\n            <TableCell>Amout</TableCell>\n            <TableCell>Late Fee</TableCell>\n            <TableCell>Total Due</TableCell>\n            <TableCell>Payment</TableCell>\n            <TableCell>Posted</TableCell>\n            <TableCell>Method</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableCell>\n            <Checkbox />\n          </TableCell>\n          <TableCell>{paymentData.payment_no}</TableCell>\n          <TableCell>{paymentData.due}</TableCell>\n          <TableCell>{paymentData.amount} </TableCell>\n          <TableCell>{paymentData.late_fee}</TableCell>\n          <TableCell>{paymentData.total_due}</TableCell>\n          <TableCell>{paymentData.payment}</TableCell>\n          <TableCell>{paymentData.posted}</TableCell>\n          <TableCell>{paymentData.method}</TableCell>\n        </TableBody>\n      </Table>\n      <Button\n        variant=\"contained\"\n        sx={{\n          float: \"right\",\n          borderRadius: \"0.5rem\",\n          paddingInline: \"2rem\",\n          marginTop: \"2rem\",\n        }}\n      >\n        Close\n      </Button>{\" \"}\n    </Fragment>\n  );\n};\n\nconst InvoicePayment = () => {\n  const [invoiceData, setInvoiceData] = useState({\n    invoice_no: \"i-2106-0004542\",\n    due: \"2020/07/01\",\n    tax: \"$ 15.00\",\n    interest: \"$2.35\",\n    time: \"$ 1,234.50\",\n    hard: \"$457.00\",\n    soft: \"$45.00\",\n    total: \"$ 1,753.85\",\n  });\n\n  return (\n    <Fragment>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Invoice</TableCell>\n            <TableCell>Due</TableCell>\n            <TableCell>Tax</TableCell>\n            <TableCell>Interest</TableCell>\n            <TableCell>Time</TableCell>\n            <TableCell>Hard</TableCell>\n            <TableCell>Soft</TableCell>\n            <TableCell>Total</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableCell>\n            <Checkbox />\n          </TableCell>\n          <TableCell>{invoiceData.invoice_no}</TableCell>\n          <TableCell>{invoiceData.due}</TableCell>\n          <TableCell>{invoiceData.tax} </TableCell>\n          <TableCell>{invoiceData.interest}</TableCell>\n          <TableCell>{invoiceData.time}</TableCell>\n          <TableCell>{invoiceData.hard}</TableCell>\n          <TableCell>{invoiceData.soft}</TableCell>\n          <TableCell>{invoiceData.total}</TableCell>\n        </TableBody>\n      </Table>{\" \"}\n      <Button\n        variant=\"contained\"\n        sx={{\n          float: \"right\",\n          borderRadius: \"0.5rem\",\n          paddingInline: \"2rem\",\n          marginTop: \"2rem\",\n        }}\n      >\n        Pay\n      </Button>{\" \"}\n    </Fragment>\n  );\n};\n\nconst Payment = () => {\n  const [dateRange, setDateRange] = useState([null, null]);\n  const [isPlan, setIsPlan] = useToggle(false);\n  const [invoiceData, setInvoiceData] = useState({\n    payment_type: \"\",\n    date: \"\",\n    retainer: \"\",\n    payment: \"\",\n    date_range: \"\",\n    menu: \"\",\n    bank_account: \"\",\n    payment_method: \"\",\n  });\n\n  // const {\n  //   payment_type,\n  //   date,\n  //   retainer,\n  //   payment,\n  //   date_range,\n  //   menu,\n  //   bank_account,\n  //   payment_method,\n  // } = invoiceData;\n  const onChange = (e) =>\n    setInvoiceData({ ...invoiceData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item xs={12}>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{\n              \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n            }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            <FormControl component=\"fieldset\">\n              <RadioGroup\n                row\n                aria-label=\"payment_type\"\n                defaultValue=\"cash\"\n                name=\"payment_type\"\n                onChange={(e) => onChange(e)}\n                id=\"payment_type\"\n                autoComplete=\"payment_type\"\n              >\n                <FormControlLabel\n                  value=\"cash\"\n                  control={<Radio />}\n                  label=\"Cash\"\n                />\n                <FormControlLabel value=\"cc\" control={<Radio />} label=\"CC\" />\n                <FormControlLabel\n                  value=\"wire\"\n                  control={<Radio />}\n                  label=\"Wire\"\n                />\n                <FormControlLabel\n                  value=\"check\"\n                  control={<Radio />}\n                  label=\"Check\"\n                />\n              </RadioGroup>\n            </FormControl>\n            <TextField\n              size=\"small\"\n              id=\"date\"\n              label=\"date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <FormControlLabel\n              value=\"retainer\"\n              control={<Checkbox />}\n              label=\"Retainer\"\n            />\n            <FormControlLabel\n              value=\"payment\"\n              control={<Checkbox />}\n              label=\"Payment\"\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <Typography sx={{ mt: 2, mb: 1 }}> Date Range </Typography>\n              <DateRangePicker\n                calendars={1}\n                value={dateRange}\n                onChange={(newValue) => {\n                  setDateRange(newValue);\n                }}\n                renderInput={(startProps, endProps) => (\n                  <Fragment>\n                    <TextField size=\"small\" {...startProps} />\n                    <Box sx={{ mx: 2 }}> to </Box>\n                    <TextField size=\"small\" {...endProps} />\n                  </Fragment>\n                )}\n              />\n            </LocalizationProvider>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"menu\"\n              label=\"menu\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"menu\"\n              autoComplete=\"menu\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bank_account\"\n              label=\"bank_account\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"bank_account\"\n              autoComplete=\"bank_account\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"payment_method\"\n              label=\"payment_method\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"payment_method\"\n              autoComplete=\"payment_method\"\n            />\n            <FormControl component=\"fieldset\">\n              <RadioGroup\n                row\n                aria-label=\"isPlan\"\n                defaultValue={isPlan}\n                name=\"isPlan\"\n                onChange={(e) => setIsPlan(e)}\n                id=\"isPlan\"\n                autoComplete=\"isPlan\"\n              >\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"Invoice Payment\"\n                />\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Payment Plan\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Box>\n        </Grid>\n        <Grid item xs={12}>\n          <TableContainer>\n            {isPlan ? <PaymentPlan /> : <InvoicePayment />}\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Payment;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst SubCategory = () => {\n  const [subCategory, setSubCategory] = useState([]);\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/sub-category/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setSubCategory(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/sub-category/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        setStatus(res.statusText);\n      })\n      .catch((err) => setStatus(err.statusText));\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/sub-category/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n      })\n      .catch((err) => {\n        FetchData();\n      });\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New Sub-Category\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Add New Sub-Category\"}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Sub-Category Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? (\n        subCategory.map((data) => (\n          <Box mt={1}>\n            <List>\n              <ListItem disablePadding>\n                <ListItemText>{data.name}</ListItemText>\n                <Button\n                  variant=\"contained\"\n                  value={data.id}\n                  onClick={() => handleDelete(data.id)}\n                  sx={{\n                    borderRadius: \"0.5rem\",\n                    float: \"right\",\n                  }}\n                >\n                  <ClearIcon />\n                </Button>\n              </ListItem>\n            </List>\n          </Box>\n        ))\n      ) : (\n        <Typography>Loading ...</Typography>\n      )}\n    </Fragment>\n  );\n};\n\nexport default SubCategory;\n","/** @format */\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst catHandler = (id) => {\n  console.log(id);\n};\n\nconst Category = () => {\n  const [category, setCategory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/category/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setCategory(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/category/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/category/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New category\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Add New Category\"}</DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Category Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? (\n        category.map((data) => (\n          <Box mt={1}>\n            <List>\n              <ListItem disablePadding>\n                <ListItemText>{data.name}</ListItemText>\n                <Button\n                  variant=\"contained\"\n                  value={data.id}\n                  onClick={() => handleDelete(data.id)}\n                  sx={{\n                    borderRadius: \"0.5rem\",\n                    float: \"right\",\n                  }}\n                >\n                  <ClearIcon />\n                </Button>\n              </ListItem>\n            </List>\n          </Box>\n        ))\n      ) : (\n        <Typography>Loading ...</Typography>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Category;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Classification = () => {\n  const [classification, setClassification] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/classification/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setClassification(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/classification/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        setStatus(res.statusText);\n        return <ActionAlerts value={{ status: status }} />;\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/api/classification/`,\n        body,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        return <ActionAlerts value={{ status: res.statusText }} />;\n      })\n      .catch((err) => {\n        FetchData();\n        return <ActionAlerts value={{ status: err.statusText }} />;\n      });\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New Classification\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Add New Classification\"}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Classification Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? (\n        classification.map((data) => (\n          <Box mt={1}>\n            <List>\n              <ListItem disablePadding>\n                <ListItemText>{data.name}</ListItemText>\n                <Button\n                  variant=\"contained\"\n                  value={data.id}\n                  onClick={() => handleDelete(data.id)}\n                  sx={{\n                    borderRadius: \"0.5rem\",\n                    float: \"right\",\n                  }}\n                >\n                  <ClearIcon />\n                </Button>\n              </ListItem>\n            </List>\n          </Box>\n        ))\n      ) : (\n        <Typography>Loading ...</Typography>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Classification;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport { Typography, Grid } from \"@mui/material\";\n\nimport SubCategory from \"./SubCategory\";\nimport Category from \"./Category\";\nimport Classification from \"./Classification\";\n\nconst ManageCategory = () => {\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item xs={8}>\n          <Typography component=\"h3\" variant=\"h5\">\n            Manage Category, Sub-category, Classification\n          </Typography>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Grid container spacing={5} mt={1}>\n            <Grid item xs={4}>\n              <Category />\n            </Grid>\n            <Grid item xs={4}>\n              <SubCategory />\n            </Grid>\n            <Grid item xs={4}>\n              <Classification />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ManageCategory;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  Divider,\n  FormControlLabel,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { LinkButton } from \"../../styles/styles\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst CreateUser = () => {\n  const [approvel, setApprovel] = useToggle(false);\n  const [userData, setUserData] = useState({\n    f_name: \"\",\n    m_name: \"\",\n    l_name: \"\",\n    c_email: \"\",\n    rate: 0.0,\n    role: \"\",\n    time_zone: \"\",\n    group: \"\",\n    job_title: \"\",\n    bar_no: 0,\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    zip: 0,\n    ext: 0,\n    mobile: 0,\n    home: 0,\n    work_no: 0,\n    p_email: \"\",\n    phone_ext: 0,\n  });\n\n  const {\n    f_name,\n    m_name,\n    l_name,\n    c_email,\n    rate,\n    role,\n    time_zone,\n    group,\n    job_title,\n    bar_no,\n    street,\n    suite,\n    city,\n    state,\n    zip,\n    ext,\n    mobile,\n    home,\n    work_no,\n    p_email,\n    phone_ext,\n  } = userData;\n  const onChange = (e) =>\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({\n      f_name,\n      m_name,\n      l_name,\n      c_email,\n      rate,\n      role,\n      time_zone,\n      group,\n      job_title,\n      bar_no,\n      street,\n      suite,\n      city,\n      state,\n      zip,\n      ext,\n      mobile,\n      home,\n      work_no,\n      p_email,\n      phone_ext,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/create-member/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Box p={3} sx={{ float: \"right\" }}>\n        <LinkButton to=\"/users\">Manage User</LinkButton>\n        <LinkButton to=\"/user-group\">Manage Group</LinkButton>\n        <LinkButton to=\"/user-role\">Manage Role</LinkButton>\n      </Box>\n\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create User\n        </Typography>\n        <Grid container spacing={2} mt={2}>\n          <Grid item xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"f_name\"\n              label=\"f_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"f_name\"\n              autoComplete=\"f_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"m_name\"\n              label=\"m_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"m_name\"\n              autoComplete=\"m_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"l_name\"\n              label=\"l_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"l_name\"\n              autoComplete=\"l_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"c_email\"\n              label=\"c_email\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"c_email\"\n              autoComplete=\"c_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"rate\"\n              label=\"rate\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"rate\"\n              autoComplete=\"rate\"\n            />\n            <FormControlLabel\n              label=\"Round Entries (Round [up/down] to nearnest 0.00 fraction of the hour\"\n              control={\n                <Switch\n                  checked={approvel}\n                  onChange={() => setApprovel(approvel)}\n                />\n              }\n              sx={{ width: \"35rem\" }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"role\"\n              label=\"role\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"role\"\n              autoComplete=\"role\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"time_zone\"\n              label=\"time_zone\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"time_zone\"\n              autoComplete=\"time_zone\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"group\"\n              label=\"group\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"group\"\n              autoComplete=\"group\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"job_title\"\n              label=\"job_title\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"job_title\"\n              autoComplete=\"job_title\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bar_no\"\n              label=\"bar_no\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"bar_no\"\n              autoComplete=\"bar_no\"\n            />\n          </Grid>\n          <Grid item mt={2}>\n            <Divider textAlign=\"left\">\n              <Typography component=\"h3\" variant=\"h5\">\n                Contact Info\n              </Typography>\n            </Divider>\n            <Box>\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"street\"\n                label=\"street\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"street\"\n                autoComplete=\"street\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"suite\"\n                label=\"suite\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"suite\"\n                autoComplete=\"suite\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"city\"\n                label=\"city\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"city\"\n                autoComplete=\"city\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"state\"\n                label=\"state\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"state\"\n                autoComplete=\"state\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"zip\"\n                label=\"zip\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"zip\"\n                autoComplete=\"zip\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"ext\"\n                label=\"ext\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"ext\"\n                autoComplete=\"ext\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"mobile\"\n                label=\"mobile\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"mobile\"\n                autoComplete=\"mobile\"\n              />\n              <Button\n                variant=\"contained\"\n                sx={{ background: \"#5cb85c\", marginTop: \"0.5rem\" }}\n              >\n                Set Password Automaticly\n              </Button>\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"home\"\n                label=\"home\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"home\"\n                autoComplete=\"home\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"work_no\"\n                label=\"work_no\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"work_no\"\n                autoComplete=\"work_no\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"p_email\"\n                label=\"p_email\"\n                type=\"email\"\n                onChange={(e) => onChange(e)}\n                id=\"p_email\"\n                autoComplete=\"p_email\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"phone_ext\"\n                label=\"phone_ext\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"phone_ext\"\n                autoComplete=\"phone_ext\"\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={12}>\n            <Box\n              sx={{\n                \"& .MuiButton-root\": { m: 1 },\n                float: \"right\",\n              }}\n            >\n              <Button variant=\"contained\" type=\"submit\">\n                Create Member\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateUser;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst ManageUser = () => {\n  const [activityData, setActivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/create-member/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setActivityData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Fragment>\n      <Box>\n        <Typography component=\"h4\" variant=\"h5\" mb={2}>\n          Manage Users\n        </Typography>\n        <Box p={3} sx={{ float: \"right\" }}>\n          <LinkButton to=\"/create-user\">Create User</LinkButton>\n          <LinkButton to=\"/user-group\">Manage User Group</LinkButton>\n          <LinkButton to=\"/user-role\">Manage User Role</LinkButton>\n        </Box>\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>First Name</TableCell>\n                <TableCell>Last Name</TableCell>\n                <TableCell>Email</TableCell>\n                <TableCell>Role</TableCell>\n                <TableCell>Group</TableCell>\n                <TableCell>Last Login</TableCell>\n                <TableCell>Status</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {loading\n                ? null\n                : activityData?.map((data) => {\n                    return (\n                      <TableRow>\n                        <TableCell>{data.f_name}</TableCell>\n                        <TableCell>{data.l_name}</TableCell>\n                        <TableCell>{data.p_email}</TableCell>\n                        <TableCell>{data.role}</TableCell>\n                        <TableCell>{data.group}</TableCell>\n                        <TableCell>-</TableCell>\n                        <TableCell>inactive</TableCell>\n                      </TableRow>\n                    );\n                  })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default ManageUser;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst ManageUserGroup = () => {\n  const [group, setGroup] = useState([]);\n  const [userData, setUserData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loadingUser, setLoadingUser] = useState(true);\n\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const FetchUserData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/create-member/`, CONFIG)\n      .then((res) => {\n        setLoadingUser(false);\n\n        setUserData(res.data);\n      })\n      .catch((err) => {\n        setLoadingUser(false);\n      });\n  };\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/groups/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setGroup(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n    FetchUserData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/groups/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/groups/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item xs={12}>\n          <Box p={3} sx={{ float: \"right\" }}>\n            <LinkButton to=\"/users\">Manage User</LinkButton>\n            <LinkButton to=\"/create-user\">Create User</LinkButton>\n            <LinkButton to=\"/user-role\">Manage Role</LinkButton>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Button\n            variant=\"contained\"\n            onClick={handleClickOpen}\n            fullWidth\n            sx={{\n              borderRadius: \"0.5rem\",\n            }}\n          >\n            + New Group\n          </Button>\n          <Dialog\n            component=\"form\"\n            Validate\n            onSubmit={(e) => handleSubmit(e)}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New Group\"}</DialogTitle>\n            <DialogContent>\n              <TextField\n                required\n                fullWidth\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"name\"\n                label=\"Group Name\"\n                type=\"text\"\n                value={name}\n                onChange={(e) => onChange(e)}\n                id=\"name\"\n                autoComplete=\"name\"\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Close</Button>\n              <Button type=\"submit\" autoFocus>\n                Add\n              </Button>\n            </DialogActions>\n          </Dialog>\n          {!loading ? (\n            group.map((data) => (\n              <Box mt={1}>\n                <List>\n                  <ListItem disablePadding>\n                    <ListItemText>{data.name}</ListItemText>\n                    <Button\n                      variant=\"contained\"\n                      value={data.id}\n                      onClick={() => handleDelete(data.id)}\n                      sx={{\n                        borderRadius: \"0.5rem\",\n                        float: \"right\",\n                      }}\n                    >\n                      <ClearIcon />\n                    </Button>\n                  </ListItem>\n                </List>\n              </Box>\n            ))\n          ) : (\n            <Typography>Loading ...</Typography>\n          )}\n        </Grid>\n        <Grid item xs={8}>\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>First Name</TableCell>\n                  <TableCell>Last Name</TableCell>\n                  <TableCell>Role</TableCell>\n                  <TableCell>Group</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {loadingUser\n                  ? null\n                  : userData?.map((data) => {\n                      return (\n                        <TableRow>\n                          <TableCell>{data.f_name}</TableCell>\n                          <TableCell>{data.l_name}</TableCell>\n                          <TableCell>{data.role}</TableCell>\n                          <TableCell>{data.group}</TableCell>\n                        </TableRow>\n                      );\n                    })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ManageUserGroup;\n","/** @format */\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst UserRole = () => {\n  const [category, setCategory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const [userData, setUserData] = useState([]);\n  const [loadingUser, setLoadingUser] = useState(true);\n  const FetchUserData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/create-member/`, CONFIG)\n      .then((res) => {\n        setLoadingUser(false);\n\n        setUserData(res.data);\n      })\n      .catch((err) => {\n        setLoadingUser(false);\n      });\n  };\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/roles/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setCategory(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n    FetchUserData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/roles/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/roles/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item xs={12}>\n          <Box p={3} sx={{ float: \"right\" }}>\n            <LinkButton to=\"/users\">Manage User</LinkButton>\n            <LinkButton to=\"/create-user\">Create User</LinkButton>\n            <LinkButton to=\"/user-group\">Manage Group</LinkButton>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Button\n            variant=\"contained\"\n            onClick={handleClickOpen}\n            fullWidth\n            sx={{\n              borderRadius: \"0.5rem\",\n            }}\n          >\n            + New Role\n          </Button>\n          <Dialog\n            component=\"form\"\n            Validate\n            onSubmit={(e) => handleSubmit(e)}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New Role\"}</DialogTitle>\n            <DialogContent>\n              <TextField\n                required\n                fullWidth\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"name\"\n                label=\"Role Name\"\n                type=\"text\"\n                value={name}\n                onChange={(e) => onChange(e)}\n                id=\"name\"\n                autoComplete=\"name\"\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Close</Button>\n              <Button type=\"submit\" autoFocus>\n                Add\n              </Button>\n            </DialogActions>\n          </Dialog>\n          {!loading ? (\n            category.map((data) => (\n              <Box mt={1}>\n                <List>\n                  <ListItem disablePadding>\n                    <ListItemText>{data.name}</ListItemText>\n                    <Button\n                      variant=\"contained\"\n                      value={data.id}\n                      onClick={() => handleDelete(data.id)}\n                      sx={{\n                        borderRadius: \"0.5rem\",\n                        float: \"right\",\n                      }}\n                    >\n                      <ClearIcon />\n                    </Button>\n                  </ListItem>\n                </List>\n              </Box>\n            ))\n          ) : (\n            <Typography>Loading ...</Typography>\n          )}\n        </Grid>\n        <Grid item xs={8}>\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>First Name</TableCell>\n                  <TableCell>Last Name</TableCell>\n                  <TableCell>Role</TableCell>\n                  <TableCell>Group</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {loadingUser\n                  ? null\n                  : userData?.map((data) => {\n                      return (\n                        <TableRow>\n                          <TableCell>{data.f_name}</TableCell>\n                          <TableCell>{data.l_name}</TableCell>\n                          <TableCell>{data.role}</TableCell>\n                          <TableCell>{data.group}</TableCell>\n                        </TableRow>\n                      );\n                    })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default UserRole;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  RadioGroup,\n  FormLabel,\n  FormControl,\n  FormControlLabel,\n  Radio,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { ActionAlerts, GetTime, GetDate } from \"../../utils/ActionAlerts\";\n\nconst Time = () => {\n  const [pickTime, setPickTime] = useState(new Date(\"2021-12-01T21:00:00\"));\n  const [pickDate, setPickDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [timeToggle, setTimeToggle] = useToggle(false);\n  const [billable, setBillable] = useToggle(false);\n\n  // const [bill, setBill] = useToggle(false);\n  const [timeData, setTimeData] = useState({\n    contact: 0,\n    matter_name: 0,\n    category: \"\",\n    sub_category: \"\",\n    hard: false,\n    soft: false,\n    unit: 0,\n    qty: 0,\n    rate: 0,\n    file: \"\",\n    detail: \"\",\n    bill_by: 0,\n    note: \"\",\n  });\n\n  const {\n    contact,\n    matter_name,\n    category,\n    sub_category,\n    hard,\n    soft,\n    unit,\n    qty,\n    rate,\n    file,\n    detail,\n    bill_by,\n\n    note,\n  } = timeData;\n  const onChange = (e) =>\n    setTimeData({ ...timeData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let time = GetTime(pickTime);\n    let date = GetDate(pickDate);\n\n    const body = JSON.stringify({\n      contact,\n      matter_name,\n      category,\n      sub_category,\n      hard,\n      soft,\n      unit,\n      qty,\n      rate,\n      time,\n      date,\n      detail,\n      bill_by,\n      billable,\n      note,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/add-time/`, body, CONFIG)\n      .then((res) => {\n        <ActionAlerts value={{ status: res.statusText, message: \"Success\" }} />;\n      })\n      .catch((err) => {\n        <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />;\n      });\n    console.log(body);\n  };\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Time\n        </Typography>\n        <Grid container spacing={2} mt={2}>\n          <Grid item xs={12}>\n            <Grid container p={3}>\n              <Grid item xs={6}>\n                <FormControlLabel\n                  size=\"large\"\n                  label=\"Time\"\n                  labelPlacement=\"start\"\n                  control={\n                    <Switch\n                      size=\"large\"\n                      checked={timeToggle}\n                      onChange={(e) => setTimeToggle(e)}\n                    />\n                  }\n                />\n                {timeToggle ? null : (\n                  <Box>\n                    <FormControl component=\"fieldset\">\n                      <FormLabel component=\"legend\">Expense</FormLabel>\n                      <RadioGroup\n                        row\n                        aria-label=\"expense\"\n                        defaultValue=\"\"\n                        name=\"expense\"\n                        id=\"expense\"\n                      >\n                        <FormControlLabel\n                          value=\"hard\"\n                          control={<Radio />}\n                          label=\"Hard\"\n                        />\n                        <FormControlLabel\n                          value=\"soft\"\n                          control={<Radio />}\n                          label=\"Soft\"\n                        />\n                      </RadioGroup>\n                    </FormControl>\n                  </Box>\n                )}\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"matter\"\n                  label=\"matter\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"matter\"\n                  autoComplete=\"matter\"\n                  disabled\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"contact\"\n                  label=\"contact\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"contact\"\n                  autoComplete=\"contact\"\n                  disabled\n                />\n              </Grid>\n            </Grid>\n\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"category\"\n              label=\"category\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"category\"\n              autoComplete=\"category\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"sub_category\"\n              label=\"sub_category\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"sub_category\"\n              autoComplete=\"sub_category\"\n            />\n            {timeToggle ? (\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"rate\"\n                label=\"rate\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"rate\"\n                autoComplete=\"rate\"\n              />\n            ) : (\n              <Fragment>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"unit\"\n                  label=\"unit\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"unit\"\n                  autoComplete=\"unit\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"qty\"\n                  label=\"Qty\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"qty\"\n                  autoComplete=\"qty\"\n                />\n                <Box m={1}>\n                  <Typography component=\"lable\"> Receipt(s) </Typography>\n\n                  <Button variant=\"contained\" disabled>\n                    + Attach File\n                  </Button>\n                </Box>\n              </Fragment>\n            )}\n\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <TimePicker\n                label=\"Pick Time\"\n                name=\"picktime\"\n                id=\"picktime\"\n                value={pickTime}\n                onChange={(e) => {\n                  setPickTime(e);\n                }}\n                renderInput={(params) => <TextField size=\"small\" {...params} />}\n              />\n            </LocalizationProvider>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask=\"____-__-__\"\n                label=\"Pick Date\"\n                value={pickDate}\n                name=\"pickdate\"\n                id=\"pickdate\"\n                onChange={(e) => setPickDate(e)}\n                renderInput={(params) => <TextField size=\"small\" {...params} />}\n              />\n            </LocalizationProvider>\n\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"detail\"\n              label=\"detail\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"detail\"\n              autoComplete=\"detail\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bill_by\"\n              label=\"bill_by\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"bill_by\"\n              autoComplete=\"bill_by\"\n            />\n            <FormControlLabel\n              size=\"large\"\n              label=\"Billable\"\n              labelPlacement=\"start\"\n              control={\n                <Switch\n                  size=\"large\"\n                  checked={billable}\n                  onChange={() => setBillable(billable)}\n                />\n              }\n            />\n            <br />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"note\"\n              rows={4}\n              label=\"note\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"note\"\n              autoComplete=\"note\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          sx={{ float: \"right\" }}\n          endIcon={<SaveIcon />}\n        >\n          Save\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Time;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst TimeList = () => {\n  const [timeData, setTimeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setTimeData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Fragment>\n      <Box>\n        <LinkButton to=\"/ledgers\" sx={{ float: \"right\" }}>\n          Ledger Dashboard\n        </LinkButton>\n        <Box p={3}>\n          <LinkButton to=\"/time\" sx={{ float: \"right\" }}>\n            Ledger Dashbaord\n          </LinkButton>\n          <LinkButton to=\"/time\" sx={{ float: \"right\" }}>\n            Add Time\n          </LinkButton>\n          <LinkButton to=\"/ledger-list\" sx={{ float: \"right\" }}>\n            Ledger List\n          </LinkButton>\n          <LinkButton to=\"/ledger-documents\" sx={{ float: \"right\" }}>\n            Documents\n          </LinkButton>\n        </Box>\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Add</TableCell>\n\n                <TableCell>Matter #</TableCell>\n                <TableCell>Matter Name</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Billable Time</TableCell>\n                <TableCell>Amount</TableCell>\n                <TableCell>Category</TableCell>\n                <TableCell>Activity</TableCell>\n              </TableRow>\n            </TableHead>\n            {loading\n              ? null\n              : timeData?.map((data) => {\n                  return (\n                    <TableBody id={data.id}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>{data.matter_name}</TableCell>\n\n                      <TableCell>{data.conatact}</TableCell>\n                      <TableCell>{data.date}</TableCell>\n                      <TableCell>{data.time}</TableCell>\n                      <TableCell>{data.rate}</TableCell>\n                      <TableCell>{data.category}</TableCell>\n                      <TableCell>{data.sub_category}</TableCell>\n                    </TableBody>\n                  );\n                })}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default TimeList;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n  Button,\n} from \"@mui/material\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { LinkButton } from \"../../styles/styles\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst LedgerTImeList = () => {\n  const [ledgerData, setLedgerData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setLedgerData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  return (\n    <Fragment>\n      <Box>\n        <Typography component=\"h4\" variant=\"h5\" mb={2}>\n          Ledgers Time list\n        </Typography>\n        <Button\n          variant=\"contained\"\n          sx={{ marginRight: \"1rem\", float: \"right\" }}\n        >\n          Print\n        </Button>\n        <Button\n          variant=\"contained\"\n          sx={{ marginRight: \"1rem\", float: \"right\" }}\n        >\n          Export\n        </Button>\n        <LinkButton to=\"/time\" sx={{ float: \"right\" }}>\n          + Add Time\n        </LinkButton>\n        <LinkButton to=\"/time-list\" sx={{ float: \"right\" }}>\n          + Time List\n        </LinkButton>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell></TableCell>\n                <TableCell>Cateagory</TableCell>\n                <TableCell>Sub-Category</TableCell>\n                <TableCell>Detail</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Qty</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Total</TableCell>\n                <TableCell>BillBy</TableCell>\n              </TableRow>\n            </TableHead>\n            {loading\n              ? null\n              : ledgerData?.map((data) => {\n                  return (\n                    <TableBody id={data.id}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>{data.category}</TableCell>\n                      <TableCell>{data.sub_category}</TableCell>\n                      <TableCell>{data.detail}</TableCell>\n                      <TableCell>{data.date}</TableCell>\n                      <TableCell>{data.qty}</TableCell>\n                      <TableCell>\n                        {data.billable ? \"Billable\" : \"Paid\"}\n                      </TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={data.qty * 25}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>{data.bill_by}</TableCell>\n                    </TableBody>\n                  );\n                })}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default LedgerTImeList;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LedgerActivity = () => {\n  const [activityData, setActivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setActivityData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Fragment>\n      <Box>\n        <Typography component=\"h4\" variant=\"h5\" mb={2}>\n          Ledger Activity\n        </Typography>\n        <Box p={3}>\n          <LinkButton to=\"/ledgers\" sx={{ float: \"right\" }}>\n            Ledger Dashboard\n          </LinkButton>\n          <LinkButton to=\"/ledger-list\" sx={{ float: \"right\" }}>\n            Ledger List\n          </LinkButton>\n          <LinkButton to=\"/ledger-documents\" sx={{ float: \"right\" }}>\n            Documents\n          </LinkButton>\n        </Box>\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell></TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Files</TableCell>\n                <TableCell>Cateagory</TableCell>\n                <TableCell>Sub-Category</TableCell>\n                <TableCell>Notes</TableCell>\n                <TableCell>Source</TableCell>\n                <TableCell>User</TableCell>\n                <TableCell>In/Out</TableCell>\n              </TableRow>\n            </TableHead>\n            {loading\n              ? null\n              : activityData?.map((data) => {\n                  return (\n                    <TableBody id={data.id}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>{data.date}</TableCell>\n                      <TableCell>x</TableCell>\n                      <TableCell>{data.category}</TableCell>\n                      <TableCell>{data.sub_category}</TableCell>\n                      <TableCell>{data.note}</TableCell>\n                      <TableCell>\n                        {data.billable ? \"email\" : \"workflow\"}\n                      </TableCell>\n                      <TableCell>{data.bill_by}</TableCell>\n                      <TableCell>{data.billable ? \"In\" : \"Out\"}</TableCell>\n                    </TableBody>\n                  );\n                })}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default LedgerActivity;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Switch,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography,\n  TextField,\n  FormControlLabel,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nconst Fillters = () => {\n  const [dateRange, setDateRange] = useState([null, null]);\n  const [billedby, setBilledby] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Filter By</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={filter}\n            label=\"Filter By\"\n            onChange={(e) => setFilter(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Billed by</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={billedby}\n            label=\"Billed By\"\n            onChange={(e) => setBilledby(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={status}\n            label=\"Age\"\n            onChange={(e) => setStatus(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <Typography sx={{ mt: 2, mb: 1 }}> Date Range </Typography>\n          <DateRangePicker\n            calendars={1}\n            value={dateRange}\n            onChange={(newValue) => {\n              setDateRange(newValue);\n            }}\n            renderInput={(startProps, endProps) => (\n              <Fragment>\n                <TextField size=\"small\" {...startProps} />\n                <Box sx={{ mx: 2 }}> to </Box>\n                <TextField size=\"small\" {...endProps} />\n              </Fragment>\n            )}\n          />\n        </LocalizationProvider>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Fillters;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nconst LedgerCards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item xs={7}>\n          <Grid container spacing={2}>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Time Entries\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={200}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      f\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Soft Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={65000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Hard Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={5000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Total Const\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={70000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Trust\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={4000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Total Due\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={100000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item={5}>\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>User</TableCell>\n                  <TableCell>Hours</TableCell>\n                  <TableCell>Total</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell> Jhon Johnson</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={74.3}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={39007.05}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Mark MacCalloff</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={4.0}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={800.0}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Cindy Madenuff</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={127.3}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={41372.5}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LedgerCards;\n","/** @format */\n\nimport { Typography, Box, Grid } from \"@mui/material\";\nimport React, { Fragment } from \"react\";\nimport Fillters from \"./Fillters\";\nimport LedgerCards from \"./LedgerCards\";\nimport LedgerTimeList from \"./LedgerTImeList\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LegderDashbard = () => {\n  return (\n    <Fragment>\n      <Typography component=\"h3\" variant=\"h5\">\n        Legder\n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Box p={3}>\n            <LinkButton to=\"/activity-list\" sx={{ float: \"right\" }}>\n              Activity\n            </LinkButton>\n            <LinkButton to=\"/ledger-list\" sx={{ float: \"right\" }}>\n              Ledger List\n            </LinkButton>\n            <LinkButton to=\"/ledger-documents\" sx={{ float: \"right\" }}>\n              Documents\n            </LinkButton>\n            <LinkButton to=\"/time-list\" sx={{ float: \"right\" }}>\n              Time List\n            </LinkButton>\n          </Box>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Box>\n          <LedgerCards />\n          <Fillters />\n          <LedgerTimeList />\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LegderDashbard;\n","/** @format */\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  TextField,\n  Switch,\n  FormControl,\n  Select,\n  MenuItem,\n  InputLabel,\n  FormControlLabel,\n  Box,\n  Grid,\n  Button,\n  Typography,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport axios from \"axios\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nimport { ActionAlerts, GetDate } from \"../../utils/ActionAlerts\";\n\nconst CreateTask = () => {\n  const [dueDate, setDueDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [bill, setBill] = useToggle(true);\n  const [matterData, setMatterData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isPrivate, setIsPrivate] = useToggle(true);\n  const [file, setFile] = useState(\"\");\n  const [taskData, setTaskData] = useState({\n    matter_id: 0,\n    matter_contact: 0,\n    matter: \"\",\n    task: \"\",\n    filename: \"\",\n    assign_to: 0,\n    detail: \"\",\n  });\n\n  const {\n    matter_id,\n    matter_contact,\n    matter,\n    task,\n    filename,\n    assign_to,\n    detail,\n  } = taskData;\n\n  const onChange = (e) =>\n    setTaskData({ ...taskData, [e.target.name]: e.target.value });\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/matter/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setMatterData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    console.log(matter_id, matter_contact, matter, task);\n    let due_at = GetDate(dueDate);\n    let is_billable = bill;\n    let is_private = isPrivate;\n\n    const body = JSON.stringify({\n      matter_id,\n      matter_contact,\n      matter,\n      task,\n      file,\n      is_billable,\n      is_private,\n      due_at,\n      assign_to,\n      detail,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/new-task/`, body, CONFIG)\n      .then((res) => {\n        <ActionAlerts value={{ status: res.statusText, message: \"Success\" }} />;\n      })\n      .catch((err) => {\n        <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />;\n      });\n    console.log(body);\n  };\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n          \"& .MuiSelect-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create New Task\n        </Typography>\n        <Grid container spacing={2} p={2}>\n          <Grid item xs={6}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_id\"\n              label=\"matter_id\"\n              type=\"number\"\n              min=\"0\"\n              value={matter_id}\n              onChange={(e) => onChange(e)}\n              id=\"matter_id\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter\"\n              label=\"matter\"\n              type=\"text\"\n              min=\"0\"\n              value={matter}\n              onChange={(e) => onChange(e)}\n              id=\"matter\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"task\"\n              label=\"Task\"\n              type=\"text\"\n              value={task}\n              onChange={(e) => onChange(e)}\n              id=\"task\"\n              autoComplete=\"task\"\n            />\n            <Box ml={2} mt={1}>\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Attach File \"\n                labelPlacement=\"start\"\n                control={\n                  <input\n                    type=\"file\"\n                    name=\"filename\"\n                    id=\"file\"\n                    onChange={(e) => onChange(e)}\n                  />\n                }\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"file\"\n                label=\"please chose any file\"\n                type=\"text\"\n                min=\"0\"\n                value={filename}\n                onChange={(e) => setFile(filename)}\n                id=\"file\"\n                disabled\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_contact\"\n              label=\"matter_contact\"\n              type=\"number\"\n              min=\"0\"\n              value={matter_contact}\n              onChange={(e) => onChange(e)}\n              id=\"matter_contact\"\n            />\n            <Box p={1}>\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Billable\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    size=\"large\"\n                    checked={bill}\n                    onChange={() => setBill(bill)}\n                  />\n                }\n              />\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Private\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    size=\"large\"\n                    checked={isPrivate}\n                    onChange={() => setIsPrivate(isPrivate)}\n                  />\n                }\n              />\n            </Box>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask=\"____-__-__\"\n                label=\"Due Date\"\n                value={dueDate}\n                name=\"dueDate\"\n                id=\"dueDate\"\n                onChange={(e) => setDueDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"assign_to\"\n              label=\"Assign to\"\n              type=\"number\"\n              value={assign_to}\n              onChange={(e) => onChange(e)}\n              id=\"assign_to\"\n              autoComplete=\"assign_to\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              multiline\n              rows={5}\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"detail\"\n              label=\"Detail\"\n              type=\"text\"\n              value={detail}\n              onChange={(e) => onChange(e)}\n              id=\"detail\"\n            />\n\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{ float: \"right\" }}\n              endIcon={<SaveIcon />}\n            >\n              Save\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateTask;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nconst ViewTasks = () => {\n  return <Fragment></Fragment>;\n};\n\nexport default ViewTasks;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box, Typography, Paper, TextField } from \"@mui/material\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LedgerDoc = () => {\n  return (\n    <Fragment>\n      <Box p={3}>\n        <LinkButton to=\"/ledgers\" sx={{ float: \"right\" }}>\n          Ledger Dashboard\n        </LinkButton>\n      </Box>\n      <Grid container spacing={1}>\n        <Grid item xs={4}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              padding: \"5rem 2rem 5rem 2rem\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            MS Word Document On Pleading or Non Pleading Paper\n          </Box>\n        </Grid>\n        <Grid item xs={4}>\n          <Box\n            sx={{\n              height: \"80%\",\n              padding: \"5rem 2rem 5rem 2rem\",\n              width: \"80%\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            Space for 2nd Document to be opend if user wants it\n          </Box>\n        </Grid>\n        <Grid item xs={4}>\n          <Grid container>\n            <Grid item xs={12}>\n              <Box component={Paper} p={2} sx={{ borderRadius: \"1rem\" }}>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n              </Box>\n            </Grid>\n            <Grid item xs={12}>\n              <Box component={Paper} mt={2} p={2} sx={{ borderRadius: \"1rem\" }}>\n                <TextField\n                  fullWidth\n                  multiline\n                  rows={5}\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"filled\"\n                  name=\"detail\"\n                  type=\"text\"\n                  value=\"Quick Notes\"\n                  id=\"detail\"\n                  sx={{ borderRadius: \"1rem\" }}\n                />\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LedgerDoc;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Typography,\n  FormControlLabel,\n} from \"@mui/material\";\n// import SaveIcon from \"@mui/icons-material/Save\";\n\n// import { LocalizationProvider, DateRangePicker, DatePicker } from \"@mui/lab\";\n// import AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\n// import { CreateMatter, CONFIG } from \"../../api/MatterApi\";\n\n// import { ActionAlerts, TotalDays, GetDate } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst Search = () => {\n  const [searchData, setSearchData] = useState({\n    state: \"\",\n    city: \"\",\n    practice_area: \"\",\n    law_school: \"\",\n    grad_year: 0,\n    bar_adm_year: 0,\n    longest_tenure: 0,\n    average_tenure: 0,\n    current_tenure: 0,\n    undergrad_study: \"\",\n    lamguages: \"\",\n    admitted_state: \"\",\n    relocate: false,\n  });\n\n  const {\n    state,\n    city,\n    practice_area,\n    law_school,\n    grad_year,\n    bar_adm_year,\n    longest_tenure,\n    average_tenure,\n    current_tenure,\n    undergrad_study,\n    lamguages,\n    admitted_state,\n    relocate,\n  } = searchData;\n\n  const onChange = (e) =>\n    setSearchData({ ...searchData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Job Search\n        </Typography>\n        <Box m={2}>\n          <LinkButton to=\"/job-result\" sx={{ float: \"right\" }}>\n            Search Result\n          </LinkButton>\n        </Box>\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"state\"\n              type=\"number\"\n              min=\"0\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"law_school\"\n              label=\"law_school\"\n              type=\"text\"\n              value={law_school}\n              onChange={(e) => onChange(e)}\n              id=\"law_school\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"longest_tenure\"\n              label=\"longest_tenure\"\n              type=\"number\"\n              value={longest_tenure}\n              onChange={(e) => onChange(e)}\n              id=\"longest_tenure\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"average_tenure\"\n              label=\"average_tenure\"\n              type=\"number\"\n              value={average_tenure}\n              onChange={(e) => onChange(e)}\n              id=\"average_tenure\"\n              autoComplete=\"average_tenure\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"current_tenure\"\n              label=\"current_tenure\"\n              type=\"text\"\n              value={current_tenure}\n              onChange={(e) => onChange(e)}\n              id=\"current_tenure\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"admitted_state\"\n              label=\"admitted_state\"\n              type=\"text\"\n              value={admitted_state}\n              onChange={(e) => onChange(e)}\n              id=\"admitted_state\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"city\"\n              type=\"text\"\n              value={city}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"grad_year\"\n              label=\"grad_year\"\n              type=\"number\"\n              value={grad_year}\n              onChange={(e) => onChange(e)}\n              id=\"grad_year\"\n            />\n\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"undergrad_study\"\n              label=\"undergrad_study\"\n              step=\"0.01\"\n              type=\"text\"\n              value={undergrad_study}\n              onChange={(e) => onChange(e)}\n              id=\"undergrad_study\"\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  name=\"relocate\"\n                  value={relocate}\n                  onChange={(e) => onChange(e)}\n                />\n              }\n              label=\"Relocate\"\n              labelPlacement=\"start\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"practice_area\"\n              label=\"practice_area\"\n              type=\"text\"\n              value={practice_area}\n              onChange={(e) => onChange(e)}\n              id=\"practice_area\"\n              disabled\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bar_adm_year\"\n              label=\"bar_adm_year\"\n              type=\"number\"\n              value={bar_adm_year}\n              onChange={(e) => onChange(e)}\n              id=\"bar_adm_year\"\n              disabled\n            />\n\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"lamguages\"\n              label=\"lamguages\"\n              type=\"text\"\n              value={lamguages}\n              onChange={(e) => onChange(e)}\n              id=\"lamguages\"\n            />\n            {/* <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{ float: \"right\" }}\n              endIcon={<SaveIcon />}\n            >\n              Apply\n            </Button> */}\n            <Box m={3}>\n              <LinkButton to=\"/job-result\" sx={{ float: \"right\" }}>\n                Apply\n              </LinkButton>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Search;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\n// import axios from \"axios\";\n// import { CONFIG } from \"../../api/MatterApi\";\n// import { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst Result = () => {\n  const [activityData, setActivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  // const [error, setError] = useState(\"\");\n  // const [status, setStatus] = useState(\"\");\n  //   const FetchData = () => {\n  //     axios\n  //       .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n  //       .then((res) => {\n  //         setLoading(false);\n  //         setStatus(res.statusText);\n  //         setActivityData(res.data);\n  //       })\n  //       .catch((err) => {\n  //         setLoading(false);\n  //         setStatus(err.statusText);\n  //       });\n  //   };\n  //   useEffect(() => {\n  //     FetchData();\n  //   }, []);\n  return (\n    <Fragment>\n      <Box>\n        <Typography component=\"h4\" variant=\"h5\" mb={2}>\n          Search Result\n        </Typography>\n        <Box p={3}>\n          <LinkButton to=\"/jb-search\" sx={{ float: \"right\" }}>\n            Job search\n          </LinkButton>\n          <LinkButton to=\"/job-view\" sx={{ float: \"right\" }}>\n            Job View\n          </LinkButton>\n        </Box>\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Rate</TableCell>\n                <TableCell>Name</TableCell>\n                <TableCell>City</TableCell>\n                <TableCell>State</TableCell>\n                <TableCell>Active</TableCell>\n                <TableCell>Grage Year</TableCell>\n                <TableCell>Practice Area</TableCell>\n                <TableCell>Relocation</TableCell>\n                <TableCell>Practicing</TableCell>\n              </TableRow>\n            </TableHead>\n            {loading ? (\n              <TableBody>\n                <TableRow>\n                  <TableCell>74%</TableCell>\n                  <TableCell>Smith, John</TableCell>\n                  <TableCell>San Diego</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>2000</TableCell>\n                  <TableCell>Criminal</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>22y - 03M</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>72%</TableCell>\n                  <TableCell>Cassidy, Butch</TableCell>\n                  <TableCell>Los Angeles</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>2021</TableCell>\n                  <TableCell>Transctional</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>0y - 02M</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>50%</TableCell>\n                  <TableCell>Short, Mart</TableCell>\n                  <TableCell>Sacramento</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>2013</TableCell>\n                  <TableCell>Civil</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>06y - 11M</TableCell>\n                </TableRow>\n              </TableBody>\n            ) : (\n              activityData?.map((data) => {\n                return (\n                  <TableBody id={data.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n                    <TableCell>{data.date}</TableCell>\n                    <TableCell>x</TableCell>\n                    <TableCell>{data.category}</TableCell>\n                    <TableCell>{data.sub_category}</TableCell>\n                    <TableCell>{data.note}</TableCell>\n                    <TableCell>\n                      {data.billable ? \"email\" : \"workflow\"}\n                    </TableCell>\n                    <TableCell>{data.bill_by}</TableCell>\n                    <TableCell>{data.billable ? \"In\" : \"Out\"}</TableCell>\n                  </TableBody>\n                );\n              })\n            )}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Result;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  FormControlLabel,\n  FormGroup,\n  Checkbox,\n} from \"@mui/material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\n\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nimport { LinkButton } from \"../../styles/styles\";\n\nconst JobView = () => {\n  const [pickTime, setPickTime] = useState(new Date(\"2021-12-01T21:00:00\"));\n  const [pickDate, setPickDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [jobData, setJobData] = useState({\n    name: \"\",\n    state: \"\",\n    city: \"\",\n    email: \"\",\n    mobile: 0,\n    home: \"\",\n    law_school: \"\",\n    grad_year: 0,\n    bar_adm_year: 0,\n    practice_area: \"\",\n    mail_add: \"\",\n    relocate: false,\n    date: \"\",\n    time: \"\",\n    link: \"\",\n    notes: \"\",\n    file: \"\",\n  });\n\n  const {\n    name,\n    state,\n    city,\n    email,\n    mobile,\n    home,\n    law_school,\n    grad_year,\n    bar_adm_year,\n    practice_area,\n    mail_add,\n    relocate,\n    date,\n    time,\n    link,\n    notes,\n    file,\n  } = jobData;\n\n  const onChange = (e) =>\n    setJobData({ ...jobData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Job View\n        </Typography>\n        <Box p={3}>\n          <LinkButton to=\"/jb-search\" sx={{ float: \"right\" }}>\n            Job search\n          </LinkButton>\n          <LinkButton to=\"/job-view\" sx={{ float: \"right\" }}>\n            Job Result\n          </LinkButton>\n        </Box>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <FormGroup aria-label=\"position\" row>\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Save\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Contacted\"\n                labelPlacement=\"start\"\n              />\n              <Typography component=\"label\" m={1}>\n                Interested :\n              </Typography>\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Yes\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"No\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Interviewed\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Accept\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Reject\"\n                labelPlacement=\"start\"\n              />\n              <Box ml={3}>\n                <Typography component=\"h4\" variant=\"h5\">\n                  Overall Score: 74%\n                </Typography>\n              </Box>\n            </FormGroup>\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"name\"\n              label=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={(e) => onChange(e)}\n              id=\"name\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"city\"\n              type=\"text\"\n              value={city}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"state\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email\"\n              label=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => onChange(e)}\n              id=\"email\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"mobile\"\n              label=\"mobile\"\n              type=\"phone\"\n              value={mobile}\n              onChange={(e) => onChange(e)}\n              id=\"mobile\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"home\"\n              label=\"home\"\n              type=\"phone\"\n              value={home}\n              onChange={(e) => onChange(e)}\n              id=\"home\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"law_school\"\n              label=\"law_school\"\n              type=\"text\"\n              value={law_school}\n              onChange={(e) => onChange(e)}\n              id=\"law_school\"\n            />\n\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"grad_year\"\n              label=\"grad_year\"\n              type=\"number\"\n              value={grad_year}\n              onChange={(e) => onChange(e)}\n              id=\"grad_year\"\n              autoComplete=\"grad_year\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bar_adm_year\"\n              label=\"bar_adm_year\"\n              type=\"number\"\n              value={bar_adm_year}\n              onChange={(e) => onChange(e)}\n              id=\"bar_adm_year\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"mail_add\"\n              label=\"mail_add\"\n              type=\"text\"\n              value={mail_add}\n              onChange={(e) => onChange(e)}\n              id=\"mail_add\"\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  name=\"relocate\"\n                  value={relocate}\n                  onChange={(e) => onChange(e)}\n                />\n              }\n              label=\"Relocate\"\n              labelPlacement=\"start\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container spacing={2}>\n              <Grid item xs={4}>\n                <Box m={1}>\n                  <Typography component=\"lable\"> Writing Sample </Typography>\n\n                  <Button variant=\"contained\" disabled>\n                    + Attach File\n                  </Button>\n                </Box>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <TimePicker\n                    label=\"Pick Time\"\n                    name=\"picktime\"\n                    id=\"picktime\"\n                    value={pickTime}\n                    onChange={(e) => {\n                      setPickTime(e);\n                    }}\n                    renderInput={(params) => (\n                      <TextField size=\"small\" fullWidth {...params} />\n                    )}\n                  />\n                </LocalizationProvider>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DatePicker\n                    inputFormat=\"yyyy-MM-dd\"\n                    mask=\"____-__-__\"\n                    label=\"Pick Date\"\n                    value={pickDate}\n                    name=\"pickdate\"\n                    id=\"pickdate\"\n                    onChange={(e) => setPickDate(e)}\n                    renderInput={(params) => (\n                      <TextField size=\"small\" fullWidth {...params} />\n                    )}\n                  />\n                </LocalizationProvider>\n\n                <TextField\n                  size=\"small\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"link\"\n                  type=\"link\"\n                  defaultValue=\"2021-12-01\"\n                  value={link}\n                  onChange={(e) => onChange(e)}\n                  id=\"link\"\n                />\n              </Grid>\n              <Grid item xs={8}>\n                <TextField\n                  fullWidth\n                  multiline\n                  rows={8}\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"notes\"\n                  type=\"text\"\n                  value=\"Notes ...\"\n                  id=\"notes\"\n                />\n              </Grid>\n            </Grid>\n            {/* <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{ float: \"right\" }}\n              endIcon={<SaveIcon />}\n            >\n              Apply\n            </Button> */}\n            <Box m={3} sx={{ float: \"right\" }}>\n              <LinkButton to=\"/job-result\">Apply</LinkButton>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default JobView;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Button, Grid, Box, List, ListItem, ListItemText } from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nconst Templates = () => {\n  return (\n    <Fragment>\n      <Grid container mt={1}>\n        <Grid item xs={12} m={2}>\n          <Button variant=\"contained\" size=\"small\">\n            Merge Fields.XLS\n          </Button>\n          <Box sx={{ float: \"right\" }}>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New Doc\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New PDF\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New Email\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Edit\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Save\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Close\n            </Button>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              Word Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>001 - Report Money</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>002 - Report Time</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>003 - Report Billed hours</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              PDF Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>P001 - Write of Execution</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>P002 - Memo of Cost</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>P003 - Settlement Letter</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              Email Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>001 - Invoice Email</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>002 - New Client</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>003 - Firing Client</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              padding: \"15rem 2rem 5rem 2rem\",\n              width: \"80%\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            Templates can be opened here to edit them. user can add/ remove\n            merge fields directly to the document or PDF\n          </Box>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Templates;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport { TextField, Box, Grid, Button, Typography } from \"@mui/material\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport { ActionAlerts, GetTime, GetDate } from \"../../utils/ActionAlerts\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Contact = () => {\n  const [contactData, setContactData] = useState({\n    // company info\n    company_name: \"\",\n    webiste: \"\",\n    ger_email: \"\",\n    billing_email: \"\",\n    // address\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    zip: 0,\n    plus_4: 0,\n    note: \"\",\n\n    client_no: 0,\n    f_name: \"\",\n    l_name: \"\",\n    dob: \"\",\n    ssn: 0,\n    mobile_no: 0,\n    home_no: 0,\n    office_no: 0,\n    fax_no: 0,\n    other_no: 0,\n    email_1: \"\",\n    email_2: \"\",\n    email_3: \"\",\n    // other address\n    street2: \"\",\n    suite2: \"\",\n    city2: \"\",\n    state2: \"\",\n    zip2: 0,\n    plus_42: 0,\n\n    office: \"\",\n    team: \"\",\n    member: \"\",\n    assign_to: \"\",\n    contact: \"\",\n    relation: \"\",\n  });\n  const [pickDate, setPickDate] = useState(new Date(\"2021-12-01T21:00:00\"));\n\n  const {\n    company_name,\n    webiste,\n    ger_email,\n    billing_email,\n    street,\n    suite,\n    city,\n    state,\n    zip,\n    plus_4,\n    client_no,\n    f_name,\n    l_name,\n    dob,\n    ssn,\n    mobile_no,\n    home_no,\n    office_no,\n    fax_no,\n    other_no,\n    email_1,\n    email_2,\n    email_3,\n    street2,\n    suite2,\n    city2,\n    state2,\n    zip2,\n    plus_42,\n    office,\n    team,\n    member,\n    assign_to,\n    contact,\n    relation,\n  } = contactData;\n  const onChange = (e) =>\n    setContactData({ ...contactData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    let date = GetDate(pickDate);\n\n    const body = JSON.stringify({\n      company_name,\n      webiste,\n      ger_email,\n      billing_email,\n      street,\n      suite,\n      city,\n      state,\n      zip,\n      plus_4,\n      client_no,\n      f_name,\n      l_name,\n      dob,\n      ssn,\n      mobile_no,\n      home_no,\n      office_no,\n      fax_no,\n      other_no,\n      email_1,\n      email_2,\n      email_3,\n      street2,\n      suite2,\n      city2,\n      state2,\n      zip2,\n      plus_42,\n      office,\n      team,\n      member,\n      assign_to,\n      contact,\n      relation,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/contact/`, body, CONFIG)\n      .then((res) => {\n        <ActionAlerts value={{ status: res.statusText, message: \"Success\" }} />;\n      })\n      .catch((err) => {\n        <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />;\n      });\n    console.log(body);\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container p={2}>\n          <Grid item xs={6}>\n            <Typography component=\"h4\" variant=\"h5\">\n              Company information\n            </Typography>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"company_name\"\n              label=\"company_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"company_name\"\n              autoComplete=\"company_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"client_no\"\n              label=\"client_no\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"client_no\"\n              autoComplete=\"client_no\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"f_name\"\n              label=\"f_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"f_name\"\n              autoComplete=\"f_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"l_name\"\n              label=\"l_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"l_name\"\n              autoComplete=\"l_name\"\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask=\"____-__-__\"\n                label=\"Pick Date\"\n                value={pickDate}\n                name=\"pickdate\"\n                id=\"pickdate\"\n                onChange={(e) => setPickDate(e)}\n                renderInput={(params) => <TextField size=\"small\" {...params} />}\n              />\n            </LocalizationProvider>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"ssn\"\n              label=\"ssn\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"ssn\"\n              autoComplete=\"ssn\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"mobile_no\"\n              label=\"mobile_no\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"mobile_no\"\n              autoComplete=\"mobile_no\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"home_no\"\n              label=\"home_no\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"home_no\"\n              autoComplete=\"home_no\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"office_no\"\n              label=\"office_no\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"office_no\"\n              autoComplete=\"office_no\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"fax_no\"\n              label=\"fax_no\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"fax_no\"\n              autoComplete=\"fax_no\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"other_no\"\n              label=\"other_no\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"other_no\"\n              autoComplete=\"other_no\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_1\"\n              label=\"email_1\"\n              type=\"email\"\n              onChange={(e) => onChange(e)}\n              id=\"email_1\"\n              autoComplete=\"email_1\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_2\"\n              label=\"email_2\"\n              type=\"email\"\n              onChange={(e) => onChange(e)}\n              id=\"email_2\"\n              autoComplete=\"email_2\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_3\"\n              label=\"email_3\"\n              type=\"email\"\n              onChange={(e) => onChange(e)}\n              id=\"email_3\"\n              autoComplete=\"email_3\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"street\"\n              label=\"street\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"street\"\n              autoComplete=\"street\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"suite\"\n              label=\"suite\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"suite\"\n              autoComplete=\"suite\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"city\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n              autoComplete=\"city\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"state\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n              autoComplete=\"state\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"zip\"\n              label=\"zip\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"zip\"\n              autoComplete=\"zip\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"plus_4\"\n              label=\"plus_4\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"plus_4\"\n              autoComplete=\"plus_4\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              multiline\n              rows={5}\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"note\"\n              label=\"note\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"note\"\n              autoComplete=\"note\"\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <Typography component=\"h4\" variant=\"h6\">\n              Alternate Information\n            </Typography>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"webiste\"\n              label=\"webiste\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"webiste\"\n              autoComplete=\"webiste\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"ger_email\"\n              label=\"ger_email\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"ger_email\"\n              autoComplete=\"ger_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"billing_email\"\n              label=\"billing_email\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"billing_email\"\n              autoComplete=\"billing_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"street\"\n              label=\"street\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"street\"\n              autoComplete=\"street\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"suite\"\n              label=\"suite\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"suite\"\n              autoComplete=\"suite\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"city\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n              autoComplete=\"city\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"state\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n              autoComplete=\"state\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"zip\"\n              label=\"zip\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"zip\"\n              autoComplete=\"zip\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"plus_4\"\n              label=\"plus_4\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"plus_4\"\n              autoComplete=\"plus_4\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Source\n                </Typography>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"office\"\n                  label=\"office\"\n                  type=\"text\"\n                  onChange={(e) => onChange(e)}\n                  id=\"office\"\n                  autoComplete=\"office\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"team\"\n                  label=\"team\"\n                  type=\"text\"\n                  onChange={(e) => onChange(e)}\n                  id=\"team\"\n                  autoComplete=\"team\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"member\"\n                  label=\"member\"\n                  type=\"text\"\n                  onChange={(e) => onChange(e)}\n                  id=\"member\"\n                  autoComplete=\"member\"\n                />\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Assigned To\n                </Typography>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"assign_to\"\n                  label=\"assign_to\"\n                  type=\"text\"\n                  onChange={(e) => onChange(e)}\n                  id=\"assign_to\"\n                  autoComplete=\"assign_to\"\n                />\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Linked Contacts\n                </Typography>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"contact\"\n                  label=\"contact\"\n                  type=\"text\"\n                  onChange={(e) => onChange(e)}\n                  id=\"contact\"\n                  autoComplete=\"contact\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"relation\"\n                  label=\"relation\"\n                  type=\"text\"\n                  onChange={(e) => onChange(e)}\n                  id=\"relation\"\n                  autoComplete=\"relation\"\n                />\n              </Grid>\n            </Grid>\n            <Box sx={{ float: \"right\" }}>\n              <Button variant=\"contained\" type=\"submit\" endIcon={<SaveIcon />}>\n                Save\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Contact;\n","/** @format */\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nimport Layout from \"./hocs/Layout\";\nimport PrivateRoutes from \"./utils/PrivateRoute\";\n\nimport { UserProvider } from \"./context/User\";\n\nimport Home from \"./containers/Home\";\n\n// Authentication links\nimport Login from \"./containers/Auth/Login\";\nimport Signup from \"./containers/Auth/Signup\";\nimport Activate from \"./containers/Auth/Activate\";\nimport ResetPassword from \"./containers/Auth/ResetPassword\";\nimport ResetPasswordConfirm from \"./containers/Auth/ResetPasswordConfirm\";\n\nimport Profile from \"./components/Profile/Profile\";\nimport Company from \"./components/Profile/Company\";\n\nimport DashBoard from \"./containers/Dashboards/DashBoard\";\n\nimport MatterDashboard from \"./containers/Matters/MatterDashboard\";\nimport Matters from \"./containers/Matters/Matters\";\nimport MatterDetail from \"./components/Matter/MatterDetail\";\nimport NewMatter from \"./components/Matter/NewMatter\";\n\nimport Invoice from \"./containers/Invoice/Invoice\";\nimport CreateInvoice from \"./components/Invoice/CreateInvoice\";\n\nimport Payment from \"./components/Invoice/Payment\";\nimport ManageCategory from \"./components/Category/ManageCategory\";\n\nimport CreateUser from \"./components/User/CreateUser\";\nimport ManageUser from \"./components/User/ManageUser\";\nimport ManageUserGroup from \"./components/User/ManageUserGroup\";\nimport UserRole from \"./components/User/UserRole\";\n\nimport Time from \"./components/Legder/Time\";\nimport TimeList from \"./components/Legder/TimeList\";\n\nimport LedgerTImeList from \"./components/Legder/LedgerTImeList\";\nimport LedgerActivity from \"./components/Legder/LedgerActivity\";\nimport LegderDashbard from \"./components/Legder/LegderDashbard\";\nimport CreateTask from \"./components/Tasks/CreateTask\";\nimport ViewTasks from \"./components/Tasks/ViewTasks\";\nimport LedgerDoc from \"./components/Legder/LedgerDoc\";\nimport Search from \"./components/Job/Ssearch\";\nimport Result from \"./components/Job/Result\";\nimport JobView from \"./components/Job/JobView\";\nimport Templates from \"./components/Template/Templates\";\n\nimport Contact from \"./components/Contact/Contact\";\n\nconst App = () => (\n  <Provider store={store}>\n    <UserProvider>\n      <Router>\n        <Layout>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n\n            {/* loging regierter routes */}\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/signup\" component={Signup} />\n            {/* authentication routes  */}\n            <Route path=\"/reset-password\" component={ResetPassword} />\n            <Route\n              path=\"/password/reset/confirm/:uid/:token\"\n              component={ResetPasswordConfirm}\n            />\n            <Route path=\"/activate/:uid/:token\" component={Activate} />\n\n            {/* private route after login  */}\n            <PrivateRoutes path=\"/dashboard\" component={DashBoard} />\n            <PrivateRoutes path=\"/profile\" component={Profile} />\n            <PrivateRoutes path=\"/company-detail\" component={Company} />\n\n            <PrivateRoutes\n              path=\"/matter-dashboard\"\n              component={MatterDashboard}\n            />\n            <PrivateRoutes path=\"/matters\" component={Matters} />\n            <PrivateRoutes path=\"/matter-detail\" component={MatterDetail} />\n            <PrivateRoutes path=\"/create-matter\" component={NewMatter} />\n\n            <PrivateRoutes path=\"/invoices\" component={Invoice} />\n            <PrivateRoutes path=\"/create-invoice\" component={CreateInvoice} />\n            <PrivateRoutes path=\"/recive-invoice\" component={Payment} />\n\n            <PrivateRoutes path=\"/create-user\" component={CreateUser} />\n            <PrivateRoutes path=\"/users\" component={ManageUser} />\n            <PrivateRoutes path=\"/user-group\" component={ManageUserGroup} />\n            <PrivateRoutes path=\"/user-role\" component={UserRole} />\n\n            <PrivateRoutes\n              path=\"/manage-categories\"\n              component={ManageCategory}\n            />\n            <PrivateRoutes path=\"/ledger-documents\" component={LedgerDoc} />\n            <PrivateRoutes path=\"/time\" component={Time} />\n            <PrivateRoutes path=\"/time-list\" component={TimeList} />\n            <PrivateRoutes path=\"/ledgers\" component={LegderDashbard} />\n            <PrivateRoutes path=\"/ledger-list\" component={LedgerTImeList} />\n            <PrivateRoutes path=\"/activity-list\" component={LedgerActivity} />\n\n            <PrivateRoutes path=\"/create-task\" component={CreateTask} />\n            <PrivateRoutes path=\"/view-tasks\" component={ViewTasks} />\n\n            <PrivateRoutes path=\"/job-search\" component={Search} />\n            <PrivateRoutes path=\"/job-result\" component={Result} />\n            <PrivateRoutes path=\"/job-view\" component={JobView} />\n            <PrivateRoutes path=\"/templates\" component={Templates} />\n            <PrivateRoutes path=\"/contact\" component={Contact} />\n          </Switch>\n        </Layout>\n      </Router>\n    </UserProvider>\n  </Provider>\n);\n\nexport default App;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}