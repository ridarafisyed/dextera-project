{"ast":null,"code":"var _jsxFileName = \"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/MatterList.jsx\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Paper, Table, TableCell, TableContainer, TableHead, TableRow, Typography, FormGroup, FormControlLabel, Checkbox, Box } from \"@mui/material\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MatterList = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [redTask, setRedTask] = useState(false);\n  const [greenTask, setGreenTask] = useState(false);\n  const [yellowTask, setYellowTask] = useState(false);\n  const [myTask, setMyTask] = useState(true);\n\n  const FetchData = () => {\n    axios.get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG).then(res => {\n      setLoading(false);\n      setStatus(res.statusText);\n      setTasks(res.data);\n    }).catch(err => {\n      setLoading(false);\n      setStatus(err.statusText);\n    });\n  };\n\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: Paper,\n    p: 2,\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      \"aria-label\": \"position\",\n      row: true,\n      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          value: myTask,\n          onChange: () => setMyTask(!myTask)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this),\n        label: \"My Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          value: redTask,\n          onChange: () => setRedTask(!redTask)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this),\n        label: \"Red Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          value: greenTask,\n          onChange: () => setGreenTask(!greenTask)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this),\n        label: \"Green Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          value: yellowTask,\n          onChange: () => setYellowTask(!yellowTask)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this),\n        label: \"Yellow Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"h3\",\n      children: \"All Matters Task's List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: /*#__PURE__*/_jsxDEV(TableHead, {\n          children: [/*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Matter Tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Matter Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Last Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Next Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Assign To\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), loading ? null : tasks === null || tasks === void 0 ? void 0 : tasks.map(data => {\n            return /*#__PURE__*/_jsxDEV(TableBody, {\n              id: data.id,\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                id: data.id,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: data.task_nature\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: data.matter\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: data.last_action\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: data.next_action\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: data.assign_to\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 23\n              }, this), \";\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MatterList, \"A4dc26RBXNr189iC+3J9enVoU/Y=\");\n\n_c = MatterList;\nexport default MatterList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MatterList\");","map":{"version":3,"sources":["/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/MatterList.jsx"],"names":["React","useEffect","useState","axios","Paper","Table","TableCell","TableContainer","TableHead","TableRow","Typography","FormGroup","FormControlLabel","Checkbox","Box","CONFIG","MatterList","tasks","setTasks","status","setStatus","loading","setLoading","redTask","setRedTask","greenTask","setGreenTask","yellowTask","setYellowTask","myTask","setMyTask","FetchData","get","process","env","REACT_APP_API_URL","then","res","statusText","data","catch","err","map","id","task_nature","matter","last_action","next_action","assign_to"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport {\n  Paper,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst MatterList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const [redTask, setRedTask] = useState(false);\n  const [greenTask, setGreenTask] = useState(false);\n  const [yellowTask, setYellowTask] = useState(false);\n  const [myTask, setMyTask] = useState(true);\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setTasks(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Box component={Paper} p={2}>\n      <FormGroup aria-label=\"position\" row>\n        <FormControlLabel\n          control={\n            <Checkbox value={myTask} onChange={() => setMyTask(!myTask)} />\n          }\n          label=\"My Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox value={redTask} onChange={() => setRedTask(!redTask)} />\n          }\n          label=\"Red Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              value={greenTask}\n              onChange={() => setGreenTask(!greenTask)}\n            />\n          }\n          label=\"Green Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              value={yellowTask}\n              onChange={() => setYellowTask(!yellowTask)}\n            />\n          }\n          label=\"Yellow Tasks\"\n        />\n      </FormGroup>\n      <Typography component=\"h3\">All Matters Task's List</Typography>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assign To</TableCell>\n            </TableRow>\n            {loading\n              ? null\n              : tasks?.map((data) => {\n                  return (\n                    <TableBody id={data.id}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableRow id={data.id}>\n                        <TableCell>{data.task_nature}</TableCell>\n                        <TableCell>{data.matter}</TableCell>\n                        <TableCell>{data.last_action}</TableCell>\n                        <TableCell>{data.next_action}</TableCell>\n                        <TableCell>{data.assign_to}</TableCell>\n                      </TableRow>\n                      ;\n                    </TableBody>\n                  );\n                })}\n          </TableHead>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n\nexport default MatterList;\n"]},"metadata":{},"sourceType":"module"}