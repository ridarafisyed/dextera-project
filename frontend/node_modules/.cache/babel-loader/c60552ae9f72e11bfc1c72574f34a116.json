{"ast":null,"code":"var _jsxFileName = \"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Tasks/CreateTask.jsx\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { Fragment, useState } from \"react\";\nimport { TextField, Switch, FormControlLabel, Box, Grid, Button, Typography } from \"@mui/material\";\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateTask = () => {\n  _s();\n\n  const [bill, setBill] = useToggle(true);\n  const [isPrivate, setIsPrivate] = useToggle(true);\n  const [taskData, setTaskData] = useState({\n    matter_no: 0,\n    matter_contact: \"\",\n    matter: \"\",\n    billable: true,\n    is_private: true,\n    task: \"\",\n    due_date: \"\",\n    assign_to: \"\",\n    detail: \"\"\n  });\n  const {\n    matter_no,\n    matter_contact,\n    matter,\n    billable,\n    is_private,\n    task,\n    due_date,\n    assign_to,\n    detail\n  } = taskData;\n\n  const onChange = e => setTaskData({ ...taskData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault(); // login(username, email, password);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      Validate: true,\n      sx: {\n        \"& .MuiTextField-root\": {\n          m: 1\n        }\n      },\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h3\",\n        variant: \"h4\",\n        children: \"Create New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        p: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            size: \"small\",\n            margin: \"normal\",\n            variant: \"outlined\",\n            name: \"matter_no\",\n            label: \"Matter no\",\n            type: \"text\",\n            value: matter_no,\n            onChange: e => onChange(e),\n            id: \"matter_no\",\n            autoComplete: \"matter_no\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            size: \"small\",\n            margin: \"normal\",\n            variant: \"outlined\",\n            name: \"matter\",\n            label: \"Matter\",\n            type: \"text\",\n            value: matter,\n            onChange: e => onChange(e),\n            id: \"matter\",\n            autoComplete: \"matter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            size: \"small\",\n            margin: \"normal\",\n            variant: \"outlined\",\n            name: \"task\",\n            label: \"Task\",\n            type: \"task\",\n            value: task,\n            onChange: e => onChange(e),\n            id: \"task\",\n            autoComplete: \"task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            ml: 2,\n            mt: 1,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              children: \"+ Attach File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            size: \"small\",\n            margin: \"normal\",\n            variant: \"outlined\",\n            name: \"matter_contact\",\n            label: \"Matter Contact\",\n            type: \"text\",\n            value: matter_contact,\n            onChange: e => onChange(e),\n            id: \"matter_contact\",\n            autoComplete: \"matter_contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            p: 1,\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              fullWidth: true,\n              size: \"large\",\n              label: \"Billable\",\n              labelPlacement: \"start\",\n              control: /*#__PURE__*/_jsxDEV(Switch, {\n                size: \"large\",\n                checked: bill,\n                onChange: () => setBill(bill)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              fullWidth: true,\n              size: \"large\",\n              label: \"Private\",\n              labelPlacement: \"start\",\n              control: /*#__PURE__*/_jsxDEV(Switch, {\n                size: \"large\",\n                checked: isPrivate,\n                onChange: () => setIsPrivate(isPrivate)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            size: \"small\",\n            id: \"due_date\",\n            label: \"Due Date\",\n            type: \"date\",\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            size: \"small\",\n            margin: \"normal\",\n            variant: \"outlined\",\n            name: \"assign_to\",\n            label: \"Assign to\",\n            type: \"assign_to\",\n            value: assign_to,\n            onChange: e => onChange(e),\n            id: \"assign_to\",\n            autoComplete: \"assign_to\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            multiline: true,\n            rows: 5,\n            size: \"small\",\n            margin: \"normal\",\n            variant: \"outlined\",\n            name: \"detail\",\n            label: \"Detail\",\n            type: \"text\",\n            value: detail,\n            onChange: e => onChange(e),\n            id: \"detail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            sx: {\n              float: \"right\"\n            },\n            endIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 24\n            }, this),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateTask, \"eC24/lyxc5TL1rIQ993ehPEnQZs=\", false, function () {\n  return [useToggle, useToggle];\n});\n\n_c = CreateTask;\nexport default CreateTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"sources":["/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Tasks/CreateTask.jsx"],"names":["React","Fragment","useState","TextField","Switch","FormControlLabel","Box","Grid","Button","Typography","LocalizationProvider","DateRangePicker","AdapterDateFns","SaveIcon","useToggle","CreateTask","bill","setBill","isPrivate","setIsPrivate","taskData","setTaskData","matter_no","matter_contact","matter","billable","is_private","task","due_date","assign_to","detail","onChange","e","target","name","value","onSubmit","preventDefault","m","shrink","float"],"mappings":"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","sourcesContent":["/** @format */\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Switch,\n  FormControlLabel,\n  Box,\n  Grid,\n  Button,\n  Typography,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { useToggle } from \"../../context/useToggle\";\nconst CreateTask = () => {\n  const [bill, setBill] = useToggle(true);\n  const [isPrivate, setIsPrivate] = useToggle(true);\n  const [taskData, setTaskData] = useState({\n    matter_no: 0,\n    matter_contact: \"\",\n    matter: \"\",\n    billable: true,\n    is_private: true,\n    task: \"\",\n    due_date: \"\",\n    assign_to: \"\",\n    detail: \"\",\n  });\n\n  const {\n    matter_no,\n    matter_contact,\n    matter,\n    billable,\n    is_private,\n    task,\n    due_date,\n    assign_to,\n    detail,\n  } = taskData;\n\n  const onChange = (e) =>\n    setTaskData({ ...taskData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    // login(username, email, password);\n  };\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create New Task\n        </Typography>\n        <Grid container spacing={2} p={2}>\n          <Grid item xs={6}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_no\"\n              label=\"Matter no\"\n              type=\"text\"\n              value={matter_no}\n              onChange={(e) => onChange(e)}\n              id=\"matter_no\"\n              autoComplete=\"matter_no\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter\"\n              label=\"Matter\"\n              type=\"text\"\n              value={matter}\n              onChange={(e) => onChange(e)}\n              id=\"matter\"\n              autoComplete=\"matter\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"task\"\n              label=\"Task\"\n              type=\"task\"\n              value={task}\n              onChange={(e) => onChange(e)}\n              id=\"task\"\n              autoComplete=\"task\"\n            />\n            <Box ml={2} mt={1}>\n              <Button variant=\"contained\">+ Attach File</Button>\n            </Box>\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_contact\"\n              label=\"Matter Contact\"\n              type=\"text\"\n              value={matter_contact}\n              onChange={(e) => onChange(e)}\n              id=\"matter_contact\"\n              autoComplete=\"matter_contact\"\n            />\n            <Box p={1}>\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Billable\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    size=\"large\"\n                    checked={bill}\n                    onChange={() => setBill(bill)}\n                  />\n                }\n              />\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Private\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    size=\"large\"\n                    checked={isPrivate}\n                    onChange={() => setIsPrivate(isPrivate)}\n                  />\n                }\n              />\n            </Box>\n            <TextField\n              fullWidth\n              size=\"small\"\n              id=\"due_date\"\n              label=\"Due Date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"assign_to\"\n              label=\"Assign to\"\n              type=\"assign_to\"\n              value={assign_to}\n              onChange={(e) => onChange(e)}\n              id=\"assign_to\"\n              autoComplete=\"assign_to\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              multiline\n              rows={5}\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"detail\"\n              label=\"Detail\"\n              type=\"text\"\n              value={detail}\n              onChange={(e) => onChange(e)}\n              id=\"detail\"\n            />\n\n            <Button\n              variant=\"contained\"\n              sx={{ float: \"right\" }}\n              endIcon={<SaveIcon />}\n            >\n              Save\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateTask;\n"]},"metadata":{},"sourceType":"module"}