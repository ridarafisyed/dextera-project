{"ast":null,"code":"import _slicedToArray from\"/home/supersis03/Projects/Dextera/dextera-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/** @format */import React,{Fragment,useEffect,useState}from\"react\";import{Box,Table,TableContainer,TableHead,TableRow,TableCell,Checkbox,TableBody}from\"@mui/material\";import{LinkButton}from\"../../styles/styles\";import axios from\"axios\";import{CONFIG}from\"../../api/MatterApi\";import CircleIcon from\"@mui/icons-material/Circle\";import{GetDate}from\"../../utils/ActionAlerts\";import NumberFormat from\"react-number-format\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MatterListLong=function MatterListLong(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),matters=_useState2[0],setMatters=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),status=_useState4[0],setStatus=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];var FetchData=function FetchData(){axios.get(\"\".concat(process.env.REACT_APP_API_URL,\"/api/new-matter/\"),CONFIG).then(function(res){console.log(res.data);setLoading(false);setStatus(res.statusText);setMatters(res.data);}).catch(function(err){setLoading(false);setStatus(err.statusText);});};useEffect(function(){FetchData();},[]);return/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsx(TableContainer,{children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{}),/*#__PURE__*/_jsx(TableCell,{children:\"Matter Tasks\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Matter Name\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Matter Contact\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Matter Type\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Bill Rate\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Last Action\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Next Action\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Assigned to\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Billable\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Open Invoice\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Trust Account\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Last Payment\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:loading?null:matters===null||matters===void 0?void 0:matters.map(function(data,index){return/*#__PURE__*/_jsxs(TableRow,{id:index,children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Checkbox,{})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(CircleIcon,{color:\"error\"})}),/*#__PURE__*/_jsx(TableCell,{children:data.matter_name}),/*#__PURE__*/_jsx(TableCell,{children:data.contact}),/*#__PURE__*/_jsx(TableCell,{children:data.matter_type}),/*#__PURE__*/_jsx(TableCell,{children:data.billing_rate}),/*#__PURE__*/_jsx(TableCell,{children:data.open_date}),/*#__PURE__*/_jsx(TableCell,{children:data.close_date}),/*#__PURE__*/_jsx(TableCell,{children:data.assign_to}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(NumberFormat,{value:Math.floor(Math.random()*100),displayType:\"text\",thousandSeparator:true,decimalScale:2,fixedDecimalScale:true,prefix:\"$\"})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(NumberFormat,{value:Math.floor(Math.random()*1000),displayType:\"text\",thousandSeparator:true,decimalScale:2,fixedDecimalScale:true,prefix:\"$\"})}),/*#__PURE__*/_jsxs(TableCell,{children:[\" \",/*#__PURE__*/_jsx(NumberFormat,{value:Math.floor(Math.random()*1000),displayType:\"text\",thousandSeparator:true,decimalScale:2,fixedDecimalScale:true,prefix:\"$\"})]}),/*#__PURE__*/_jsxs(TableCell,{children:[/*#__PURE__*/_jsx(NumberFormat,{value:Math.floor(Math.random()*1000),displayType:\"text\",thousandSeparator:true,decimalScale:2,fixedDecimalScale:true,prefix:\"$\"}),\" \",\"- \",data.close_date]})]});})})]})})});};export default MatterListLong;","map":{"version":3,"sources":["/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/MatterListLong.jsx"],"names":["React","Fragment","useEffect","useState","Box","Table","TableContainer","TableHead","TableRow","TableCell","Checkbox","TableBody","LinkButton","axios","CONFIG","CircleIcon","GetDate","NumberFormat","MatterListLong","matters","setMatters","status","setStatus","loading","setLoading","FetchData","get","process","env","REACT_APP_API_URL","then","res","console","log","data","statusText","catch","err","map","index","matter_name","contact","matter_type","billing_rate","open_date","close_date","assign_to","Math","floor","random"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n  TableBody,\n} from \"@mui/material\";\nimport { LinkButton } from \"../../styles/styles\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst MatterListLong = () => {\n  const [matters, setMatters] = useState([]);\n\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/new-matter/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setMatters(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  return (\n    <Fragment>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Matter Contact</TableCell>\n              <TableCell>Matter Type</TableCell>\n              <TableCell>Bill Rate</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assigned to</TableCell>\n              <TableCell>Billable</TableCell>\n              <TableCell>Open Invoice</TableCell>\n              <TableCell>Trust Account</TableCell>\n              <TableCell>Last Payment</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {loading\n              ? null\n              : matters?.map((data, index) => {\n                  return (\n                    <TableRow id={index}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>\n                        <CircleIcon color=\"error\" />\n                      </TableCell>\n                      <TableCell>{data.matter_name}</TableCell>\n                      <TableCell>{data.contact}</TableCell>\n                      <TableCell>{data.matter_type}</TableCell>\n                      <TableCell>{data.billing_rate}</TableCell>\n                      <TableCell>{data.open_date}</TableCell>\n                      <TableCell>{data.close_date}</TableCell>\n                      <TableCell>{data.assign_to}</TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 100)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        {\" \"}\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />{\" \"}\n                        - {data.close_date}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default MatterListLong;\n"]},"metadata":{},"sourceType":"module"}