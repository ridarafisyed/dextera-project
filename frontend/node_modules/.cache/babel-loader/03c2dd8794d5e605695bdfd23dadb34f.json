{"ast":null,"code":"/** @format */import React from'react';import{BrowserRouter as Router,Route,Switch}from'react-router-dom';import Home from'./containers/Home';import Login from'./containers/Login';import Signup from'./containers/Signup';import DashBoard from'./containers/DashBoard';import Activate from'./containers/Activate';import ResetPassword from'./containers/ResetPassword';import ResetPasswordConfirm from'./containers/ResetPasswordConfirm';import MatterDashboard from'./components/Matter/MatterDashboard';import{Provider}from'react-redux';import store from'./store';import Layout from'./hocs/Layout';// import PrivateRoutes from './utils/PrivateRoute';\nimport Profile from'./components/Profile/Profile';// import { UserProvider } from './contexts/UserProvider';\nimport{UserProvider}from'./context/User';// import './App.css'\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){return/*#__PURE__*/_jsx(Provider,{store:store,children:/*#__PURE__*/_jsx(UserProvider,{children:/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(Layout,{children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",component:Home}),/*#__PURE__*/_jsx(Route,{path:\"/login\",component:Login}),/*#__PURE__*/_jsx(Route,{path:\"/signup\",component:Signup}),/*#__PURE__*/_jsx(Route,{path:\"/matter\",component:MatterDashboard}),/*#__PURE__*/_jsx(Route,{path:\"/reset-password\",component:ResetPassword}),/*#__PURE__*/_jsx(Route,{path:\"/password/reset/confirm/:uid/:token\",component:ResetPasswordConfirm}),/*#__PURE__*/_jsx(Route,{path:\"/activate/:uid/:token\",component:Activate}),/*#__PURE__*/_jsx(PrivateRoutes,{path:\"/dashboard\",component:DashBoard}),/*#__PURE__*/_jsx(PrivateRoutes,{path:\"/profile\",component:Profile}),/*#__PURE__*/_jsx(PrivateRoutes,{path:\"/matters\",component:MatterDashboard})]})})})})});};export default App;","map":{"version":3,"sources":["/home/supersis03/Projects/dextera-project/frontend/src/App.js"],"names":["React","BrowserRouter","Router","Route","Switch","Home","Login","Signup","DashBoard","Activate","ResetPassword","ResetPasswordConfirm","MatterDashboard","Provider","store","Layout","Profile","UserProvider","App"],"mappings":"AAAA,cAEA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,KAAlC,CAAyCC,MAAzC,KAAuD,kBAAvD,CAEA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CACA,MAAOC,CAAAA,aAAP,KAA0B,4BAA1B,CACA,MAAOC,CAAAA,oBAAP,KAAiC,mCAAjC,CACA,MAAOC,CAAAA,eAAP,KAA4B,qCAA5B,CAEA,OAASC,QAAT,KAAyB,aAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,eAAnB,CACA;AACA,MAAOC,CAAAA,OAAP,KAAoB,8BAApB,CACA;AACA,OAASC,YAAT,KAA6B,gBAA7B,CAEA;wFAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,sBACV,KAAC,QAAD,EAAU,KAAK,CAAEJ,KAAjB,uBACE,KAAC,YAAD,wBACE,KAAC,MAAD,wBACE,KAAC,MAAD,wBACE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,CAAsB,SAAS,CAAET,IAAjC,EADF,cAIE,KAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,CAAqB,SAAS,CAAEC,KAAhC,EAJF,cAKE,KAAC,KAAD,EAAO,IAAI,CAAC,SAAZ,CAAsB,SAAS,CAAEC,MAAjC,EALF,cAME,KAAC,KAAD,EAAO,IAAI,CAAC,SAAZ,CAAsB,SAAS,CAAEK,eAAjC,EANF,cAQE,KAAC,KAAD,EAAO,IAAI,CAAC,iBAAZ,CAA8B,SAAS,CAAEF,aAAzC,EARF,cASE,KAAC,KAAD,EACE,IAAI,CAAC,qCADP,CAEE,SAAS,CAAEC,oBAFb,EATF,cAaE,KAAC,KAAD,EAAO,IAAI,CAAC,uBAAZ,CAAoC,SAAS,CAAEF,QAA/C,EAbF,cAiBE,KAAC,aAAD,EAAe,IAAI,CAAC,YAApB,CAAiC,SAAS,CAAED,SAA5C,EAjBF,cAkBE,KAAC,aAAD,EAAe,IAAI,CAAC,UAApB,CAA+B,SAAS,CAAEQ,OAA1C,EAlBF,cAmBE,KAAC,aAAD,EAAe,IAAI,CAAC,UAApB,CAA+B,SAAS,CAAEJ,eAA1C,EAnBF,GADF,EADF,EADF,EADF,EADU,EAAZ,CAgCA,cAAeM,CAAAA,GAAf","sourcesContent":["/** @format */\n\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Home from './containers/Home';\nimport Login from './containers/Login';\nimport Signup from './containers/Signup';\nimport DashBoard from './containers/DashBoard';\nimport Activate from './containers/Activate';\nimport ResetPassword from './containers/ResetPassword';\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm';\nimport MatterDashboard from './components/Matter/MatterDashboard';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport Layout from './hocs/Layout';\n// import PrivateRoutes from './utils/PrivateRoute';\nimport Profile from './components/Profile/Profile';\n// import { UserProvider } from './contexts/UserProvider';\nimport { UserProvider } from './context/User';\n\n// import './App.css'\n\nconst App = () => (\n  <Provider store={store}>\n    <UserProvider>\n      <Router>\n        <Layout>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n\n            {/* loging regierter routes */}\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/matter\" component={MatterDashboard} />\n            {/* authentication routes  */}\n            <Route path=\"/reset-password\" component={ResetPassword} />\n            <Route\n              path=\"/password/reset/confirm/:uid/:token\"\n              component={ResetPasswordConfirm}\n            />\n            <Route path=\"/activate/:uid/:token\" component={Activate} />\n            {/* private route after login  */}\n            {/* <PrivateRoutes  path=\"/dashboard\" component={DashBoard}/>\n                    <PrivateRoutes  path='/profile' component={Profile}/> */}\n            <PrivateRoutes path=\"/dashboard\" component={DashBoard} />\n            <PrivateRoutes path=\"/profile\" component={Profile} />\n            <PrivateRoutes path=\"/matters\" component={MatterDashboard} />\n          </Switch>\n        </Layout>\n      </Router>\n    </UserProvider>\n  </Provider>\n);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}