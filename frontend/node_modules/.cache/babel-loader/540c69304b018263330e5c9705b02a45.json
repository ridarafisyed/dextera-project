{"ast":null,"code":"import _regeneratorRuntime from\"/home/supersis03/Projects/dextera-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/supersis03/Projects/dextera-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import{ROLE_SUCCESS,ROLE_FAIL,ROLE_LOADED_SUCCESS,ROLE_LOADED_FAIL}from'./types';// get the list of roles by user email\nexport var get_role=function get_role(username){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var config,body,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:config={headers:{'Content-Type':'application/json'}};body=JSON.stringify({username:username});_context.prev=2;_context.next=5;return axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/auth/roles/\"),body,config);case 5:res=_context.sent;dispatch({type:ROLE_LOADED_SUCCESS,payload:res.data});_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](2);dispatch({type:ROLE_LOADED_FAIL});case 12:case\"end\":return _context.stop();}}},_callee,null,[[2,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();};//  setting roles at the time of registeration, or upgrading account \nexport var create_role=function create_role(username,is_firm,is_lawyer,is_client){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var config,body,res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:config={headers:{'Content-Type':'application/json'}};body=JSON.stringify({username:username,is_firm:is_firm,is_lawyer:is_lawyer,is_client:is_client});_context2.prev=2;_context2.next=5;return axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/auth/roles/\"),body,config);case 5:res=_context2.sent;dispatch({type:ROLE_SUCCESS,payload:res.data});_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](2);dispatch({type:ROLE_FAIL});case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[2,9]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};","map":{"version":3,"sources":["/home/supersis03/Projects/dextera-project/frontend/src/actions/role.js"],"names":["axios","ROLE_SUCCESS","ROLE_FAIL","ROLE_LOADED_SUCCESS","ROLE_LOADED_FAIL","get_role","username","dispatch","config","headers","body","JSON","stringify","post","process","env","REACT_APP_API_URL","res","type","payload","data","create_role","is_firm","is_lawyer","is_client"],"mappings":"+UAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACIC,YADJ,CAEIC,SAFJ,CAGIC,mBAHJ,CAIIC,gBAJJ,KAKO,SALP,CAOA;AACA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,iGAAc,iBAAMC,QAAN,sIAC5BC,MAD4B,CACnB,CACXC,OAAO,CAAE,CACL,eAAgB,kBADX,CADE,CADmB,CAM5BC,IAN4B,CAMrBC,IAAI,CAACC,SAAL,CAAe,CAAEN,QAAQ,CAARA,QAAF,CAAf,CANqB,uCASZN,CAAAA,KAAK,CAACa,IAAN,WAAcC,OAAO,CAACC,GAAR,CAAYC,iBAA1B,iBAA2DN,IAA3D,CAAiEF,MAAjE,CATY,QASxBS,GATwB,eAW9BV,QAAQ,CAAC,CACLW,IAAI,CAAEf,mBADD,CAELgB,OAAO,CAAEF,GAAG,CAACG,IAFR,CAAD,CAAR,CAX8B,+EAgB9Bb,QAAQ,CAAC,CACLW,IAAI,CAAEd,gBADD,CAAD,CAAR,CAhB8B,oEAAd,gEAAjB,CAsBP;AACA,MAAO,IAAMiB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACf,QAAD,CAAWgB,OAAX,CAAoBC,SAApB,CAAgCC,SAAhC,kGAA8C,kBAAMjB,QAAN,0IAC/DC,MAD+D,CACtD,CACXC,OAAO,CAAE,CACL,eAAgB,kBADX,CADE,CADsD,CAM/DC,IAN+D,CAMxDC,IAAI,CAACC,SAAL,CAAe,CAACN,QAAQ,CAARA,QAAD,CAAWgB,OAAO,CAAPA,OAAX,CAAoBC,SAAS,CAATA,SAApB,CAA+BC,SAAS,CAATA,SAA/B,CAAf,CANwD,yCAS/CxB,CAAAA,KAAK,CAACa,IAAN,WAAcC,OAAO,CAACC,GAAR,CAAYC,iBAA1B,iBAA2DN,IAA3D,CAAiEF,MAAjE,CAT+C,QAS3DS,GAT2D,gBAUjEV,QAAQ,CAAC,CACLW,IAAI,CAAEjB,YADD,CAELkB,OAAO,CAAEF,GAAG,CAACG,IAFR,CAAD,CAAR,CAViE,mFAejEb,QAAQ,CAAC,CACLW,IAAI,CAAEhB,SADD,CAAD,CAAR,CAfiE,sEAA9C,kEAApB","sourcesContent":["import axios from 'axios';\nimport {\n    ROLE_SUCCESS,\n    ROLE_FAIL,\n    ROLE_LOADED_SUCCESS,\n    ROLE_LOADED_FAIL\n} from './types';\n\n// get the list of roles by user email\nexport const get_role = (username) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n    const body = JSON.stringify({ username });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/roles/`, body, config);\n        \n        dispatch({\n            type: ROLE_LOADED_SUCCESS,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: ROLE_LOADED_FAIL\n        })\n    }\n};\n\n//  setting roles at the time of registeration, or upgrading account \nexport const create_role = (username, is_firm, is_lawyer,  is_client) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n    const body = JSON.stringify({username, is_firm, is_lawyer, is_client});\n   \n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/roles/`, body, config);\n        dispatch({\n            type: ROLE_SUCCESS,\n            payload: res.data \n        });\n    } catch (err) {\n        dispatch({\n            type: ROLE_FAIL\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}