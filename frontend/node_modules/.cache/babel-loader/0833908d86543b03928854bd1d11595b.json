{"ast":null,"code":"/** @format */\nimport axios from \"axios\";\nimport { PROFILE_UPDATE_FAIL, PROFILE_UPDATE_SUCCESS, PROFILE_LOADED_SUCCESS, PROFILE_LOADED_FAIL, PROFILE_CREATED_FAIL, PROFILE_CREATED_SUCCESS } from \"./types\";\nexport const create_profile = (username, email) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    username,\n    email\n  });\n\n  try {\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/profile/`, body, config);\n    dispatch({\n      type: PROFILE_CREATED_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_CREATED_FAIL\n    });\n  }\n};\nexport const get_profile = username => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    username\n  });\n\n  try {\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/profile/`, body, config);\n    dispatch({\n      type: PROFILE_LOADED_SUCCESS,\n      payload: res.data[0]\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_LOADED_FAIL\n    });\n  }\n};\nexport const update_profile = (id, username, email, mobile, phone, state, city, language, locate, search_active, law_school, grad_year, bar_admit_date, undergrad_school, undergrad_area, undergrad_year, bar_no, admitted_practice, practice_time, longest_tenure, average_tenure, current_tenure, past_bar_companies_no, primary_area) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    username,\n    email,\n    mobile,\n    phone,\n    state,\n    city,\n    language,\n    locate,\n    search_active,\n    law_school,\n    grad_year,\n    bar_admit_date,\n    undergrad_school,\n    undergrad_area,\n    undergrad_year,\n    bar_no,\n    admitted_practice,\n    practice_time,\n    longest_tenure,\n    average_tenure,\n    current_tenure,\n    past_bar_companies_no,\n    primary_area\n  });\n\n  try {\n    const res = await axios.patch(`${process.env.REACT_APP_API_URL}/api/profile/${id}`, body, config);\n    dispatch({\n      type: PROFILE_UPDATE_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_UPDATE_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/home/supersis03/Projects/dextera-project/frontend/src/actions/profile.js"],"names":["axios","PROFILE_UPDATE_FAIL","PROFILE_UPDATE_SUCCESS","PROFILE_LOADED_SUCCESS","PROFILE_LOADED_FAIL","PROFILE_CREATED_FAIL","PROFILE_CREATED_SUCCESS","create_profile","username","email","dispatch","config","headers","Accept","body","JSON","stringify","res","post","process","env","REACT_APP_API_URL","type","payload","data","err","get_profile","get","update_profile","id","mobile","phone","state","city","language","locate","search_active","law_school","grad_year","bar_admit_date","undergrad_school","undergrad_area","undergrad_year","bar_no","admitted_practice","practice_time","longest_tenure","average_tenure","current_tenure","past_bar_companies_no","primary_area","patch"],"mappings":"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","sourcesContent":["/** @format */\n\nimport axios from \"axios\";\nimport {\n  PROFILE_UPDATE_FAIL,\n  PROFILE_UPDATE_SUCCESS,\n  PROFILE_LOADED_SUCCESS,\n  PROFILE_LOADED_FAIL,\n  PROFILE_CREATED_FAIL,\n  PROFILE_CREATED_SUCCESS,\n} from \"./types\";\n\nexport const create_profile = (username, email) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n  };\n  const body = JSON.stringify({\n    username,\n    email,\n  });\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/api/profile/`,\n      body,\n      config,\n    );\n\n    dispatch({\n      type: PROFILE_CREATED_SUCCESS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_CREATED_FAIL,\n    });\n  }\n};\n\nexport const get_profile = (username) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n  };\n  const body = JSON.stringify({ username });\n\n  try {\n    const res = await axios.get(\n      `${process.env.REACT_APP_API_URL}/api/profile/`,\n      body,\n      config,\n    );\n    dispatch({\n      type: PROFILE_LOADED_SUCCESS,\n      payload: res.data[0],\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_LOADED_FAIL,\n    });\n  }\n};\n\nexport const update_profile =\n  (\n    id,\n    username,\n    email,\n    mobile,\n    phone,\n    state,\n    city,\n    language,\n    locate,\n    search_active,\n    law_school,\n    grad_year,\n    bar_admit_date,\n    undergrad_school,\n    undergrad_area,\n    undergrad_year,\n    bar_no,\n    admitted_practice,\n    practice_time,\n    longest_tenure,\n    average_tenure,\n    current_tenure,\n    past_bar_companies_no,\n    primary_area,\n  ) =>\n  async (dispatch) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const body = JSON.stringify({\n      username,\n      email,\n      mobile,\n      phone,\n      state,\n      city,\n      language,\n      locate,\n      search_active,\n      law_school,\n      grad_year,\n      bar_admit_date,\n      undergrad_school,\n      undergrad_area,\n      undergrad_year,\n      bar_no,\n      admitted_practice,\n      practice_time,\n      longest_tenure,\n      average_tenure,\n      current_tenure,\n      past_bar_companies_no,\n      primary_area,\n    });\n\n    try {\n      const res = await axios.patch(\n        `${process.env.REACT_APP_API_URL}/api/profile/${id}`,\n        body,\n        config,\n      );\n      dispatch({\n        type: PROFILE_UPDATE_SUCCESS,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: PROFILE_UPDATE_FAIL,\n      });\n    }\n  };\n"]},"metadata":{},"sourceType":"module"}