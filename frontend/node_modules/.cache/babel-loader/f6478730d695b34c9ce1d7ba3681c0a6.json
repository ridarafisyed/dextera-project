{"ast":null,"code":"import _slicedToArray from\"/home/supersis03/Projects/dextera-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/** @format */import React,{Fragment,useState,useEffect}from\"react\";import axios from\"axios\";import{Table,TableCell,TableHead,TableRow,Typography}from\"@mui/material\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MatterList=function MatterList(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),matter=_useState2[0],setMatters=_useState2[1];var config={headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(localStorage.getItem(\"access\")),Accept:\"application/json\"}};useEffect(function(){var res=axios.get(\"\".concat(process.env.REACT_APP_API_URL,\"/api/matter\"),config);setMatters(res.data);},[]);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Typography,{component:\"h3\",children:\"All Matters Task's List\"}),/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsx(Table,{children:/*#__PURE__*/_jsxs(TableHead,{children:[/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Matter Tasks\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Matter Name\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Last Action\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Next Action\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Assign To\"})]}),/*#__PURE__*/_jsx(TableRow,{children:/*#__PURE__*/_jsx(TableCell,{})})]})})})]});};export default MatterList;","map":{"version":3,"sources":["/home/supersis03/Projects/dextera-project/frontend/src/components/Matter/components/MatterList.jsx"],"names":["React","Fragment","useState","useEffect","axios","Table","TableCell","TableHead","TableRow","Typography","MatterList","matter","setMatters","config","headers","Authorization","localStorage","getItem","Accept","res","get","process","env","REACT_APP_API_URL","data","Paper"],"mappings":"yKAAA,cAEA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,CAAoCC,SAApC,KAAqD,OAArD,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OACEC,KADF,CAEEC,SAFF,CAGEC,SAHF,CAIEC,QAJF,CAKEC,UALF,KAMO,eANP,C,wFAQA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,eACMR,QAAQ,CAAC,IAAD,CADd,wCAChBS,MADgB,eACRC,UADQ,eAEvB,GAAMC,CAAAA,MAAM,CAAG,CACbC,OAAO,CAAE,CACP,eAAgB,kBADT,CAEPC,aAAa,kBAAYC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAZ,CAFN,CAGPC,MAAM,CAAE,kBAHD,CADI,CAAf,CAOAf,SAAS,CAAC,UAAM,CACd,GAAMgB,CAAAA,GAAG,CAAGf,KAAK,CAACgB,GAAN,WACPC,OAAO,CAACC,GAAR,CAAYC,iBADL,gBAEVV,MAFU,CAAZ,CAIAD,UAAU,CAACO,GAAG,CAACK,IAAL,CAAV,CACD,CANQ,CAMN,EANM,CAAT,CAOA,mBACE,MAAC,QAAD,yBACE,KAAC,UAAD,EAAY,SAAS,CAAC,IAAtB,qCADF,cAEE,KAAC,cAAD,EAAgB,SAAS,CAAEC,KAA3B,uBACE,KAAC,KAAD,wBACE,MAAC,SAAD,yBACE,MAAC,QAAD,yBACE,KAAC,SAAD,2BADF,cAEE,KAAC,SAAD,0BAFF,cAGE,KAAC,SAAD,0BAHF,cAIE,KAAC,SAAD,0BAJF,cAKE,KAAC,SAAD,wBALF,GADF,cASE,KAAC,QAAD,wBACE,KAAC,SAAD,IADF,EATF,GADF,EADF,EAFF,GADF,CAsBD,CAtCD,CAwCA,cAAef,CAAAA,UAAf","sourcesContent":["/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport {\n  Table,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@mui/material\";\n\nconst MatterList = () => {\n  const [matter, setMatters] = useState(null);\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\n      Accept: \"application/json\",\n    },\n  };\n  useEffect(() => {\n    const res = axios.get(\n      `${process.env.REACT_APP_API_URL}/api/matter`,\n      config,\n    );\n    setMatters(res.data);\n  }, []);\n  return (\n    <Fragment>\n      <Typography component=\"h3\">All Matters Task's List</Typography>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assign To</TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableHead>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default MatterList;\n"]},"metadata":{},"sourceType":"module"}