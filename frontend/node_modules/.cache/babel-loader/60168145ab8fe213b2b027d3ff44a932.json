{"ast":null,"code":"var _jsxFileName = \"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/utils/ActionAlerts.js\";\n\n/** @format */\nimport React from \"react\";\nimport { Alert } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ActionAlerts = status => {\n  switch (status) {\n    case \"OK\":\n      return /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        children: \"Sussues\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 14\n      }, this);\n\n    case \"error\":\n      return /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 14\n      }, this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"info\",\n        children: \"Something went wronge Please tryagain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this);\n  }\n};\n_c = ActionAlerts;\nexport const TotalDays = (date1, date2) => {\n  let dt1 = new Date(date1);\n  let dt2 = new Date(date2);\n  return Math.floor((Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) - Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate())) / (1000 * 60 * 60 * 24));\n};\n_c2 = TotalDays;\nexport const GetDate = date => {\n  let newDate = date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\n  return newDate;\n};\n_c3 = GetDate;\nexport const GetTime = time => {\n  let newTime = time.getHours() + \":\" + (time.getMinutes() + 1) + \"-\" + time.getSecond();\n  return newDate;\n};\n_c4 = GetTime;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ActionAlerts\");\n$RefreshReg$(_c2, \"TotalDays\");\n$RefreshReg$(_c3, \"GetDate\");\n$RefreshReg$(_c4, \"GetTime\");","map":{"version":3,"sources":["/home/supersis03/Projects/Dextera/dextera-project/frontend/src/utils/ActionAlerts.js"],"names":["React","Alert","ActionAlerts","status","TotalDays","date1","date2","dt1","Date","dt2","Math","floor","UTC","getFullYear","getMonth","getDate","GetDate","date","newDate","GetTime","time","newTime","getHours","getMinutes","getSecond"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,eAAtB;;AAEA,OAAO,MAAMC,YAAY,GAAIC,MAAD,IAAY;AACtC,UAAQA,MAAR;AACE,SAAK,IAAL;AACE,0BAAO,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF,SAAK,OAAL;AACE,0BAAO,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF;AACE,0BACE,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AANJ;AAUD,CAXM;KAAMD,Y;AAab,OAAO,MAAME,SAAS,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACzC,MAAIC,GAAG,GAAG,IAAIC,IAAJ,CAASH,KAAT,CAAV;AACA,MAAII,GAAG,GAAG,IAAID,IAAJ,CAASF,KAAT,CAAV;AACA,SAAOI,IAAI,CAACC,KAAL,CACL,CAACH,IAAI,CAACI,GAAL,CAASH,GAAG,CAACI,WAAJ,EAAT,EAA4BJ,GAAG,CAACK,QAAJ,EAA5B,EAA4CL,GAAG,CAACM,OAAJ,EAA5C,IACCP,IAAI,CAACI,GAAL,CAASL,GAAG,CAACM,WAAJ,EAAT,EAA4BN,GAAG,CAACO,QAAJ,EAA5B,EAA4CP,GAAG,CAACQ,OAAJ,EAA5C,CADF,KAEG,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAFpB,CADK,CAAP;AAKD,CARM;MAAMX,S;AAUb,OAAO,MAAMY,OAAO,GAAIC,IAAD,IAAU;AAC/B,MAAIC,OAAO,GACTD,IAAI,CAACJ,WAAL,KAAqB,GAArB,IAA4BI,IAAI,CAACH,QAAL,KAAkB,CAA9C,IAAmD,GAAnD,GAAyDG,IAAI,CAACF,OAAL,EAD3D;AAEA,SAAOG,OAAP;AACD,CAJM;MAAMF,O;AAMb,OAAO,MAAMG,OAAO,GAAIC,IAAD,IAAU;AAC/B,MAAIC,OAAO,GACTD,IAAI,CAACE,QAAL,KAAkB,GAAlB,IAAyBF,IAAI,CAACG,UAAL,KAAoB,CAA7C,IAAkD,GAAlD,GAAwDH,IAAI,CAACI,SAAL,EAD1D;AAEA,SAAON,OAAP;AACD,CAJM;MAAMC,O","sourcesContent":["/** @format */\n\nimport React from \"react\";\nimport { Alert } from \"@mui/material\";\n\nexport const ActionAlerts = (status) => {\n  switch (status) {\n    case \"OK\":\n      return <Alert severity=\"success\">Sussues</Alert>;\n    case \"error\":\n      return <Alert severity=\"error\">Error</Alert>;\n    default:\n      return (\n        <Alert severity=\"info\">Something went wronge Please tryagain</Alert>\n      );\n  }\n};\n\nexport const TotalDays = (date1, date2) => {\n  let dt1 = new Date(date1);\n  let dt2 = new Date(date2);\n  return Math.floor(\n    (Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) -\n      Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate())) /\n      (1000 * 60 * 60 * 24),\n  );\n};\n\nexport const GetDate = (date) => {\n  let newDate =\n    date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\n  return newDate;\n};\n\nexport const GetTime = (time) => {\n  let newTime =\n    time.getHours() + \":\" + (time.getMinutes() + 1) + \"-\" + time.getSecond();\n  return newDate;\n};\n"]},"metadata":{},"sourceType":"module"}