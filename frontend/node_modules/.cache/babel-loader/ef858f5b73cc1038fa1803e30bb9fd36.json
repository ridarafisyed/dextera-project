{"ast":null,"code":"var _jsxFileName = \"/home/supersis03/Projects/dextera-project/frontend/src/components/Dashboard/FirmDashboard.jsx\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { useState, Fragment } from 'react'; // import axios from 'axios';\n\nimport { connect } from 'react-redux';\nimport { Box, Button, Paper, Grid, IconButton, Tab } from '@mui/material';\nimport '@mui/lab';\nimport { SideBarBtn } from '../../styles/styles';\nimport { TodayRounded, TrendingUp, KeyboardArrowDown, Task, MoneyOff, MonetizationOn, FileCopy, HourglassBottom, AssignmentTurnedIn, Map, AddCircle, TodayOutlined, PaymentRounded, ArrowBackIos, ArrowForwardIos } from '@mui/icons-material';\nimport Calender from './components/Calender';\nimport Tasks from './components/Tasks';\nimport ProgressBar from './components/ProgressBar';\nimport { useToggle } from '../../context/useToggle';\nimport Cards from './components/Cards';\nimport { cardData } from '../../data/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FirmDashboard = () => {\n  _s();\n\n  const [revToggle, setRevToggle] = useToggle(true);\n  const [empToggle, setEmpToggle] = useToggle(true);\n  const [cardsToggle, setCardsToggle] = useToggle(true);\n  const [sidebarToggle, setSidebarToggle] = useToggle(true);\n  const [calendarToggle, setCalendarToggle] = useToggle(true);\n  const [tasksToggle, setTasksToggle] = useToggle(true);\n  const [progressToggle, setProgressToggle] = useToggle(true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 10,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          minHeight: '84vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          px: 2,\n          children: [cardsToggle ? /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            mt: 2,\n            children: cardData.map((data, i) => /*#__PURE__*/_jsxDEV(Cards, {\n              data: data\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this) : null, calendarToggle ? /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(Calender, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this) : null, tasksToggle ? /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            mt: 3,\n            p: 2,\n            xs: 8,\n            children: /*#__PURE__*/_jsxDEV(Tasks, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(FirmDashboard, \"6JuHH12sq0PU/Cw69Yq7pGw/PBc=\", false, function () {\n  return [useToggle, useToggle, useToggle, useToggle, useToggle, useToggle, useToggle];\n});\n\n_c = FirmDashboard;\n\nconst mapStateToProps = state => ({\n  // isAuthenticated: state.auth.isAuthenticated\n  user: state.auth.user\n});\n\nexport default connect(mapStateToProps)(FirmDashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"FirmDashboard\");","map":{"version":3,"sources":["/home/supersis03/Projects/dextera-project/frontend/src/components/Dashboard/FirmDashboard.jsx"],"names":["React","useState","Fragment","connect","Box","Button","Paper","Grid","IconButton","Tab","SideBarBtn","TodayRounded","TrendingUp","KeyboardArrowDown","Task","MoneyOff","MonetizationOn","FileCopy","HourglassBottom","AssignmentTurnedIn","Map","AddCircle","TodayOutlined","PaymentRounded","ArrowBackIos","ArrowForwardIos","Calender","Tasks","ProgressBar","useToggle","Cards","cardData","FirmDashboard","revToggle","setRevToggle","empToggle","setEmpToggle","cardsToggle","setCardsToggle","sidebarToggle","setSidebarToggle","calendarToggle","setCalendarToggle","tasksToggle","setTasksToggle","progressToggle","setProgressToggle","minHeight","map","data","i","mapStateToProps","state","user","auth"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React, { useState, Fragment } from 'react';\n// import axios from 'axios';\n\nimport { connect } from 'react-redux';\n\nimport { Box, Button, Paper, Grid, IconButton, Tab } from '@mui/material';\nimport {} from '@mui/lab';\nimport { SideBarBtn } from '../../styles/styles';\nimport {\n  TodayRounded,\n  TrendingUp,\n  KeyboardArrowDown,\n  Task,\n  MoneyOff,\n  MonetizationOn,\n  FileCopy,\n  HourglassBottom,\n  AssignmentTurnedIn,\n  Map,\n  AddCircle,\n  TodayOutlined,\n  PaymentRounded,\n  ArrowBackIos,\n  ArrowForwardIos,\n} from '@mui/icons-material';\n\nimport Calender from './components/Calender';\nimport Tasks from './components/Tasks';\nimport ProgressBar from './components/ProgressBar';\n\nimport { useToggle } from '../../context/useToggle';\nimport Cards from './components/Cards';\nimport { cardData } from '../../data/data';\n\nconst FirmDashboard = () => {\n  const [revToggle, setRevToggle] = useToggle(true);\n  const [empToggle, setEmpToggle] = useToggle(true);\n  const [cardsToggle, setCardsToggle] = useToggle(true);\n  const [sidebarToggle, setSidebarToggle] = useToggle(true);\n\n  const [calendarToggle, setCalendarToggle] = useToggle(true);\n  const [tasksToggle, setTasksToggle] = useToggle(true);\n  const [progressToggle, setProgressToggle] = useToggle(true);\n\n  return (\n    <>\n      {/*main dashboard section for display  */}\n      <Grid item xs={10}>\n        <Paper elevation={3} sx={{ minHeight: '84vh' }}>\n          <Grid container px={2}>\n            {cardsToggle ? (\n              <Grid item xs={12} mt={2}>\n                {cardData.map((data, i) => (\n                  <Cards key={i} data={data} />\n                ))}\n              </Grid>\n            ) : null}\n            {calendarToggle ? (\n              <Grid item xs={4}>\n                <Calender />\n              </Grid>\n            ) : null}\n            {tasksToggle ? (\n              <Grid item mt={3} p={2} xs={8}>\n                <Tasks />\n              </Grid>\n            ) : null}\n          </Grid>\n        </Paper>\n      </Grid>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated\n  user: state.auth.user,\n});\nexport default connect(mapStateToProps)(FirmDashboard);\n"]},"metadata":{},"sourceType":"module"}