{"ast":null,"code":"var _jsxFileName = \"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Invoice/InvoicePayment.jsx\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { Fragment, useState } from \"react\";\nimport { Box, FormLabel, FormControlLabel, Radio, RadioGroup, FormControl, Checkbox } from \"@mui/material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InvoicePayment = () => {\n  _s();\n\n  const [dateRange, setDateRange] = React.useState([null, null]);\n  const [invoiceData, setInvoiceData] = useState({\n    payment_type: \"\",\n    date: \"\",\n    retainer: \"\",\n    payment: \"\",\n    date_range: \"\",\n    menu: \"\",\n    bank_account: \"\",\n    payment_method: \"\",\n    invoice_payment: false,\n    payment_plan: false\n  });\n  const {\n    payment_type,\n    date,\n    retainer,\n    payment,\n    date_range,\n    menu,\n    bank_account,\n    payment_method,\n    invoice_payment,\n    payment_plan\n  } = invoiceData;\n\n  const onChange = e => setInvoiceData({ ...invoiceData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          component: \"legend\",\n          children: \"Payment Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          row: true,\n          \"aria-label\": \"payment_type\",\n          defaultValue: \"cash\",\n          name: \"payment_type\",\n          onChange: e => onChange(e),\n          id: \"payment_type\",\n          autoComplete: \"payment_type\",\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"cash\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 53\n            }, this),\n            label: \"Cash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"cc\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 51\n            }, this),\n            label: \"CC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"wire\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 53\n            }, this),\n            label: \"Wire\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"check\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 54\n            }, this),\n            label: \"Check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n        dateAdapter: AdapterDateFns,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            mt: 2,\n            mb: 1\n          },\n          children: \" Date Range \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DateRangePicker, {\n          calendars: 1,\n          value: dateRange,\n          onChange: newValue => {\n            setDateRange(newValue);\n          },\n          renderInput: (startProps, endProps) => /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              size: \"small\",\n              ...startProps\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mx: 2\n              },\n              children: \" to \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              size: \"small\",\n              ...endProps\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InvoicePayment, \"Qct5Lp4n0MOUkiiP8n5yVCXn2LY=\");\n\n_c = InvoicePayment;\nexport default InvoicePayment;\n\nvar _c;\n\n$RefreshReg$(_c, \"InvoicePayment\");","map":{"version":3,"sources":["/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Invoice/InvoicePayment.jsx"],"names":["React","Fragment","useState","Box","FormLabel","FormControlLabel","Radio","RadioGroup","FormControl","Checkbox","SaveIcon","LocalizationProvider","DateRangePicker","AdapterDateFns","useToggle","InvoicePayment","dateRange","setDateRange","invoiceData","setInvoiceData","payment_type","date","retainer","payment","date_range","menu","bank_account","payment_method","invoice_payment","payment_plan","onChange","e","target","name","value","onSubmit","preventDefault","mt","mb","newValue","startProps","endProps","mx"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  Box,\n  FormLabel,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  FormControl,\n  Checkbox,\n} from \"@mui/material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nconst InvoicePayment = () => {\n  const [dateRange, setDateRange] = React.useState([null, null]);\n  const [invoiceData, setInvoiceData] = useState({\n    payment_type: \"\",\n    date: \"\",\n    retainer: \"\",\n    payment: \"\",\n    date_range: \"\",\n    menu: \"\",\n    bank_account: \"\",\n    payment_method: \"\",\n    invoice_payment: false,\n    payment_plan: false,\n  });\n\n  const {\n    payment_type,\n    date,\n    retainer,\n    payment,\n    date_range,\n    menu,\n    bank_account,\n    payment_method,\n    invoice_payment,\n    payment_plan,\n  } = invoiceData;\n  const onChange = (e) =>\n    setInvoiceData({ ...invoiceData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <Fragment>\n      <Box>\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Payment Method</FormLabel>\n          <RadioGroup\n            row\n            aria-label=\"payment_type\"\n            defaultValue=\"cash\"\n            name=\"payment_type\"\n            onChange={(e) => onChange(e)}\n            id=\"payment_type\"\n            autoComplete=\"payment_type\"\n          >\n            <FormControlLabel value=\"cash\" control={<Radio />} label=\"Cash\" />\n            <FormControlLabel value=\"cc\" control={<Radio />} label=\"CC\" />\n            <FormControlLabel value=\"wire\" control={<Radio />} label=\"Wire\" />\n            <FormControlLabel value=\"check\" control={<Radio />} label=\"Check\" />\n          </RadioGroup>\n        </FormControl>\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <Typography sx={{ mt: 2, mb: 1 }}> Date Range </Typography>\n          <DateRangePicker\n            calendars={1}\n            value={dateRange}\n            onChange={(newValue) => {\n              setDateRange(newValue);\n            }}\n            renderInput={(startProps, endProps) => (\n              <Fragment>\n                <TextField size=\"small\" {...startProps} />\n                <Box sx={{ mx: 2 }}> to </Box>\n                <TextField size=\"small\" {...endProps} />\n              </Fragment>\n            )}\n          />\n        </LocalizationProvider>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default InvoicePayment;\n"]},"metadata":{},"sourceType":"module"}