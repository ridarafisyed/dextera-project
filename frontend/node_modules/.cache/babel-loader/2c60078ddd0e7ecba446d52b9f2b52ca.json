{"ast":null,"code":"var _jsxFileName = \"/home/supersis03/Projects/dextera-project/frontend/src/components/Dashboard/components/Calander.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CalendarComponent } from '@syncfusion/ej2-react-calendars';\nimport Date from '';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Calander = () => {\n  _s();\n\n  const current = new Date();\n  const dateValue = `${current.getDate()}/${current.getMonth() + 1}/${current.getFullYear()}`;\n  const [date, setDate] = useState(dateValue);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CalendarComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Calander, \"UT5mMSzgiv3WWKxzjrGnqMUMlAA=\");\n\n_c = Calander;\nexport default Calander;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calander\");","map":{"version":3,"sources":["/home/supersis03/Projects/dextera-project/frontend/src/components/Dashboard/components/Calander.jsx"],"names":["React","useState","CalendarComponent","Date","Calander","current","dateValue","getDate","getMonth","getFullYear","date","setDate"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AACA,OAAOC,IAAP,MAAiB,EAAjB;;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAMC,OAAO,GAAG,IAAIF,IAAJ,EAAhB;AACA,QAAMG,SAAS,GAAI,GAAED,OAAO,CAACE,OAAR,EAAkB,IAAGF,OAAO,CAACG,QAAR,KAAmB,CAAE,IAAGH,OAAO,CAACI,WAAR,EAAsB,EAAxF;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAACK,SAAD,CAAhC;AAGA,sBACI;AAAA,2BACI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAOH,CAbD;;GAAMF,Q;;KAAAA,Q;AAeN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport { CalendarComponent } from '@syncfusion/ej2-react-calendars';  \nimport Date from '';\n \n\nconst Calander = () => {\n    const current = new Date();\n    const dateValue = `${current.getDate()}/${current.getMonth()+1}/${current.getFullYear()}`;\n    const [date, setDate] = useState(dateValue)\n\n\n    return (\n        <>\n            <CalendarComponent \n            \n            ></CalendarComponent>\n        </>\n    )\n}\n\nexport default Calander\n"]},"metadata":{},"sourceType":"module"}