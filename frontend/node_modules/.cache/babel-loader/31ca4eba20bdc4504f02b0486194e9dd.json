{"ast":null,"code":"var _jsxFileName = \"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Legder/Time.jsx\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { Fragment, useState } from \"react\";\nimport { TextField, Box, Grid, Switch, Button, Typography, RadioGroup, FormLabel, FormControl, FormControlLabel, Radio } from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { ActionAlerts, GetTime, GetDate } from \"../../utils/ActionAlerts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Time = () => {\n  _s();\n\n  const [pickTime, setPickTime] = useState(new Date(\"2021-12-01T21:00:00\"));\n  const [pickDate, setPickDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [timeToggle, setTimeToggle] = useToggle(false);\n  const [billable, setBillable] = useToggle(false); // const [bill, setBill] = useToggle(false);\n\n  const [timeData, setTimeData] = useState({\n    contact: 0,\n    matter_name: 0,\n    category: \"\",\n    sub_category: \"\",\n    hard: false,\n    soft: false,\n    unit: 0,\n    qty: 0,\n    rate: 0,\n    file: \"\",\n    detail: \"\",\n    bill_by: 0,\n    note: \"\"\n  });\n  const {\n    contact,\n    matter_name,\n    category,\n    sub_category,\n    hard,\n    soft,\n    unit,\n    qty,\n    rate,\n    file,\n    detail,\n    bill_by,\n    note\n  } = timeData;\n\n  const onChange = e => setTimeData({ ...timeData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    let time = GetTime(pickTime);\n    let date = GetDate(pickDate);\n    const body = JSON.stringify({\n      contact,\n      matter_name,\n      category,\n      sub_category,\n      hard,\n      soft,\n      unit,\n      qty,\n      rate,\n      time,\n      date,\n      detail,\n      bill_by,\n      billable,\n      note\n    });\n    axios.post(`${process.env.REACT_APP_API_URL}/api/add-time/`, body, CONFIG).then(res => {\n      /*#__PURE__*/\n      _jsxDEV(ActionAlerts, {\n        value: {\n          status: res.statusText,\n          message: \"Success\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this);\n    }).catch(err => {\n      /*#__PURE__*/\n      _jsxDEV(ActionAlerts, {\n        value: {\n          status: err.statusText,\n          message: \"Failed\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this);\n    });\n    console.log(body);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      Validate: true,\n      sx: {\n        \"& .MuiTextField-root\": {\n          m: 1,\n          width: \"15rem\"\n        }\n      },\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h3\",\n        variant: \"h4\",\n        children: \"Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        mt: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            p: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                size: \"large\",\n                label: \"Time\",\n                labelPlacement: \"start\",\n                control: /*#__PURE__*/_jsxDEV(Switch, {\n                  size: \"large\",\n                  checked: timeToggle,\n                  onChange: e => setTimeToggle(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this), timeToggle ? null : /*#__PURE__*/_jsxDEV(Box, {\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  component: \"fieldset\",\n                  children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                    component: \"legend\",\n                    children: \"Expense\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                    row: true,\n                    \"aria-label\": \"expense\",\n                    defaultValue: \"\",\n                    name: \"expense\",\n                    id: \"expense\",\n                    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                      value: \"hard\",\n                      control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 141,\n                        columnNumber: 36\n                      }, this),\n                      label: \"Hard\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 139,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                      value: \"soft\",\n                      control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 146,\n                        columnNumber: 36\n                      }, this),\n                      label: \"Soft\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                size: \"small\",\n                margin: \"normal\",\n                variant: \"outlined\",\n                name: \"matter\",\n                label: \"matter\",\n                type: \"number\",\n                onChange: e => onChange(e),\n                id: \"matter\",\n                autoComplete: \"matter\",\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                size: \"small\",\n                margin: \"normal\",\n                variant: \"outlined\",\n                name: \"contact\",\n                label: \"contact\",\n                type: \"number\",\n                onChange: e => onChange(e),\n                id: \"contact\",\n                autoComplete: \"contact\",\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            size: \"small\",\n            margin: \"normal\",\n            variant: \"outlined\",\n            name: \"category\",\n            label: \"category\",\n            type: \"text\",\n            onChange: e => onChange(e),\n            id: \"category\",\n            autoComplete: \"category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            size: \"small\",\n            margin: \"normal\",\n            variant: \"outlined\",\n            name: \"sub_category\",\n            label: \"sub_category\",\n            type: \"text\",\n            onChange: e => onChange(e),\n            id: \"sub_category\",\n            autoComplete: \"sub_category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), timeToggle ? /*#__PURE__*/_jsxDEV(TextField, {\n            size: \"small\",\n            margin: \"normal\",\n            variant: \"outlined\",\n            name: \"rate\",\n            label: \"rate\",\n            type: \"number\",\n            onChange: e => onChange(e),\n            id: \"rate\",\n            autoComplete: \"rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              size: \"small\",\n              margin: \"normal\",\n              variant: \"outlined\",\n              name: \"unit\",\n              label: \"unit\",\n              type: \"number\",\n              onChange: e => onChange(e),\n              id: \"unit\",\n              autoComplete: \"unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              size: \"small\",\n              margin: \"normal\",\n              variant: \"outlined\",\n              name: \"qty\",\n              label: \"Qty\",\n              type: \"number\",\n              onChange: e => onChange(e),\n              id: \"qty\",\n              autoComplete: \"qty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              m: 1,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                component: \"lable\",\n                children: \" Receipt(s) \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                disabled: true,\n                children: \"+ Attach File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n            dateAdapter: AdapterDateFns,\n            children: /*#__PURE__*/_jsxDEV(TimePicker, {\n              label: \"Pick Time\",\n              name: \"picktime\",\n              id: \"picktime\",\n              value: pickTime,\n              onChange: e => {\n                setPickTime(e);\n              },\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                size: \"small\",\n                ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n            dateAdapter: AdapterDateFns,\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              inputFormat: \"yyyy-MM-dd\",\n              mask: \"____-__-__\",\n              label: \"Pick Date\",\n              value: pickDate,\n              name: \"pickdate\",\n              id: \"pickdate\",\n              onChange: e => setPickDate(e),\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                size: \"small\",\n                ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            size: \"small\",\n            margin: \"normal\",\n            variant: \"outlined\",\n            name: \"detail\",\n            label: \"detail\",\n            type: \"text\",\n            onChange: e => onChange(e),\n            id: \"detail\",\n            autoComplete: \"detail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            size: \"small\",\n            margin: \"normal\",\n            variant: \"outlined\",\n            name: \"bill_by\",\n            label: \"bill_by\",\n            type: \"number\",\n            onChange: e => onChange(e),\n            id: \"bill_by\",\n            autoComplete: \"bill_by\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            size: \"large\",\n            label: \"Billable\",\n            labelPlacement: \"start\",\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              size: \"large\",\n              checked: billable,\n              onChange: () => setBillable(billable)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            size: \"small\",\n            margin: \"normal\",\n            variant: \"outlined\",\n            name: \"note\",\n            rows: 4,\n            label: \"note\",\n            type: \"text\",\n            onChange: e => onChange(e),\n            id: \"note\",\n            autoComplete: \"note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        type: \"submit\",\n        sx: {\n          float: \"right\"\n        },\n        endIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 20\n        }, this),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Time, \"j/C29tIg06jGa2mniTu1ZKwWtqA=\", false, function () {\n  return [useToggle, useToggle];\n});\n\n_c = Time;\nexport default Time;\n\nvar _c;\n\n$RefreshReg$(_c, \"Time\");","map":{"version":3,"sources":["/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Legder/Time.jsx"],"names":["React","Fragment","useState","TextField","Box","Grid","Switch","Button","Typography","RadioGroup","FormLabel","FormControl","FormControlLabel","Radio","axios","CONFIG","AdapterDateFns","SaveIcon","LocalizationProvider","TimePicker","DatePicker","useToggle","ActionAlerts","GetTime","GetDate","Time","pickTime","setPickTime","Date","pickDate","setPickDate","timeToggle","setTimeToggle","billable","setBillable","timeData","setTimeData","contact","matter_name","category","sub_category","hard","soft","unit","qty","rate","file","detail","bill_by","note","onChange","e","target","name","value","onSubmit","preventDefault","time","date","body","JSON","stringify","post","process","env","REACT_APP_API_URL","then","res","status","statusText","message","catch","err","console","log","m","width","params","float"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SACEC,SADF,EAEEC,GAFF,EAGEC,IAHF,EAIEC,MAJF,EAKEC,MALF,EAMEC,UANF,EAOEC,UAPF,EAQEC,SARF,EASEC,WATF,EAUEC,gBAVF,EAWEC,KAXF,QAYO,eAZP;AAaA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAASC,oBAAT,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,UAA7D;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,YAAT,EAAuBC,OAAvB,EAAgCC,OAAhC,QAA+C,0BAA/C;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BzB,QAAQ,CAAC,IAAI0B,IAAJ,CAAS,qBAAT,CAAD,CAAxC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B5B,QAAQ,CAAC,IAAI0B,IAAJ,CAAS,qBAAT,CAAD,CAAxC;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BX,SAAS,CAAC,KAAD,CAA7C;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,SAAS,CAAC,KAAD,CAAzC,CAJiB,CAMjB;;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0BlC,QAAQ,CAAC;AACvCmC,IAAAA,OAAO,EAAE,CAD8B;AAEvCC,IAAAA,WAAW,EAAE,CAF0B;AAGvCC,IAAAA,QAAQ,EAAE,EAH6B;AAIvCC,IAAAA,YAAY,EAAE,EAJyB;AAKvCC,IAAAA,IAAI,EAAE,KALiC;AAMvCC,IAAAA,IAAI,EAAE,KANiC;AAOvCC,IAAAA,IAAI,EAAE,CAPiC;AAQvCC,IAAAA,GAAG,EAAE,CARkC;AASvCC,IAAAA,IAAI,EAAE,CATiC;AAUvCC,IAAAA,IAAI,EAAE,EAViC;AAWvCC,IAAAA,MAAM,EAAE,EAX+B;AAYvCC,IAAAA,OAAO,EAAE,CAZ8B;AAavCC,IAAAA,IAAI,EAAE;AAbiC,GAAD,CAAxC;AAgBA,QAAM;AACJZ,IAAAA,OADI;AAEJC,IAAAA,WAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA,IALI;AAMJC,IAAAA,IANI;AAOJC,IAAAA,IAPI;AAQJC,IAAAA,GARI;AASJC,IAAAA,IATI;AAUJC,IAAAA,IAVI;AAWJC,IAAAA,MAXI;AAYJC,IAAAA,OAZI;AAcJC,IAAAA;AAdI,MAeFd,QAfJ;;AAgBA,QAAMe,QAAQ,GAAIC,CAAD,IACff,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,KAACgB,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAAzC,GAAD,CADb;;AAGA,QAAMC,QAAQ,GAAIJ,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACK,cAAF;AACA,QAAIC,IAAI,GAAGlC,OAAO,CAACG,QAAD,CAAlB;AACA,QAAIgC,IAAI,GAAGlC,OAAO,CAACK,QAAD,CAAlB;AAEA,UAAM8B,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC1BxB,MAAAA,OAD0B;AAE1BC,MAAAA,WAF0B;AAG1BC,MAAAA,QAH0B;AAI1BC,MAAAA,YAJ0B;AAK1BC,MAAAA,IAL0B;AAM1BC,MAAAA,IAN0B;AAO1BC,MAAAA,IAP0B;AAQ1BC,MAAAA,GAR0B;AAS1BC,MAAAA,IAT0B;AAU1BY,MAAAA,IAV0B;AAW1BC,MAAAA,IAX0B;AAY1BX,MAAAA,MAZ0B;AAa1BC,MAAAA,OAb0B;AAc1Bf,MAAAA,QAd0B;AAe1BgB,MAAAA;AAf0B,KAAf,CAAb;AAiBAnC,IAAAA,KAAK,CACFgD,IADH,CACS,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,gBADzC,EAC0DN,IAD1D,EACgE5C,MADhE,EAEGmD,IAFH,CAESC,GAAD,IAAS;AACb;AAAA,cAAC,YAAD;AAAc,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAED,GAAG,CAACE,UAAd;AAA0BC,UAAAA,OAAO,EAAE;AAAnC;AAArB;AAAA;AAAA;AAAA;AAAA;AACD,KAJH,EAKGC,KALH,CAKUC,GAAD,IAAS;AACd;AAAA,cAAC,YAAD;AAAc,QAAA,KAAK,EAAE;AAAEJ,UAAAA,MAAM,EAAEI,GAAG,CAACH,UAAd;AAA0BC,UAAAA,OAAO,EAAE;AAAnC;AAArB;AAAA;AAAA;AAAA;AAAA;AACD,KAPH;AAQAG,IAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ;AACD,GA/BD;;AAgCA,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,GAAD;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,EAAE,EAAE;AACF,gCAAwB;AAAEgB,UAAAA,CAAC,EAAE,CAAL;AAAQC,UAAAA,KAAK,EAAE;AAAf;AADtB,OAHN;AAME,MAAA,QAAQ,EAAGzB,CAAD,IAAOI,QAAQ,CAACJ,CAAD,CAN3B;AAAA,8BAQE,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC,IAAtB;AAA2B,QAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAWE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAA4B,QAAA,EAAE,EAAE,CAAhC;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,CAAC,EAAE,CAAnB;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,sCACE,QAAC,gBAAD;AACE,gBAAA,IAAI,EAAC,OADP;AAEE,gBAAA,KAAK,EAAC,MAFR;AAGE,gBAAA,cAAc,EAAC,OAHjB;AAIE,gBAAA,OAAO,eACL,QAAC,MAAD;AACE,kBAAA,IAAI,EAAC,OADP;AAEE,kBAAA,OAAO,EAAEpB,UAFX;AAGE,kBAAA,QAAQ,EAAGoB,CAAD,IAAOnB,aAAa,CAACmB,CAAD;AAHhC;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,sBADF,EAaGpB,UAAU,GAAG,IAAH,gBACT,QAAC,GAAD;AAAA,uCACE,QAAC,WAAD;AAAa,kBAAA,SAAS,EAAC,UAAvB;AAAA,0CACE,QAAC,SAAD;AAAW,oBAAA,SAAS,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,UAAD;AACE,oBAAA,GAAG,MADL;AAEE,kCAAW,SAFb;AAGE,oBAAA,YAAY,EAAC,EAHf;AAIE,oBAAA,IAAI,EAAC,SAJP;AAKE,oBAAA,EAAE,EAAC,SALL;AAAA,4CAOE,QAAC,gBAAD;AACE,sBAAA,KAAK,EAAC,MADR;AAEE,sBAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,8BAFX;AAGE,sBAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,4BAPF,eAYE,QAAC,gBAAD;AACE,sBAAA,KAAK,EAAC,MADR;AAEE,sBAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,8BAFX;AAGE,sBAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,4BAZF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAwCE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,sCACE,QAAC,SAAD;AACE,gBAAA,IAAI,EAAC,OADP;AAEE,gBAAA,MAAM,EAAC,QAFT;AAGE,gBAAA,OAAO,EAAC,UAHV;AAIE,gBAAA,IAAI,EAAC,QAJP;AAKE,gBAAA,KAAK,EAAC,QALR;AAME,gBAAA,IAAI,EAAC,QANP;AAOE,gBAAA,QAAQ,EAAGoB,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAP3B;AAQE,gBAAA,EAAE,EAAC,QARL;AASE,gBAAA,YAAY,EAAC,QATf;AAUE,gBAAA,QAAQ;AAVV;AAAA;AAAA;AAAA;AAAA,sBADF,eAaE,QAAC,SAAD;AACE,gBAAA,IAAI,EAAC,OADP;AAEE,gBAAA,MAAM,EAAC,QAFT;AAGE,gBAAA,OAAO,EAAC,UAHV;AAIE,gBAAA,IAAI,EAAC,SAJP;AAKE,gBAAA,KAAK,EAAC,SALR;AAME,gBAAA,IAAI,EAAC,QANP;AAOE,gBAAA,QAAQ,EAAGA,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAP3B;AAQE,gBAAA,EAAE,EAAC,SARL;AASE,gBAAA,YAAY,EAAC,SATf;AAUE,gBAAA,QAAQ;AAVV;AAAA;AAAA;AAAA;AAAA,sBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAxCF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAqEE,QAAC,SAAD;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,MAAM,EAAC,QAFT;AAGE,YAAA,OAAO,EAAC,UAHV;AAIE,YAAA,IAAI,EAAC,UAJP;AAKE,YAAA,KAAK,EAAC,UALR;AAME,YAAA,IAAI,EAAC,MANP;AAOE,YAAA,QAAQ,EAAGA,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAP3B;AAQE,YAAA,EAAE,EAAC,UARL;AASE,YAAA,YAAY,EAAC;AATf;AAAA;AAAA;AAAA;AAAA,kBArEF,eAgFE,QAAC,SAAD;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,MAAM,EAAC,QAFT;AAGE,YAAA,OAAO,EAAC,UAHV;AAIE,YAAA,IAAI,EAAC,cAJP;AAKE,YAAA,KAAK,EAAC,cALR;AAME,YAAA,IAAI,EAAC,MANP;AAOE,YAAA,QAAQ,EAAGA,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAP3B;AAQE,YAAA,EAAE,EAAC,cARL;AASE,YAAA,YAAY,EAAC;AATf;AAAA;AAAA;AAAA;AAAA,kBAhFF,EA2FGpB,UAAU,gBACT,QAAC,SAAD;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,MAAM,EAAC,QAFT;AAGE,YAAA,OAAO,EAAC,UAHV;AAIE,YAAA,IAAI,EAAC,MAJP;AAKE,YAAA,KAAK,EAAC,MALR;AAME,YAAA,IAAI,EAAC,QANP;AAOE,YAAA,QAAQ,EAAGoB,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAP3B;AAQE,YAAA,EAAE,EAAC,MARL;AASE,YAAA,YAAY,EAAC;AATf;AAAA;AAAA;AAAA;AAAA,kBADS,gBAaT,QAAC,QAAD;AAAA,oCACE,QAAC,SAAD;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,MAAM,EAAC,QAFT;AAGE,cAAA,OAAO,EAAC,UAHV;AAIE,cAAA,IAAI,EAAC,MAJP;AAKE,cAAA,KAAK,EAAC,MALR;AAME,cAAA,IAAI,EAAC,QANP;AAOE,cAAA,QAAQ,EAAGA,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAP3B;AAQE,cAAA,EAAE,EAAC,MARL;AASE,cAAA,YAAY,EAAC;AATf;AAAA;AAAA;AAAA;AAAA,oBADF,eAYE,QAAC,SAAD;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,MAAM,EAAC,QAFT;AAGE,cAAA,OAAO,EAAC,UAHV;AAIE,cAAA,IAAI,EAAC,KAJP;AAKE,cAAA,KAAK,EAAC,KALR;AAME,cAAA,IAAI,EAAC,QANP;AAOE,cAAA,QAAQ,EAAGA,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAP3B;AAQE,cAAA,EAAE,EAAC,KARL;AASE,cAAA,YAAY,EAAC;AATf;AAAA;AAAA;AAAA;AAAA,oBAZF,eAuBE,QAAC,GAAD;AAAK,cAAA,CAAC,EAAE,CAAR;AAAA,sCACE,QAAC,UAAD;AAAY,gBAAA,SAAS,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAGE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,WAAhB;AAA4B,gBAAA,QAAQ,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxGJ,eAyIE,QAAC,oBAAD;AAAsB,YAAA,WAAW,EAAEnC,cAAnC;AAAA,mCACE,QAAC,UAAD;AACE,cAAA,KAAK,EAAC,WADR;AAEE,cAAA,IAAI,EAAC,UAFP;AAGE,cAAA,EAAE,EAAC,UAHL;AAIE,cAAA,KAAK,EAAEU,QAJT;AAKE,cAAA,QAAQ,EAAGyB,CAAD,IAAO;AACfxB,gBAAAA,WAAW,CAACwB,CAAD,CAAX;AACD,eAPH;AAQE,cAAA,WAAW,EAAG0B,MAAD,iBAAY,QAAC,SAAD;AAAW,gBAAA,IAAI,EAAC,OAAhB;AAAA,mBAA4BA;AAA5B;AAAA;AAAA;AAAA;AAAA;AAR3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAzIF,eAqJE,QAAC,oBAAD;AAAsB,YAAA,WAAW,EAAE7D,cAAnC;AAAA,mCACE,QAAC,UAAD;AACE,cAAA,WAAW,EAAC,YADd;AAEE,cAAA,IAAI,EAAC,YAFP;AAGE,cAAA,KAAK,EAAC,WAHR;AAIE,cAAA,KAAK,EAAEa,QAJT;AAKE,cAAA,IAAI,EAAC,UALP;AAME,cAAA,EAAE,EAAC,UANL;AAOE,cAAA,QAAQ,EAAGsB,CAAD,IAAOrB,WAAW,CAACqB,CAAD,CAP9B;AAQE,cAAA,WAAW,EAAG0B,MAAD,iBAAY,QAAC,SAAD;AAAW,gBAAA,IAAI,EAAC,OAAhB;AAAA,mBAA4BA;AAA5B;AAAA;AAAA;AAAA;AAAA;AAR3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBArJF,eAkKE,QAAC,SAAD;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,MAAM,EAAC,QAFT;AAGE,YAAA,OAAO,EAAC,UAHV;AAIE,YAAA,IAAI,EAAC,QAJP;AAKE,YAAA,KAAK,EAAC,QALR;AAME,YAAA,IAAI,EAAC,MANP;AAOE,YAAA,QAAQ,EAAG1B,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAP3B;AAQE,YAAA,EAAE,EAAC,QARL;AASE,YAAA,YAAY,EAAC;AATf;AAAA;AAAA;AAAA;AAAA,kBAlKF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eA+KE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,kCACE,QAAC,SAAD;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,MAAM,EAAC,QAFT;AAGE,YAAA,OAAO,EAAC,UAHV;AAIE,YAAA,IAAI,EAAC,SAJP;AAKE,YAAA,KAAK,EAAC,SALR;AAME,YAAA,IAAI,EAAC,QANP;AAOE,YAAA,QAAQ,EAAGA,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAP3B;AAQE,YAAA,EAAE,EAAC,SARL;AASE,YAAA,YAAY,EAAC;AATf;AAAA;AAAA;AAAA;AAAA,kBADF,eAYE,QAAC,gBAAD;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,KAAK,EAAC,UAFR;AAGE,YAAA,cAAc,EAAC,OAHjB;AAIE,YAAA,OAAO,eACL,QAAC,MAAD;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,OAAO,EAAElB,QAFX;AAGE,cAAA,QAAQ,EAAE,MAAMC,WAAW,CAACD,QAAD;AAH7B;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,kBAZF,eAwBE;AAAA;AAAA;AAAA;AAAA,kBAxBF,eAyBE,QAAC,SAAD;AACE,YAAA,SAAS,MADX;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,MAAM,EAAC,QAHT;AAIE,YAAA,OAAO,EAAC,UAJV;AAKE,YAAA,IAAI,EAAC,MALP;AAME,YAAA,IAAI,EAAE,CANR;AAOE,YAAA,KAAK,EAAC,MAPR;AAQE,YAAA,IAAI,EAAC,MARP;AASE,YAAA,QAAQ,EAAGkB,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAT3B;AAUE,YAAA,EAAE,EAAC,MAVL;AAWE,YAAA,YAAY,EAAC;AAXf;AAAA;AAAA;AAAA;AAAA,kBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/KF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAkOE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,EAAE,EAAE;AAAE2B,UAAAA,KAAK,EAAE;AAAT,SAHN;AAIE,QAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlOF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+OD,CAzTD;;GAAMrD,I;UAGgCJ,S,EACJA,S;;;KAJ5BI,I;AA2TN,eAAeA,IAAf","sourcesContent":["/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  RadioGroup,\n  FormLabel,\n  FormControl,\n  FormControlLabel,\n  Radio,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { ActionAlerts, GetTime, GetDate } from \"../../utils/ActionAlerts\";\n\nconst Time = () => {\n  const [pickTime, setPickTime] = useState(new Date(\"2021-12-01T21:00:00\"));\n  const [pickDate, setPickDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [timeToggle, setTimeToggle] = useToggle(false);\n  const [billable, setBillable] = useToggle(false);\n\n  // const [bill, setBill] = useToggle(false);\n  const [timeData, setTimeData] = useState({\n    contact: 0,\n    matter_name: 0,\n    category: \"\",\n    sub_category: \"\",\n    hard: false,\n    soft: false,\n    unit: 0,\n    qty: 0,\n    rate: 0,\n    file: \"\",\n    detail: \"\",\n    bill_by: 0,\n    note: \"\",\n  });\n\n  const {\n    contact,\n    matter_name,\n    category,\n    sub_category,\n    hard,\n    soft,\n    unit,\n    qty,\n    rate,\n    file,\n    detail,\n    bill_by,\n\n    note,\n  } = timeData;\n  const onChange = (e) =>\n    setTimeData({ ...timeData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let time = GetTime(pickTime);\n    let date = GetDate(pickDate);\n\n    const body = JSON.stringify({\n      contact,\n      matter_name,\n      category,\n      sub_category,\n      hard,\n      soft,\n      unit,\n      qty,\n      rate,\n      time,\n      date,\n      detail,\n      bill_by,\n      billable,\n      note,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/add-time/`, body, CONFIG)\n      .then((res) => {\n        <ActionAlerts value={{ status: res.statusText, message: \"Success\" }} />;\n      })\n      .catch((err) => {\n        <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />;\n      });\n    console.log(body);\n  };\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Time\n        </Typography>\n        <Grid container spacing={2} mt={2}>\n          <Grid item xs={12}>\n            <Grid container p={3}>\n              <Grid item xs={6}>\n                <FormControlLabel\n                  size=\"large\"\n                  label=\"Time\"\n                  labelPlacement=\"start\"\n                  control={\n                    <Switch\n                      size=\"large\"\n                      checked={timeToggle}\n                      onChange={(e) => setTimeToggle(e)}\n                    />\n                  }\n                />\n                {timeToggle ? null : (\n                  <Box>\n                    <FormControl component=\"fieldset\">\n                      <FormLabel component=\"legend\">Expense</FormLabel>\n                      <RadioGroup\n                        row\n                        aria-label=\"expense\"\n                        defaultValue=\"\"\n                        name=\"expense\"\n                        id=\"expense\"\n                      >\n                        <FormControlLabel\n                          value=\"hard\"\n                          control={<Radio />}\n                          label=\"Hard\"\n                        />\n                        <FormControlLabel\n                          value=\"soft\"\n                          control={<Radio />}\n                          label=\"Soft\"\n                        />\n                      </RadioGroup>\n                    </FormControl>\n                  </Box>\n                )}\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"matter\"\n                  label=\"matter\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"matter\"\n                  autoComplete=\"matter\"\n                  disabled\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"contact\"\n                  label=\"contact\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"contact\"\n                  autoComplete=\"contact\"\n                  disabled\n                />\n              </Grid>\n            </Grid>\n\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"category\"\n              label=\"category\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"category\"\n              autoComplete=\"category\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"sub_category\"\n              label=\"sub_category\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"sub_category\"\n              autoComplete=\"sub_category\"\n            />\n            {timeToggle ? (\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"rate\"\n                label=\"rate\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"rate\"\n                autoComplete=\"rate\"\n              />\n            ) : (\n              <Fragment>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"unit\"\n                  label=\"unit\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"unit\"\n                  autoComplete=\"unit\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"qty\"\n                  label=\"Qty\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"qty\"\n                  autoComplete=\"qty\"\n                />\n                <Box m={1}>\n                  <Typography component=\"lable\"> Receipt(s) </Typography>\n\n                  <Button variant=\"contained\" disabled>\n                    + Attach File\n                  </Button>\n                </Box>\n              </Fragment>\n            )}\n\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <TimePicker\n                label=\"Pick Time\"\n                name=\"picktime\"\n                id=\"picktime\"\n                value={pickTime}\n                onChange={(e) => {\n                  setPickTime(e);\n                }}\n                renderInput={(params) => <TextField size=\"small\" {...params} />}\n              />\n            </LocalizationProvider>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask=\"____-__-__\"\n                label=\"Pick Date\"\n                value={pickDate}\n                name=\"pickdate\"\n                id=\"pickdate\"\n                onChange={(e) => setPickDate(e)}\n                renderInput={(params) => <TextField size=\"small\" {...params} />}\n              />\n            </LocalizationProvider>\n\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"detail\"\n              label=\"detail\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"detail\"\n              autoComplete=\"detail\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bill_by\"\n              label=\"bill_by\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"bill_by\"\n              autoComplete=\"bill_by\"\n            />\n            <FormControlLabel\n              size=\"large\"\n              label=\"Billable\"\n              labelPlacement=\"start\"\n              control={\n                <Switch\n                  size=\"large\"\n                  checked={billable}\n                  onChange={() => setBillable(billable)}\n                />\n              }\n            />\n            <br />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"note\"\n              rows={4}\n              label=\"note\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"note\"\n              autoComplete=\"note\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          sx={{ float: \"right\" }}\n          endIcon={<SaveIcon />}\n        >\n          Save\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Time;\n"]},"metadata":{},"sourceType":"module"}