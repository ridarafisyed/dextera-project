{"ast":null,"code":"var _jsxFileName = \"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Category/Category.jsx\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Button, Box, List, ListItem, ListItemText, Typography, Dialog, DialogActions, DialogContent, DialogTitle, DialogContentText, TextField } from \"@mui/material\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport ActionAlerts from \"../../utils/ActionAlerts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONFIG = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\"\n  }\n};\n\nconst catHandler = id => {\n  console.log(id);\n};\n\nconst Category = () => {\n  _s();\n\n  const [category, setCategory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\"\n  });\n  const {\n    name\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios.get(`${process.env.REACT_APP_API_URL}/api/category/`, CONFIG).then(res => {\n      console.log(res.data);\n      setLoading(false);\n      setStatus(res.statusText);\n      setCategory(res.data);\n    }).catch(err => {\n      console.log(err);\n      setLoading(false);\n      setError(err.message);\n    });\n  };\n\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  const handleDelete = id => {\n    axios.delete(`${process.env.REACT_APP_API_URL}/api/category/${id}/`, CONFIG).then(res => {\n      FetchData();\n      return /*#__PURE__*/_jsxDEV(ActionAlerts, {\n        value: {\n          status: res.statusText,\n          message: \"Success\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this);\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const body = JSON.stringify({\n      name\n    });\n    axios.post(`${process.env.REACT_APP_API_URL}/api/category/`, body, CONFIG).then(res => {\n      FetchData();\n      return /*#__PURE__*/_jsxDEV(ActionAlerts, {\n        value: {\n          status: res.statusText,\n          message: \"Success\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this);\n    }).catch(err => {\n      FetchData();\n      return /*#__PURE__*/_jsxDEV(ActionAlerts, {\n        value: {\n          status: err.statusText,\n          message: \"Success\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleClickOpen,\n      fullWidth: true,\n      sx: {\n        borderRadius: \"0.5rem\"\n      },\n      children: \"+ New category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      component: \"form\",\n      Validate: true,\n      onSubmit: e => handleSubmit(e),\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \"Add New Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          fullWidth: true,\n          size: \"small\",\n          margin: \"normal\",\n          variant: \"outlined\",\n          name: \"name\",\n          label: \"Category Name\",\n          type: \"text\",\n          value: name,\n          onChange: e => onChange(e),\n          id: \"name\",\n          autoComplete: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          autoFocus: true,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), !loading ? category.map(data => /*#__PURE__*/_jsxDEV(Box, {\n      mt: 1,\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          disablePadding: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            children: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            value: data.id,\n            onClick: () => handleDelete(data.id),\n            sx: {\n              borderRadius: \"0.5rem\",\n              float: \"right\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Category, \"/fXSHUACiZyvDWbVaN8yFGN69U8=\");\n\n_c = Category;\nexport default Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Category/Category.jsx"],"names":["React","Fragment","useState","useEffect","axios","Button","Box","List","ListItem","ListItemText","Typography","Dialog","DialogActions","DialogContent","DialogTitle","DialogContentText","TextField","ClearIcon","ActionAlerts","CONFIG","headers","Accept","catHandler","id","console","log","Category","category","setCategory","loading","setLoading","error","setError","status","setStatus","formData","setFormData","name","onChange","e","target","value","open","setOpen","handleClickOpen","handleClose","FetchData","get","process","env","REACT_APP_API_URL","then","res","data","statusText","catch","err","message","handleDelete","delete","handleSubmit","preventDefault","body","JSON","stringify","post","borderRadius","map","float"],"mappings":"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","sourcesContent":["/** @format */\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport ActionAlerts from \"../../utils/ActionAlerts\";\n\nconst CONFIG = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n};\n\nconst catHandler = (id) => {\n  console.log(id);\n};\n\nconst Category = () => {\n  const [category, setCategory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/category/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setCategory(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/category/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/category/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New category\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Add New Category\"}</DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Category Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? (\n        category.map((data) => (\n          <Box mt={1}>\n            <List>\n              <ListItem disablePadding>\n                <ListItemText>{data.name}</ListItemText>\n                <Button\n                  variant=\"contained\"\n                  value={data.id}\n                  onClick={() => handleDelete(data.id)}\n                  sx={{\n                    borderRadius: \"0.5rem\",\n                    float: \"right\",\n                  }}\n                >\n                  <ClearIcon />\n                </Button>\n              </ListItem>\n            </List>\n          </Box>\n        ))\n      ) : (\n        <Typography>Loading ...</Typography>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Category;\n"]},"metadata":{},"sourceType":"module"}