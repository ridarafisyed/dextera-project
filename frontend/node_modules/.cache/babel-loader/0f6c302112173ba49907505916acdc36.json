{"ast":null,"code":"var _jsxFileName = \"/home/supersis03/Projects/dextera-project/frontend/src/components/Dashboard/index.jsx\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { Button, Box, Grid, Paper } from '@mui/material';\nimport { TodayRounded, TrendingUp, KeyboardArrowDown, Task, MoneyOff, MonetizationOn, FileCopy, HourglassBottom, AssignmentTurnedIn, Map, AddCircle, TodayOutlined } from '@mui/icons-material';\nimport { useToggle } from '../../context/useToggle';\nimport { SideBarBtn } from '../../styles/styles'; // import { UserContext } from '../../context/User';\n\nimport { connect } from 'react-redux';\nimport AdminDashboard from './AdminDashboard';\nimport ClientDashboard from './ClientDashboard';\nimport LawyerDashboard from './LawyerDashboard';\nimport FirmDashboard from './FirmDashboard';\nimport Profile from '../Profile/Profile';\nimport Sidebar from '../Sidebar/Sidebar'; // import DashboardNavbar from '../Navbars/DashboardNavbar';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = ({\n  user\n}) => {\n  _s();\n\n  const [revToggle, setRevToggle] = useToggle(true);\n  const [empToggle, setEmpToggle] = useToggle(true);\n  const [dashboardToggle, setDashbaordToggle] = useToggle(false);\n  const [profileToggle, setProfileToggle] = useToggle(false); // checker type of user\n\n  const [localuser, setLocalUser] = useState({\n    username: 'Guest',\n    is_firm: true,\n    is_lawyer: false,\n    is_client: false\n  });\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client\n      });\n    }\n  }, [user]);\n\n  const dashboardRedirect = () => {\n    if (dashboardToggle) {\n      if (localuser.is_firm) {\n        return /*#__PURE__*/_jsxDEV(FirmDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 16\n        }, this);\n      } else if (localuser.is_client) {\n        return /*#__PURE__*/_jsxDEV(ClientDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 16\n        }, this);\n      } else if (localuser.is_lawyer) {\n        return /*#__PURE__*/_jsxDEV(LawyerDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 16\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 16\n        }, this);\n      }\n    }\n  }; // return <>{dashboardRedirect()}</>;\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      mt: 3,\n      mx: 3,\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 10,\n        children: dashboardRedirect()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Dashboard, \"p/HcNYJT6LCZFmdjDNci2MZjp7Y=\", false, function () {\n  return [useToggle, useToggle, useToggle, useToggle];\n});\n\n_c = Dashboard;\n\nconst mapStateToProps = state => ({\n  // isAuthenticated: state.auth.isAuthenticated\n  user: state.auth.user\n});\n\nexport default connect(mapStateToProps)(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/supersis03/Projects/dextera-project/frontend/src/components/Dashboard/index.jsx"],"names":["React","useState","useEffect","useContext","Fragment","Button","Box","Grid","Paper","TodayRounded","TrendingUp","KeyboardArrowDown","Task","MoneyOff","MonetizationOn","FileCopy","HourglassBottom","AssignmentTurnedIn","Map","AddCircle","TodayOutlined","useToggle","SideBarBtn","connect","AdminDashboard","ClientDashboard","LawyerDashboard","FirmDashboard","Profile","Sidebar","Dashboard","user","revToggle","setRevToggle","empToggle","setEmpToggle","dashboardToggle","setDashbaordToggle","profileToggle","setProfileToggle","localuser","setLocalUser","username","is_firm","is_lawyer","is_client","dashboardRedirect","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React, { useState, useEffect, useContext, Fragment } from 'react';\n\nimport { Button, Box, Grid, Paper } from '@mui/material';\n\nimport {\n  TodayRounded,\n  TrendingUp,\n  KeyboardArrowDown,\n  Task,\n  MoneyOff,\n  MonetizationOn,\n  FileCopy,\n  HourglassBottom,\n  AssignmentTurnedIn,\n  Map,\n  AddCircle,\n  TodayOutlined,\n} from '@mui/icons-material';\n\nimport { useToggle } from '../../context/useToggle';\n\nimport { SideBarBtn } from '../../styles/styles';\n// import { UserContext } from '../../context/User';\n\nimport { connect } from 'react-redux';\nimport AdminDashboard from './AdminDashboard';\nimport ClientDashboard from './ClientDashboard';\nimport LawyerDashboard from './LawyerDashboard';\nimport FirmDashboard from './FirmDashboard';\nimport Profile from '../Profile/Profile';\nimport Sidebar from '../Sidebar/Sidebar';\n\n// import DashboardNavbar from '../Navbars/DashboardNavbar';\n\nconst Dashboard = ({ user }) => {\n  const [revToggle, setRevToggle] = useToggle(true);\n  const [empToggle, setEmpToggle] = useToggle(true);\n  const [dashboardToggle, setDashbaordToggle] = useToggle(false);\n  const [profileToggle, setProfileToggle] = useToggle(false);\n\n  // checker type of user\n  const [localuser, setLocalUser] = useState({\n    username: 'Guest',\n    is_firm: true,\n    is_lawyer: false,\n    is_client: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n\n  const dashboardRedirect = () => {\n    if (dashboardToggle) {\n      if (localuser.is_firm) {\n        return <FirmDashboard />;\n      } else if (localuser.is_client) {\n        return <ClientDashboard />;\n      } else if (localuser.is_lawyer) {\n        return <LawyerDashboard />;\n      } else {\n        return <AdminDashboard />;\n      }\n    }\n  };\n  // return <>{dashboardRedirect()}</>;\n  return (\n    <>\n      <Grid container mt={3} mx={3} spacing={2}>\n        <Grid item xs={10}>\n          {dashboardRedirect()}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}