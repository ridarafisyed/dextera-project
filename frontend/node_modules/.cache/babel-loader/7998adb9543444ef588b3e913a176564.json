{"ast":null,"code":"import _slicedToArray from\"/home/supersis03/Projects/dextera-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/** @format */import React,{useState,Fragment}from'react';// import axios from 'axios';\nimport{connect}from'react-redux';import{Box,Button,Paper,Grid}from'@mui/material';import{SideBarBtn}from'../../styles/styles';import Calender from'./components/Calender';import ProgressBar from'./components/ProgressBar';import{useToggle}from'../../context/useToggle';import Tasks from'./components/Tasks';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ClientDashboard=function ClientDashboard(){var _useToggle=useToggle(true),_useToggle2=_slicedToArray(_useToggle,2),calendarToggle=_useToggle2[0],setCalendarToggle=_useToggle2[1];var _useToggle3=useToggle(true),_useToggle4=_slicedToArray(_useToggle3,2),tasksToggle=_useToggle4[0],setTasksToggle=_useToggle4[1];var _useToggle5=useToggle(true),_useToggle6=_slicedToArray(_useToggle5,2),progressToggle=_useToggle6[0],setProgressToggle=_useToggle6[1];return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Paper,{elevation:3,sx:{minHeight:'84vh'},children:/*#__PURE__*/_jsxs(Grid,{container:true,children:[calendarToggle?/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsx(Calender,{})}):null,tasksToggle?/*#__PURE__*/_jsx(Grid,{item:true,mt:3,p:2,xs:8,children:/*#__PURE__*/_jsx(Tasks,{})}):null,progressToggle?/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(ProgressBar,{})}):null]})})});};var mapStateToProps=function mapStateToProps(state){return{// isAuthenticated: state.auth.isAuthenticated\nuser:state.auth.user};};export default connect(mapStateToProps)(ClientDashboard);","map":{"version":3,"sources":["/home/supersis03/Projects/dextera-project/frontend/src/components/Dashboard/ClientDashboard.jsx"],"names":["React","useState","Fragment","connect","Box","Button","Paper","Grid","SideBarBtn","Calender","ProgressBar","useToggle","Tasks","ClientDashboard","calendarToggle","setCalendarToggle","tasksToggle","setTasksToggle","progressToggle","setProgressToggle","minHeight","mapStateToProps","state","user","auth"],"mappings":"yKAAA,cAEA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,KAA0C,OAA1C,CACA;AAEA,OAASC,OAAT,KAAwB,aAAxB,CAEA,OAASC,GAAT,CAAcC,MAAd,CAAsBC,KAAtB,CAA6BC,IAA7B,KAAyC,eAAzC,CACA,OAASC,UAAT,KAA2B,qBAA3B,CAEA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CACA,MAAOC,CAAAA,WAAP,KAAwB,0BAAxB,CAEA,OAASC,SAAT,KAA0B,yBAA1B,CAEA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,C,6IAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,gBACgBF,SAAS,CAAC,IAAD,CADzB,0CACrBG,cADqB,gBACLC,iBADK,gCAEUJ,SAAS,CAAC,IAAD,CAFnB,2CAErBK,WAFqB,gBAERC,cAFQ,gCAGgBN,SAAS,CAAC,IAAD,CAHzB,2CAGrBO,cAHqB,gBAGLC,iBAHK,gBAK5B,mBACE,sCACE,KAAC,KAAD,EAAO,SAAS,CAAE,CAAlB,CAAqB,EAAE,CAAE,CAAEC,SAAS,CAAE,MAAb,CAAzB,uBACE,MAAC,IAAD,EAAM,SAAS,KAAf,WACGN,cAAc,cACb,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,uBACE,KAAC,QAAD,IADF,EADa,CAIX,IALN,CAMGE,WAAW,cACV,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,CAAkB,CAAC,CAAE,CAArB,CAAwB,EAAE,CAAE,CAA5B,uBACE,KAAC,KAAD,IADF,EADU,CAIR,IAVN,CAWGE,cAAc,cACb,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,uBACE,KAAC,WAAD,IADF,EADa,CAIX,IAfN,GADF,EADF,EADF,CAuBD,CA5BD,CA6BA,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClC;AACAC,IAAI,CAAED,KAAK,CAACE,IAAN,CAAWD,IAFiB,CAAZ,EAAxB,CAIA,cAAepB,CAAAA,OAAO,CAACkB,eAAD,CAAP,CAAyBR,eAAzB,CAAf","sourcesContent":["/** @format */\n\nimport React, { useState, Fragment } from 'react';\n// import axios from 'axios';\n\nimport { connect } from 'react-redux';\n\nimport { Box, Button, Paper, Grid } from '@mui/material';\nimport { SideBarBtn } from '../../styles/styles';\n\nimport Calender from './components/Calender';\nimport ProgressBar from './components/ProgressBar';\n\nimport { useToggle } from '../../context/useToggle';\n\nimport Tasks from './components/Tasks';\n\nconst ClientDashboard = () => {\n  const [calendarToggle, setCalendarToggle] = useToggle(true);\n  const [tasksToggle, setTasksToggle] = useToggle(true);\n  const [progressToggle, setProgressToggle] = useToggle(true);\n\n  return (\n    <>\n      <Paper elevation={3} sx={{ minHeight: '84vh' }}>\n        <Grid container>\n          {calendarToggle ? (\n            <Grid item xs={4}>\n              <Calender />\n            </Grid>\n          ) : null}\n          {tasksToggle ? (\n            <Grid item mt={3} p={2} xs={8}>\n              <Tasks />\n            </Grid>\n          ) : null}\n          {progressToggle ? (\n            <Grid item xs={12}>\n              <ProgressBar />\n            </Grid>\n          ) : null}\n        </Grid>\n      </Paper>\n    </>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated\n  user: state.auth.user,\n});\nexport default connect(mapStateToProps)(ClientDashboard);\n"]},"metadata":{},"sourceType":"module"}