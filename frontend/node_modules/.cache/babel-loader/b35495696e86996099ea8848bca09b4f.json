{"ast":null,"code":"var _jsxFileName = \"/home/supersis03/Projects/dextera-project/frontend/src/containers/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login } from '../actions/auth';\nimport { Avatar, Button, Paper, Grid, Box, Typography, TextField } from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport BackgroundImage from '../asserts/login_light.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  login,\n  isAuthenticated\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  const {\n    username,\n    email,\n    password\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    login(email, password, username);\n  }; //   const continueWithGoogle = async () => {\n  //     try {\n  //         const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?redirect_uri=${process.env.REACT_APP_API_URL}/google`)\n  //         window.location.replace(res.data.authorization_url);\n  //     } catch (err) {\n  //     }\n  // };\n  //   const continueWithFacebook = async () => {\n  //       try {\n  //           const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/facebook/?redirect_uri=${process.env.REACT_APP_API_URL}/facebook`)\n  //           window.location.replace(res.data.authorization_url);\n  //       } catch (err) {\n  //       }\n  //   };\n\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    component: \"main\",\n    sx: {\n      height: '87vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: false,\n      sm: 4,\n      md: 8,\n      sx: {\n        backgroundImage: `url(${BackgroundImage})`,\n        backgroundRepeat: 'no-repeat',\n        backgroundColor: t => t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 8,\n      md: 4,\n      component: Paper,\n      elevation: 6,\n      square: true,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          my: 8,\n          mx: 4,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            m: 1,\n            bgcolor: 'warning.main'\n          },\n          children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          Validate: true,\n          sx: {\n            mt: 1\n          },\n          onSubmit: e => onSubmit(e),\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            variant: \"standard\",\n            id: \"username\",\n            label: \"Username\",\n            name: \"username\",\n            value: username,\n            onChange: e => onChange(e),\n            autoComplete: \"username\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            variant: \"standard\",\n            id: \"email\",\n            label: \"Email Address\",\n            name: \"email\",\n            value: email,\n            onChange: e => onChange(e),\n            autoComplete: \"email\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            variant: \"standard\",\n            name: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            value: password,\n            onChange: e => onChange(e),\n            id: \"password\",\n            minLength: \"6\",\n            autoComplete: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/reset-password\",\n              variant: \"body2\",\n              children: \"Forgot password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/signup\",\n              variant: \"body2\",\n              children: \"Don't have an account? Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"elb342kijNxgxv+q2RCjSHxmbF8=\");\n\n_c = Login;\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/supersis03/Projects/dextera-project/frontend/src/containers/Login.js"],"names":["React","useState","Link","Redirect","connect","login","Avatar","Button","Paper","Grid","Box","Typography","TextField","LockOutlinedIcon","BackgroundImage","Login","isAuthenticated","formData","setFormData","username","email","password","onChange","e","target","name","value","onSubmit","preventDefault","height","backgroundImage","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","my","mx","display","flexDirection","alignItems","m","bgcolor","mt","mb","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login } from '../actions/auth';\n\nimport {\n    Avatar,\n    Button, \n    Paper,\n    Grid,\n    Box,\n    Typography,\n    TextField,\n\n} from '@mui/material';\n\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n\nimport BackgroundImage from '../asserts/login_light.png'\n\n\nconst Login = ({ login, isAuthenticated }) => {\n\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '' \n});\n\n  const { username, email, password } = formData;\n\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n      e.preventDefault();\n\n      login( email, password, username);\n  };\n//   const continueWithGoogle = async () => {\n//     try {\n//         const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?redirect_uri=${process.env.REACT_APP_API_URL}/google`)\n\n//         window.location.replace(res.data.authorization_url);\n//     } catch (err) {\n\n//     }\n// };\n\n//   const continueWithFacebook = async () => {\n//       try {\n//           const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/facebook/?redirect_uri=${process.env.REACT_APP_API_URL}/facebook`)\n\n//           window.location.replace(res.data.authorization_url);\n//       } catch (err) {\n\n//       }\n//   };\n  if (isAuthenticated) {\n    \n    return <Redirect to='/dashboard' />\n}\n\n    return (\n    <Grid container component=\"main\" sx={{ height: '87vh' }}>\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={8}\n          sx={{\n            backgroundImage: `url(${BackgroundImage})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundColor: (t) =>\n              t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n          }}\n        />\n          <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >                \n            <Avatar sx={{ m: 1, bgcolor: 'warning.main' }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n            </Typography>\n                <Box component=\"form\" Validate sx={{ mt: 1 }} onSubmit={e => onSubmit(e)}>\n                 {/* csrf_token */}\n                 <TextField\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        variant=\"standard\"\n                        id=\"username\"\n                        label=\"Username\"\n                        name=\"username\"\n                        value={username}\n                        onChange={e => onChange(e)}\n                        autoComplete=\"username\"\n                        autoFocus\n                    />\n                    <TextField\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        variant=\"standard\"\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        value={email}\n                        onChange={e => onChange(e)}\n                        autoComplete=\"email\"\n                        autoFocus\n                    />\n                      <TextField\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        variant=\"standard\"\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        value={password}\n                        onChange={e => onChange(e)}\n                        id=\"password\"\n                        minLength='6'\n                        autoComplete=\"password\"\n                    />\n                     <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{ mt: 3, mb: 2 }}\n                    >\n                        Sign In\n                    </Button>\n                </Box>\n                <Grid container>\n                <Grid item xs>\n                  <Link to=\"/reset-password\" variant=\"body2\">\n                    Forgot password?\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Link to=\"/signup\" variant=\"body2\">\n                    {\"Don't have an account? Sign Up\"}\n                  </Link>\n                </Grid>\n              </Grid>            \n            </Box>\n            </Grid>\n    </Grid>\n    );\n};\n\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n  \n});\n\nexport default connect(mapStateToProps, { login })(Login);"]},"metadata":{},"sourceType":"module"}