{"ast":null,"code":"var _jsxFileName = \"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Legder/LedgerActivity.jsx\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Table, TableCell, TableContainer, TableHead, TableRow, TableBody, Typography, Checkbox, Box } from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LedgerActivity = () => {\n  _s();\n\n  const [activityData, setActivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n\n  const FetchData = () => {\n    axios.get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG).then(res => {\n      setLoading(false);\n      setStatus(res.statusText);\n      setActivityData(res.data);\n    }).catch(err => {\n      setLoading(false);\n      setStatus(err.statusText);\n    });\n  };\n\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h4\",\n        variant: \"h5\",\n        mb: 2,\n        children: \"Ledger Activity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Files\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Cateagory\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Sub-Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Notes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Source\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"In/Out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), loading ? null : activityData === null || activityData === void 0 ? void 0 : activityData.map(data => {\n            return /*#__PURE__*/_jsxDEV(TableBody, {\n              id: data.id,\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: data.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: data.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: data.sub_category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: data.note\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: data.billable ? \"email\" : \"workflow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: data.bill_by\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: data.billable ? \"In\" : \"Out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LedgerActivity, \"w7xQjbzg+Kj+LWIceQ2OEMpSMRA=\");\n\n_c = LedgerActivity;\nexport default LedgerActivity;\n\nvar _c;\n\n$RefreshReg$(_c, \"LedgerActivity\");","map":{"version":3,"sources":["/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Legder/LedgerActivity.jsx"],"names":["React","Fragment","useState","useEffect","Table","TableCell","TableContainer","TableHead","TableRow","TableBody","Typography","Checkbox","Box","axios","CONFIG","ActionAlerts","LedgerActivity","activityData","setActivityData","loading","setLoading","error","setError","status","setStatus","FetchData","get","process","env","REACT_APP_API_URL","then","res","statusText","data","catch","err","map","id","date","category","sub_category","note","billable","bill_by"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nconst LedgerActivity = () => {\n  const [activityData, setActivityData] = useState([]);\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setActivityData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Fragment>\n      <Box>\n        <Typography component=\"h4\" variant=\"h5\" mb={2}>\n          Ledger Activity\n        </Typography>\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell></TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Files</TableCell>\n                <TableCell>Cateagory</TableCell>\n                <TableCell>Sub-Category</TableCell>\n                <TableCell>Notes</TableCell>\n                <TableCell>Source</TableCell>\n                <TableCell>User</TableCell>\n                <TableCell>In/Out</TableCell>\n              </TableRow>\n            </TableHead>\n            {loading\n              ? null\n              : activityData?.map((data) => {\n                  return (\n                    <TableBody id={data.id}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>{data.date}</TableCell>\n                      <TableCell>x</TableCell>\n                      <TableCell>{data.category}</TableCell>\n                      <TableCell>{data.sub_category}</TableCell>\n                      <TableCell>{data.note}</TableCell>\n                      <TableCell>\n                        {data.billable ? \"email\" : \"workflow\"}\n                      </TableCell>\n                      <TableCell>{data.bill_by}</TableCell>\n                      <TableCell>{data.billable ? \"In\" : \"Out\"}</TableCell>\n                    </TableBody>\n                  );\n                })}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default LedgerActivity;\n"]},"metadata":{},"sourceType":"module"}