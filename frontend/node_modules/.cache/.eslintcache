[{"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/index.js":"1","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/hocs/Layout.js":"2","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/context/User/index.js":"3","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/hocs/Theme.js":"4","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Sidebar/Sidebar.jsx":"5","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Navbars/Navbar.jsx":"6","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/context/User/reducer.js":"7","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/context/useToggle.jsx":"8","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/styles/styles.jsx":"9","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/NewMatter.jsx":"10","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/MatterDetail.jsx":"11","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Matters/MatterDashboard.jsx":"12","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/Calendar.jsx":"13","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Matters/Matters.jsx":"14","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/Filters.jsx":"15","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/Cards.jsx":"16","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/MatterList.jsx":"17","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/MatterListLong.jsx":"18","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/MatterCards.jsx":"19","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/App.js":"20","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Home.js":"21","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/utils/PrivateRoute.js":"22","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Profile/Profile.js":"23","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Auth/Activate.js":"24","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Auth/Login.js":"25","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Auth/ResetPassword.js":"26","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Auth/ResetPasswordConfirm.js":"27","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Auth/Signup.js":"28","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Dashboards/DashBoard.js":"29","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Dashboards/UserRoles/ClientDashboard.jsx":"30","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Dashboards/UserRoles/AdminDashboard.jsx":"31","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Dashboards/UserRoles/LawyerDashboard.jsx":"32","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Dashboards/UserRoles/FirmDashboard.jsx":"33","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Dashboard/ProgressBar.jsx":"34","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Dashboard/Tasks.jsx":"35","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Dashboard/Calender.jsx":"36","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Dashboard/Cards.jsx":"37","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/data/data.jsx":"38","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/store/actions/auth.js":"39","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/store/actions/types.js":"40","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/store/actions/profile.js":"41","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/store/store.js":"42","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/store/reducers/index.js":"43","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/store/reducers/auth.js":"44","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Invoice/Invoice.jsx":"45","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Invoice/InvoiceList.jsx":"46","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Invoice/Filters.jsx":"47","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Invoice/CreateInvoice.jsx":"48","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Navbars/NavbarSec.jsx":"49","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Invoice/Payment.jsx":"50","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Category/ManageCategory.jsx":"51","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Category/Category.jsx":"52","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Category/SubCategory.jsx":"53","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Category/Classification.jsx":"54","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/utils/ActionAlerts.js":"55","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/utils/ApiController.js":"56"},{"size":214,"mtime":1638446938932,"results":"57","hashOfConfig":"58"},{"size":1442,"mtime":1639036395723,"results":"59","hashOfConfig":"58"},{"size":431,"mtime":1637560398977,"results":"60","hashOfConfig":"58"},{"size":377,"mtime":1636440502354,"results":"61","hashOfConfig":"58"},{"size":5158,"mtime":1638879327237,"results":"62","hashOfConfig":"58"},{"size":3383,"mtime":1639026692464,"results":"63","hashOfConfig":"58"},{"size":276,"mtime":1637560343515,"results":"64","hashOfConfig":"58"},{"size":449,"mtime":1638367042591,"results":"65","hashOfConfig":"58"},{"size":2168,"mtime":1638862134985,"results":"66","hashOfConfig":"58"},{"size":10616,"mtime":1639026800310,"results":"67","hashOfConfig":"58"},{"size":6154,"mtime":1638774078817,"results":"68","hashOfConfig":"58"},{"size":631,"mtime":1638446275072,"results":"69","hashOfConfig":"58"},{"size":1977,"mtime":1638446051937,"results":"70","hashOfConfig":"58"},{"size":687,"mtime":1639026628103,"results":"71","hashOfConfig":"58"},{"size":4066,"mtime":1638446047108,"results":"72","hashOfConfig":"58"},{"size":2094,"mtime":1638446046985,"results":"73","hashOfConfig":"58"},{"size":2687,"mtime":1638446047343,"results":"74","hashOfConfig":"58"},{"size":2153,"mtime":1638691244145,"results":"75","hashOfConfig":"58"},{"size":4296,"mtime":1638618151732,"results":"76","hashOfConfig":"58"},{"size":3175,"mtime":1639036368958,"results":"77","hashOfConfig":"58"},{"size":740,"mtime":1638446649748,"results":"78","hashOfConfig":"58"},{"size":463,"mtime":1636993968666,"results":"79","hashOfConfig":"58"},{"size":15947,"mtime":1638774230928,"results":"80","hashOfConfig":"58"},{"size":1154,"mtime":1638449245127,"results":"81","hashOfConfig":"58"},{"size":4621,"mtime":1638449350138,"results":"82","hashOfConfig":"58"},{"size":3104,"mtime":1638449370642,"results":"83","hashOfConfig":"58"},{"size":3386,"mtime":1638449371454,"results":"84","hashOfConfig":"58"},{"size":7122,"mtime":1638449362722,"results":"85","hashOfConfig":"58"},{"size":1269,"mtime":1638446773047,"results":"86","hashOfConfig":"58"},{"size":1338,"mtime":1638447365711,"results":"87","hashOfConfig":"58"},{"size":6005,"mtime":1638447115464,"results":"88","hashOfConfig":"58"},{"size":6006,"mtime":1638447337226,"results":"89","hashOfConfig":"58"},{"size":1743,"mtime":1638447392184,"results":"90","hashOfConfig":"58"},{"size":564,"mtime":1638444685113,"results":"91","hashOfConfig":"58"},{"size":2656,"mtime":1638444685144,"results":"92","hashOfConfig":"58"},{"size":891,"mtime":1638444684977,"results":"93","hashOfConfig":"58"},{"size":736,"mtime":1639029225461,"results":"94","hashOfConfig":"58"},{"size":272,"mtime":1637476045607,"results":"95","hashOfConfig":"58"},{"size":6785,"mtime":1637997850711,"results":"96","hashOfConfig":"58"},{"size":1435,"mtime":1637672498618,"results":"97","hashOfConfig":"58"},{"size":2673,"mtime":1638174831358,"results":"98","hashOfConfig":"58"},{"size":400,"mtime":1638449247211,"results":"99","hashOfConfig":"58"},{"size":115,"mtime":1636871801359,"results":"100","hashOfConfig":"58"},{"size":2685,"mtime":1638449250535,"results":"101","hashOfConfig":"58"},{"size":243,"mtime":1638690803067,"results":"102","hashOfConfig":"58"},{"size":2342,"mtime":1638692842104,"results":"103","hashOfConfig":"58"},{"size":4207,"mtime":1638862489124,"results":"104","hashOfConfig":"58"},{"size":12405,"mtime":1639026410526,"results":"105","hashOfConfig":"58"},{"size":3052,"mtime":1639026719824,"results":"106","hashOfConfig":"58"},{"size":9398,"mtime":1639026458023,"results":"107","hashOfConfig":"58"},{"size":2039,"mtime":1639027424364,"results":"108","hashOfConfig":"58"},{"size":4335,"mtime":1639034336349,"results":"109","hashOfConfig":"58"},{"size":4056,"mtime":1639036501643,"results":"110","hashOfConfig":"58"},{"size":4231,"mtime":1639035535073,"results":"111","hashOfConfig":"58"},{"size":430,"mtime":1639033304994,"results":"112","hashOfConfig":"58"},{"size":15,"mtime":1639033883915,"results":"113","hashOfConfig":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qmi5hf",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yzhj4x","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/index.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/hocs/Layout.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/context/User/index.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/hocs/Theme.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Sidebar/Sidebar.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Navbars/Navbar.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/context/User/reducer.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/context/useToggle.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/styles/styles.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/NewMatter.jsx",["242","243","244","245"],"/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  Typography,\n} from \"@mui/material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\n\nconst NewMatter = () => {\n  const [matterData, setMatterData] = useState({\n    contact: \"\",\n    matter_number: \"\",\n    matter_name: \"\",\n    alerts: \"\",\n    matter_type: \"\",\n    matter_source: \"\",\n    matter_status: \"\",\n    assign_to: \"\",\n    billing_rate: \"\",\n    open: \"\",\n    closed: \"\",\n    total_days: \"\",\n    jurisdiction: \"\",\n    status_limitaion: \"\",\n    opposing_counsel: \"\",\n    where: \"\",\n    when: \"\",\n    involved: \"\",\n    witnesses: \"\",\n    narrative: \"\",\n  });\n\n  // const {\n  //   contact,\n  //   matter_number,\n  //   matter_name,\n  //   alerts,\n  //   matter_type,\n  //   matter_source,\n  //   matter_status,\n  //   assign_to,\n  //   billing_rate,\n  //   open,\n  //   closed,\n  //   total_days,\n  //   jurisdiction,\n  //   status_limitaion,\n  //   opposing_counsel,\n  //   where,\n  //   when,\n  //   involved,\n  //   witnesses,\n  //   narrative,\n  // } = matterData;\n\n  const onChange = (e) =>\n    setMatterData({ ...matterData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    // login(username, email, password);\n  };\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create New Matter\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={8}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"contact\"\n              label=\"contact\"\n              type=\"text\"\n              value=\"contact\"\n              onChange={(e) => onChange(e)}\n              id=\"contact\"\n              autoComplete=\"contact\"\n              sx={{\n                width: \"97%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_number\"\n              label=\"matter_number\"\n              type=\"text\"\n              value=\"matter_number\"\n              onChange={(e) => onChange(e)}\n              id=\"matter_number\"\n              autoComplete=\"matter_number\"\n              disabled\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_name\"\n              label=\"matter_name\"\n              type=\"text\"\n              value=\"matter_name\"\n              onChange={(e) => onChange(e)}\n              id=\"matter_name\"\n              autoComplete=\"matter_name\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"alerts\"\n              label=\"alerts\"\n              type=\"text\"\n              value=\"alerts\"\n              onChange={(e) => onChange(e)}\n              id=\"alerts\"\n              autoComplete=\"alerts\"\n              sx={{\n                width: \"97%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_type\"\n              label=\"matter_type\"\n              type=\"text\"\n              value=\"matter_type\"\n              onChange={(e) => onChange(e)}\n              id=\"matter_type\"\n              autoComplete=\"matter_type\"\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_source\"\n              label=\"matter_source\"\n              type=\"text\"\n              value=\"matter_source\"\n              onChange={(e) => onChange(e)}\n              id=\"matter_source\"\n              autoComplete=\"matter_source\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_status\"\n              label=\"matter_status\"\n              type=\"text\"\n              value=\"matter_status\"\n              onChange={(e) => onChange(e)}\n              id=\"matter_status\"\n              autoComplete=\"matter_status\"\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"assign_to\"\n              label=\"assign_to\"\n              type=\"text\"\n              value=\"assign_to\"\n              onChange={(e) => onChange(e)}\n              id=\"assign_to\"\n              autoComplete=\"assign_to\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"billing_rate\"\n              label=\"billing_rate\"\n              type=\"text\"\n              value=\"billing_rate\"\n              onChange={(e) => onChange(e)}\n              id=\"billing_rate\"\n              autoComplete=\"billing_rate\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"open\"\n              label=\"open\"\n              type=\"text\"\n              value=\"open\"\n              onChange={(e) => onChange(e)}\n              id=\"open\"\n              autoComplete=\"open\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"closed\"\n              label=\"closed\"\n              type=\"text\"\n              value=\"closed\"\n              onChange={(e) => onChange(e)}\n              id=\"closed\"\n              autoComplete=\"closed\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"total_days\"\n              label=\"total_days\"\n              type=\"text\"\n              value=\"total_days\"\n              onChange={(e) => onChange(e)}\n              id=\"total_days\"\n              autoComplete=\"total_days\"\n            />\n          </Grid>\n\n          <Grid item xs={4}>\n            <br />\n            <Typography component=\"h5\" variant=\"h6\">\n              Legal Concerns\n            </Typography>\n            <br />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"jurisdiction\"\n              label=\"jurisdiction\"\n              type=\"text\"\n              value=\"jurisdiction\"\n              onChange={(e) => onChange(e)}\n              id=\"jurisdiction\"\n              autoComplete=\"jurisdiction\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"status_limitaion\"\n              label=\"status_limitaion\"\n              type=\"text\"\n              value=\"status_limitaion\"\n              onChange={(e) => onChange(e)}\n              id=\"status_limitaion\"\n              autoComplete=\"status_limitaion\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"opposing_counsel\"\n              label=\"opposing_counsel\"\n              type=\"text\"\n              value=\"opposing_counsel\"\n              onChange={(e) => onChange(e)}\n              id=\"opposing_counsel\"\n              autoComplete=\"opposing_counsel\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <Typography component=\"h5\" variant=\"h6\" sx={{ fontSize: \"1rem\" }}>\n              Event Detail\n            </Typography>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"where\"\n              label=\"where\"\n              type=\"text\"\n              value=\"where\"\n              onChange={(e) => onChange(e)}\n              id=\"where\"\n              autoComplete=\"where\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"when\"\n              label=\"when\"\n              type=\"text\"\n              value=\"when\"\n              onChange={(e) => onChange(e)}\n              id=\"when\"\n              autoComplete=\"when\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"involved\"\n              label=\"Who was involved\"\n              type=\"text\"\n              value=\"involved\"\n              onChange={(e) => onChange(e)}\n              id=\"involved\"\n              autoComplete=\"involved\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"witnesses\"\n              label=\"witnesses\"\n              type=\"text\"\n              value=\"witnesses\"\n              onChange={(e) => onChange(e)}\n              id=\"witnesses\"\n              autoComplete=\"witnesses\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              id=\"outlined-multiline-static\"\n              label=\"Customer Narrative of the event\"\n              multiline\n              rows={10}\n              defaultValue=\"Default Value\"\n              variant=\"outlined\"\n              value=\"narrative\"\n              onChange={(e) => onChange(e)}\n              id=\"narrative\"\n              autoComplete=\"narrative\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          variant=\"contained\"\n          sx={{ float: \"right\" }}\n          endIcon={<SaveIcon />}\n        >\n          Send\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default NewMatter;\n","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/MatterDetail.jsx",["246","247","248","249","250"],"/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { styled } from \"@mui/material/styles\";\n\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n  CardContent,\n  Typography,\n  Card,\n  Grid,\n  Box,\n  List,\n  ListItem,\n  Paper,\n  InputBase,\n  Link,\n} from \"@mui/material\";\nimport { fontStyle } from \"@mui/system\";\n\nconst MatterTask = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography sx={{ fontSize: \"0.8rem\" }}>Upcoming Activity</Typography>\n        <List mt={1} sx={{ fontSize: \"0.75rem\" }}>\n          <ListItem components=\"p\">\n            Date: - Activity - Responsible Party\n          </ListItem>\n          <ListItem components=\"p\">\n            YYYY/MM/DD: - Hearing for MSC - MJJ\n          </ListItem>\n          <ListItem components=\"p\">YYYY/MM/DD: - Trail - KSK</ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Activities = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography sx={{ fontSize: \"0.8rem\" }}>Upcoming Activity</Typography>\n        <List mt={1} sx={{ fontSize: \"0.75rem\" }}>\n          <ListItem components={Typography}>\n            Date: - Activity - Responsible Party\n          </ListItem>\n          <ListItem components={Typography}>\n            YYYY/MM/DD: - Hearing for MSC - MJJ\n          </ListItem>\n          <ListItem components={Typography}>YYYY/MM/DD: - Trail - KSK</ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Cards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                Classification\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                % time spent\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                Matter Completion\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst MatterDetail = () => {\n  const Search = styled(\"div\")(({ theme }) => ({\n    position: \"relative\",\n    borderRadius: \"1.5rem\",\n    backgroundColor: \"#eee\",\n    \"&:hover\": {\n      backgroundColor: \"#ddd\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"40%\",\n  }));\n\n  const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  }));\n\n  const StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: \"inherit\",\n    \"& .MuiInputBase-input\": {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"md\")]: {\n        width: \"20ch\",\n      },\n    },\n  }));\n  const [matters, setMatters] = useState(null);\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item xs={12}>\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n        </Grid>\n        <Grid item xs={12}>\n          <Grid container spacing={2}>\n            <Grid item mt={2} xs={7}>\n              <TableContainer>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>#</TableCell>\n                      <TableCell>Recent Document</TableCell>\n                      <TableCell>Version</TableCell>\n                      <TableCell>Last Open</TableCell>\n                      <TableCell>User</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>1</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>2</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>3</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                  </TableHead>\n                </Table>\n              </TableContainer>\n              <Grid container spacing={3}>\n                <Grid item>\n                  <Activities />\n                </Grid>\n                <Grid item>\n                  <MatterTask />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item mt={2} xs={5}>\n              <Cards />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default MatterDetail;\n","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Matters/MatterDashboard.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/Calendar.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Matters/Matters.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/Filters.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/Cards.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/MatterList.jsx",["251","252"],"/** @format */\n\nimport React, { useState } from \"react\";\n\nimport {\n  Paper,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\n\nconst MatterList = () => {\n  const [redTask, setRedTask] = useState(false);\n  const [greenTask, setGreenTask] = useState(false);\n  const [yellowTask, setYellowTask] = useState(false);\n  const [myTask, setMyTask] = useState(true);\n  const [matters, setMatters] = useState(null);\n\n  // useEffect(() => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   };\n  //   const res = axios.get(\n  //     `${process.env.REACT_APP_API_URL}/api/matter`,\n  //     config,\n  //   );\n  //   setMatters(res.data);\n  // }, []);\n  return (\n    <Box component={Paper} p={2}>\n      <FormGroup aria-label=\"position\" row>\n        <FormControlLabel\n          control={\n            <Checkbox value={myTask} onChange={() => setMyTask(!myTask)} />\n          }\n          label=\"My Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox value={redTask} onChange={() => setRedTask(!redTask)} />\n          }\n          label=\"Red Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              value={greenTask}\n              onChange={() => setGreenTask(!greenTask)}\n            />\n          }\n          label=\"Green Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              value={yellowTask}\n              onChange={() => setYellowTask(!yellowTask)}\n            />\n          }\n          label=\"Yellow Tasks\"\n        />\n      </FormGroup>\n      <Typography component=\"h3\">All Matters Task's List</Typography>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assign To</TableCell>\n            </TableRow>\n            {matters?.map((matter) => {\n              <TableRow id={matter.id}>\n                <TableCell>{matter.type}</TableCell>\n                <TableCell>{matter.name}</TableCell>\n                <TableCell>{matter.lastAction}</TableCell>\n                <TableCell>{matter.nextAction}</TableCell>\n                <TableCell>{matter.assign_to}</TableCell>\n              </TableRow>;\n            })}\n          </TableHead>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n\nexport default MatterList;\n","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/MatterListLong.jsx",["253","254"],"/** @format */\n\nimport React, { useState } from \"react\";\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n} from \"@mui/material\";\n\nconst MatterListLong = () => {\n  const [matters, setMatters] = useState(null);\n\n  // useEffect(() => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   };\n  //   const res = axios.get(\n  //     `${process.env.REACT_APP_API_URL}/api/invoices_long_list`,\n  //     config,\n  //   );\n  //   setMatters(res.data);\n  // }, []);\n\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Matter Tasks</TableCell>\n            <TableCell>Matter Name</TableCell>\n            <TableCell>Matter Contact</TableCell>\n            <TableCell>Matter Type</TableCell>\n            <TableCell>Bill Rate</TableCell>\n            <TableCell>Last Action</TableCell>\n            <TableCell>Next Action</TableCell>\n            <TableCell>Assigned to</TableCell>\n            <TableCell>Billable</TableCell>\n            <TableCell>Open Invoice</TableCell>\n            <TableCell>Trust Account</TableCell>\n            <TableCell>Last Payment</TableCell>\n          </TableRow>\n          {matters?.map((matter) => {\n            <TableRow id={matter.id}>\n              <TableCell>\n                <Checkbox />\n              </TableCell>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Matter Contact</TableCell>\n              <TableCell>Matter Type</TableCell>\n              <TableCell>Bill Rate</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assigned to</TableCell>\n              <TableCell>Billable</TableCell>\n              <TableCell>Open Invoice</TableCell>\n              <TableCell>Trust Account</TableCell>\n              <TableCell>Last Payment</TableCell>\n            </TableRow>;\n          })}\n        </TableHead>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default MatterListLong;\n","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/MatterCards.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/App.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Home.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/utils/PrivateRoute.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Profile/Profile.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Auth/Activate.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Auth/Login.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Auth/ResetPassword.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Auth/ResetPasswordConfirm.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Auth/Signup.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Dashboards/DashBoard.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Dashboards/UserRoles/ClientDashboard.jsx",["255","256","257"],"/** @format */\n\nimport React from \"react\";\n// import axios from 'axios';\n\nimport { connect } from \"react-redux\";\n\nimport { Paper, Grid } from \"@mui/material\";\n\nimport { useToggle } from \"../../../context/useToggle\";\n\nimport Calender from \"../../../components/Dashboard/Calender\";\nimport ProgressBar from \"../../../components/Dashboard/ProgressBar\";\n\nimport Tasks from \"../../../components/Dashboard/Tasks\";\n\nconst ClientDashboard = () => {\n  const [calendarToggle, setCalendarToggle] = useToggle(true);\n  const [tasksToggle, setTasksToggle] = useToggle(true);\n  const [progressToggle, setProgressToggle] = useToggle(true);\n\n  return (\n    <>\n      <Paper elevation={3} sx={{ minHeight: \"84vh\" }}>\n        <Grid container>\n          {calendarToggle ? (\n            <Grid item xs={4}>\n              <Calender />\n            </Grid>\n          ) : null}\n          {tasksToggle ? (\n            <Grid item mt={3} p={2} xs={8}>\n              <Tasks />\n            </Grid>\n          ) : null}\n          {progressToggle ? (\n            <Grid item xs={12}>\n              <ProgressBar />\n            </Grid>\n          ) : null}\n        </Grid>\n      </Paper>\n    </>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated\n  user: state.auth.user,\n});\nexport default connect(mapStateToProps)(ClientDashboard);\n","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Dashboards/UserRoles/AdminDashboard.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Dashboards/UserRoles/LawyerDashboard.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Dashboards/UserRoles/FirmDashboard.jsx",["258","259","260"],"/** @format */\n\nimport React from \"react\";\n// import axios from 'axios';\n\nimport { connect } from \"react-redux\";\nimport { Paper, Grid } from \"@mui/material\";\n\nimport Calender from \"../../../components/Dashboard/Calender\";\nimport Tasks from \"../../../components/Dashboard/Tasks\";\nimport Cards from \"../../../components/Dashboard/Cards\";\n\nimport { cardData } from \"../../../data/data\";\n\nimport { useToggle } from \"../../../context/useToggle\";\n\nconst FirmDashboard = () => {\n  // const [revToggle, setRevToggle] = useToggle(true);\n  // const [empToggle, setEmpToggle] = useToggle(true);\n  const [cardsToggle, setCardsToggle] = useToggle(true);\n  // const [sidebarToggle, setSidebarToggle] = useToggle(true);\n\n  const [calendarToggle, setCalendarToggle] = useToggle(true);\n  const [tasksToggle, setTasksToggle] = useToggle(true);\n  // const [progressToggle, setProgressToggle] = useToggle(true);\n\n  return (\n    <>\n      {/*main dashboard section for display  */}\n      <Paper elevation={3} sx={{ minHeight: \"84vh\" }}>\n        <Grid container px={2}>\n          {cardsToggle ? (\n            <Grid item xs={12} mt={2}>\n              {cardData.map((data, i) => (\n                <Cards key={i} data={data} />\n              ))}\n            </Grid>\n          ) : null}\n          {calendarToggle ? (\n            <Grid item xs={4}>\n              <Calender />\n            </Grid>\n          ) : null}\n          {tasksToggle ? (\n            <Grid item mt={3} p={2} xs={8}>\n              <Tasks />\n            </Grid>\n          ) : null}\n        </Grid>\n      </Paper>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated\n  user: state.auth.user,\n});\nexport default connect(mapStateToProps)(FirmDashboard);\n","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Dashboard/ProgressBar.jsx",["261"],"import React,{useState} from 'react'\nimport { LinearProgress, Box , Grid, Typography} from '@mui/material';\n\nconst ProgressBar = () => {\n    const [progress, setProgress] = useState(69);\n    return (\n        <Box paddingLeft={3} paddingRight={3}>\n        <Grid container >\n          <Grid item xs={1}>\n            <Typography>{progress}%</Typography>\n          </Grid>\n          <Grid item xs={11}mt={2}>\n            <LinearProgress variant=\"determinate\" value = {progress} />\n          </Grid>\n          </Grid>\n        </Box>\n    )\n}\n\nexport default ProgressBar\n","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Dashboard/Tasks.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Dashboard/Calender.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Dashboard/Cards.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/data/data.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/store/actions/auth.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/store/actions/types.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/store/actions/profile.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/store/store.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/store/reducers/index.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/store/reducers/auth.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Invoice/Invoice.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Invoice/InvoiceList.jsx",["262","263"],"/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n} from \"@mui/material\";\nimport Filters from \"./Filters\";\n\nconst InvoiceList = () => {\n  const [invoice, setInvoice] = useState(null);\n\n  // useEffect(() => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   };\n  //   const res = axios.get(\n  //     `${process.env.REACT_APP_API_URL}/api/invoices`,\n  //     config,\n  //   );\n  //   setInvoice(res.data);\n  // }, []);\n\n  return (\n    <Fragment>\n      <Filters />\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Invoice</TableCell>\n              <TableCell>Created</TableCell>\n              <TableCell>Due</TableCell>\n              <TableCell>Tax</TableCell>\n              <TableCell>Interest</TableCell>\n              <TableCell>Discount</TableCell>\n              <TableCell>Total</TableCell>\n              <TableCell>Balance</TableCell>\n              <TableCell>Last Payment</TableCell>\n              <TableCell>Approval Date</TableCell>\n              <TableCell>Approval by</TableCell>\n              <TableCell>Created by</TableCell>\n            </TableRow>\n            {invoice?.map((invoice) => {\n              <TableRow id={invoice.id}>\n                <TableCell>\n                  <Checkbox />\n                </TableCell>\n                <TableCell>{invoice.id}</TableCell>\n                <TableCell>{invoice.created}</TableCell>\n                <TableCell>{invoice.due}</TableCell>\n                <TableCell>{invoice.tax}</TableCell>\n                <TableCell>{invoice.interest}</TableCell>\n                <TableCell>{invoice.discount}</TableCell>\n                <TableCell>{invoice.total}</TableCell>\n                <TableCell>{invoice.balance}</TableCell>\n                <TableCell>{invoice.last_payment}</TableCell>\n                <TableCell>{invoice.approvel_date}</TableCell>\n                <TableCell>{invoice.approvel.by}</TableCell>\n                <TableCell>{invoice.created_by}</TableCell>\n              </TableRow>;\n            })}\n          </TableHead>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default InvoiceList;\n","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Invoice/Filters.jsx",["264"],"/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Box,\n  Switch,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography,\n  FormControlLabel,\n} from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nimport { styled } from \"@mui/material/styles\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nconst Filters = () => {\n  const [paid, setPaid] = useToggle(false);\n\n  const [age, setAge] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n\n  return (\n    <Fragment>\n      <Box\n        p={3}\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n      >\n        <LinkButton to=\"/create-invoice\">Create Invoice</LinkButton>\n        <LinkButton to=\"/recive-invoice\">Receive Money</LinkButton>\n        <FormControlLabel\n          label=\" Paid/ Unpaid\"\n          control={<Switch checked={paid} onChange={() => setPaid(paid)} />}\n        />\n        <Search>\n          <SearchIconWrapper>\n            <SearchIcon />\n          </SearchIconWrapper>\n          <StyledInputBase\n            placeholder=\"Search…\"\n            inputProps={{ \"aria-label\": \"search\" }}\n          />\n        </Search>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">All Invoice</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={age}\n            label=\"Age\"\n            onChange={handleChange}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Bill Date</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={age}\n            label=\"Age\"\n            onChange={handleChange}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">All Times</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={age}\n            label=\"Age\"\n            onChange={handleChange}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <Typography component=\"span\" variant=\"h8\" sx={{ width: \"8rem\", m: 2 }}>\n          {\" \"}\n          Status:{\" \"}\n        </Typography>\n\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Any </InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={age}\n            label=\"Age\"\n            onChange={handleChange}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Dropd-own</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={age}\n            label=\"Age\"\n            onChange={handleChange}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Filters;\n","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Invoice/CreateInvoice.jsx",["265","266"],"/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Typography,\n  Grid,\n  TextField,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n  FormControlLabel,\n  Switch,\n  Button,\n} from \"@mui/material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nconst CreateInvoice = () => {\n  const [approvel, setApprovel] = useToggle(false);\n  const [invoiceData, setInvoiceData] = useState({\n    matter: \"\",\n    contact: \"\",\n    billable: false,\n    date_range: \"\",\n    create_date: \"\",\n    due_date: \"\",\n    template: \"\",\n    invoice_no: \"\",\n    discount: \"\",\n    submit: false,\n  });\n\n  // const {\n  //   matter,\n  //   contact,\n  //   billable,\n  //   date_range,\n  //   create_date,\n  //   due_date,\n  //   template,\n  //   invoice_no,\n  //   discount,\n  //   submit,\n  // } = invoiceData;\n  const onChange = (e) =>\n    setInvoiceData({ ...invoiceData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  const [invoice, setInvoice] = useState(null);\n  // useEffect(() => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   };\n  //   const res = axios.get(\n  //     `${process.env.REACT_APP_API_URL}/api/invoice`,\n  //     config,\n  //   );\n  //   setInvoice(res.data);\n  // }, []);\n\n  const [dateRange, setDateRange] = React.useState([null, null]);\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create New Invoice\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter\"\n              label=\"matter\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"matter\"\n              autoComplete=\"matter\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"contact\"\n              label=\"contact\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"contact\"\n              autoComplete=\"contact\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  name=\"billable\"\n                  value=\"billable\"\n                  onChange={(e) => onChange(e)}\n                  id=\"billable\"\n                />\n              }\n              label=\"Unbillable\"\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <Typography sx={{ mt: 2, mb: 1 }}> Date Range </Typography>\n              <DateRangePicker\n                calendars={1}\n                value={dateRange}\n                onChange={(newValue) => {\n                  setDateRange(newValue);\n                }}\n                renderInput={(startProps, endProps) => (\n                  <Fragment>\n                    <TextField size=\"small\" {...startProps} />\n                    <Box sx={{ mx: 2 }}> to </Box>\n                    <TextField size=\"small\" {...endProps} />\n                  </Fragment>\n                )}\n              />\n            </LocalizationProvider>\n            <TextField\n              size=\"small\"\n              id=\"create_date\"\n              label=\"create_date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <TextField\n              size=\"small\"\n              id=\"due_date\"\n              label=\"due_date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"template\"\n              label=\"template\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"template\"\n              autoComplete=\"template\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"contact\"\n              label=\"contact\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"contact\"\n              autoComplete=\"contact\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"invoice_no\"\n              label=\"invoice_no\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"invoice_no\"\n              autoComplete=\"invoice_no\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"discount\"\n              label=\"discount\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"discount\"\n              autoComplete=\"discount\"\n            />\n            <FormControlLabel\n              label=\"Submit For Approvel\"\n              control={\n                <Switch\n                  checked={approvel}\n                  onChange={() => setApprovel(approvel)}\n                />\n              }\n            />\n          </Grid>\n          <Grid item xs={12} mt={2}>\n            <TableContainer>\n              <Table size=\"small\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell></TableCell>\n                    <TableCell>Sub-Category</TableCell>\n                    <TableCell>Description</TableCell>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Hours</TableCell>\n                    <TableCell>Rate</TableCell>\n                    <TableCell>Sub</TableCell>\n                    <TableCell>Tax</TableCell>\n                    <TableCell>int</TableCell>\n                    <TableCell>Disc.</TableCell>\n                    <TableCell>Total</TableCell>\n                    <TableCell>Biller</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                  </TableRow>\n                  {invoice?.map((invoice) => {\n                    <TableRow id={invoice.id}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n\n                      <TableCell>{invoice.sub_cat}</TableCell>\n                      <TableCell>{invoice.discription}</TableCell>\n                      <TableCell>{invoice.date}</TableCell>\n                      <TableCell>{invoice.hours}</TableCell>\n                      <TableCell>{invoice.rate}</TableCell>\n                      <TableCell>{invoice.sub}</TableCell>\n                      <TableCell>{invoice.tax}</TableCell>\n                      <TableCell>{invoice.int}</TableCell>\n                      <TableCell>{invoice.dics}</TableCell>\n                      <TableCell>{invoice.total}</TableCell>\n                      <TableCell>{invoice.biller}</TableCell>\n                    </TableRow>;\n                  })}\n                </TableHead>\n              </Table>\n            </TableContainer>\n          </Grid>\n          <Grid item mt={3}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  name=\"billable\"\n                  value=\"billable\"\n                  onChange={(e) => onChange(e)}\n                  id=\"billable\"\n                />\n              }\n              label=\"Notes\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  name=\"billable\"\n                  value=\"billable\"\n                  onChange={(e) => onChange(e)}\n                  id=\"Accept Online Payment\"\n                />\n              }\n              label=\"Unbillable\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  name=\"billable\"\n                  value=\"billable\"\n                  onChange={(e) => onChange(e)}\n                  id=\"billable\"\n                />\n              }\n              label=\"Terms & Conditions\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  name=\"billable\"\n                  value=\"billable\"\n                  onChange={(e) => onChange(e)}\n                  id=\"billable\"\n                />\n              }\n              label=\"Add interest (Compound / Simple)\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  name=\"billable\"\n                  value=\"billable\"\n                  onChange={(e) => onChange(e)}\n                  id=\"billable\"\n                />\n              }\n              label=\"Use Trust Balanace\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  name=\"billable\"\n                  value=\"billable\"\n                  onChange={(e) => onChange(e)}\n                  id=\"billable\"\n                />\n              }\n              label=\"Send Reminders Every\"\n            />\n            <TextField size=\"small\" sx={{ width: \"5rem\" }} />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  name=\"billable\"\n                  value=\"billable\"\n                  onChange={(e) => onChange(e)}\n                  id=\"billable\"\n                />\n              }\n              label=\"Add all unpaid invoices\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  name=\"billable\"\n                  value=\"billable\"\n                  onChange={(e) => onChange(e)}\n                  id=\"billable\"\n                />\n              }\n              label=\"use Operating Balance\"\n            />\n            <br />\n            <Button\n              variant=\"contained\"\n              sx={{ float: \"right\" }}\n              endIcon={<SaveIcon />}\n            >\n              Send\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateInvoice;\n","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Navbars/NavbarSec.jsx",["267"],"/** @format */\n/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../store/actions/auth\";\n\n// styling imports\nimport {\n  Box,\n  Toolbar,\n  Typography,\n  IconButton,\n  Menu,\n  MenuItem,\n  Fade,\n  Divider,\n} from \"@mui/material\";\n\nimport { SecNavbar } from \"../../styles/styles\";\n\nimport {\n  Message,\n  EmailRounded,\n  CalendarToday,\n  CheckBox,\n  NotificationAdd,\n  Settings,\n} from \"@mui/icons-material/\";\n\nconst NavbarSec = () => {\n  const today = new Date();\n  const time = today.toLocaleTimeString();\n  // const [localuser, setLocalUser] = useState({\n  //   username: \"Guest\",\n  //   is_firm: true,\n  //   is_lawyer: false,\n  //   is_client: false,\n  // });\n\n  // useEffect(() => {\n  //   if (user) {\n  //     setLocalUser({\n  //       username: user.username,\n  //       is_firm: user.is_firm,\n  //       is_lawyer: user.is_lawyer,\n  //       is_client: user.is_client,\n  //     });\n  //   }\n  // }, [user]);\n  const [redirect, setRedirect] = useState(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n\n  const openSetting = Boolean(settingAcnchorEl);\n\n  const handleClick = (event) => {\n    setSettingAcnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setSettingAcnchorEl(null);\n  };\n\n  return (\n    <Fragment>\n      <SecNavbar>\n        <Toolbar>\n          <Box component=\"div\" sx={{ flexGrow: 1 }}>\n            <Message /> <EmailRounded /> <CalendarToday /> <CheckBox />\n          </Box>\n          <NotificationAdd mr={2} />{\" \"}\n          <Typography component=\"h5\" variant=\"h6\" ml={2} mr={2}>\n            |\n          </Typography>\n          <Typography component=\"h5\" variant=\"h6\" mr={2}>\n            {time}\n          </Typography>\n          <IconButton\n            aria-label=\"more\"\n            id=\"long-button\"\n            aria-controls=\"long-menu\"\n            aria-expanded={openSetting ? \"true\" : undefined}\n            aria-haspopup=\"true\"\n            onClick={handleClick}\n            sx={{\n              color: \"white\",\n            }}\n          >\n            <Settings />\n          </IconButton>\n          <Menu\n            id=\"fade-menu\"\n            MenuListProps={{\n              \"aria-labelledby\": \"fade-button\",\n            }}\n            anchorEl={settingAcnchorEl}\n            open={openSetting}\n            onClose={handleClose}\n            TransitionComponent={Fade}\n          >\n            <MenuItem onClick={handleClose}>Setting Option1</MenuItem>\n            <MenuItem onClick={handleClose}>Setting Option2</MenuItem>\n            <Divider sx={{ my: 0.5 }} />\n            <MenuItem onClick={handleClose}>Setting Option3</MenuItem>\n          </Menu>\n        </Toolbar>\n      </SecNavbar>\n\n      {redirect ? <Redirect to=\"/\" /> : <Fragment></Fragment>}\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps, { logout })(NavbarSec);\n","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Invoice/Payment.jsx",["268","269"],"/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  Grid,\n  Box,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  FormControl,\n  Checkbox,\n  Typography,\n  TextField,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableCell,\n  Button,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nconst PaymentPlan = () => {\n  const [paymentData, setPaymentData] = useState({\n    payment_no: \"File# - 001\",\n    due: \"2020/07/01\",\n    amount: \"$ 750.00\",\n    late_fee: \"$22.00\",\n    total_due: \"$ 775.00\",\n    payment: \"$775.00\",\n    posted: \"$2020/07/05\",\n    method: \"Check\",\n  });\n\n  return (\n    <Fragment>\n      <Grid container mt={3} mb={3}>\n        <Grid item xs={4}>\n          <Typography>Start Balance:</Typography>\n          <Typography>Start Date:</Typography>\n          <Typography>Interest Rate:</Typography>\n        </Grid>\n        <Grid item xs={4}>\n          <Typography>Payment Amout:</Typography>\n          <Typography>Payment Date:</Typography>\n          <Typography>No Payments:</Typography>\n        </Grid>\n        <Grid item xs={4}>\n          <Typography>Payment Remaining:</Typography>\n          <Typography>Last Payment:</Typography>\n          <Typography>Last Payment $:</Typography>\n        </Grid>\n      </Grid>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Payment #</TableCell>\n            <TableCell>Due</TableCell>\n            <TableCell>Amout</TableCell>\n            <TableCell>Late Fee</TableCell>\n            <TableCell>Total Due</TableCell>\n            <TableCell>Payment</TableCell>\n            <TableCell>Posted</TableCell>\n            <TableCell>Method</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableCell>\n            <Checkbox />\n          </TableCell>\n          <TableCell>{paymentData.payment_no}</TableCell>\n          <TableCell>{paymentData.due}</TableCell>\n          <TableCell>{paymentData.amount} </TableCell>\n          <TableCell>{paymentData.late_fee}</TableCell>\n          <TableCell>{paymentData.total_due}</TableCell>\n          <TableCell>{paymentData.payment}</TableCell>\n          <TableCell>{paymentData.posted}</TableCell>\n          <TableCell>{paymentData.method}</TableCell>\n        </TableBody>\n      </Table>\n      <Button\n        variant=\"contained\"\n        sx={{\n          float: \"right\",\n          borderRadius: \"0.5rem\",\n          paddingInline: \"2rem\",\n          marginTop: \"2rem\",\n        }}\n      >\n        Close\n      </Button>{\" \"}\n    </Fragment>\n  );\n};\n\nconst InvoicePayment = () => {\n  const [invoiceData, setInvoiceData] = useState({\n    invoice_no: \"i-2106-0004542\",\n    due: \"2020/07/01\",\n    tax: \"$ 15.00\",\n    interest: \"$2.35\",\n    time: \"$ 1,234.50\",\n    hard: \"$457.00\",\n    soft: \"$45.00\",\n    total: \"$ 1,753.85\",\n  });\n\n  return (\n    <Fragment>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Invoice</TableCell>\n            <TableCell>Due</TableCell>\n            <TableCell>Tax</TableCell>\n            <TableCell>Interest</TableCell>\n            <TableCell>Time</TableCell>\n            <TableCell>Hard</TableCell>\n            <TableCell>Soft</TableCell>\n            <TableCell>Total</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableCell>\n            <Checkbox />\n          </TableCell>\n          <TableCell>{invoiceData.invoice_no}</TableCell>\n          <TableCell>{invoiceData.due}</TableCell>\n          <TableCell>{invoiceData.tax} </TableCell>\n          <TableCell>{invoiceData.interest}</TableCell>\n          <TableCell>{invoiceData.time}</TableCell>\n          <TableCell>{invoiceData.hard}</TableCell>\n          <TableCell>{invoiceData.soft}</TableCell>\n          <TableCell>{invoiceData.total}</TableCell>\n        </TableBody>\n      </Table>{\" \"}\n      <Button\n        variant=\"contained\"\n        sx={{\n          float: \"right\",\n          borderRadius: \"0.5rem\",\n          paddingInline: \"2rem\",\n          marginTop: \"2rem\",\n        }}\n      >\n        Pay\n      </Button>{\" \"}\n    </Fragment>\n  );\n};\n\nconst Payment = () => {\n  const [dateRange, setDateRange] = useState([null, null]);\n  const [isPlan, setIsPlan] = useToggle(false);\n  const [invoiceData, setInvoiceData] = useState({\n    payment_type: \"\",\n    date: \"\",\n    retainer: \"\",\n    payment: \"\",\n    date_range: \"\",\n    menu: \"\",\n    bank_account: \"\",\n    payment_method: \"\",\n  });\n\n  // const {\n  //   payment_type,\n  //   date,\n  //   retainer,\n  //   payment,\n  //   date_range,\n  //   menu,\n  //   bank_account,\n  //   payment_method,\n  // } = invoiceData;\n  const onChange = (e) =>\n    setInvoiceData({ ...invoiceData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item xs={12}>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{\n              \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n            }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            <FormControl component=\"fieldset\">\n              <RadioGroup\n                row\n                aria-label=\"payment_type\"\n                defaultValue=\"cash\"\n                name=\"payment_type\"\n                onChange={(e) => onChange(e)}\n                id=\"payment_type\"\n                autoComplete=\"payment_type\"\n              >\n                <FormControlLabel\n                  value=\"cash\"\n                  control={<Radio />}\n                  label=\"Cash\"\n                />\n                <FormControlLabel value=\"cc\" control={<Radio />} label=\"CC\" />\n                <FormControlLabel\n                  value=\"wire\"\n                  control={<Radio />}\n                  label=\"Wire\"\n                />\n                <FormControlLabel\n                  value=\"check\"\n                  control={<Radio />}\n                  label=\"Check\"\n                />\n              </RadioGroup>\n            </FormControl>\n            <TextField\n              size=\"small\"\n              id=\"date\"\n              label=\"date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <FormControlLabel\n              value=\"retainer\"\n              control={<Checkbox />}\n              label=\"Retainer\"\n            />\n            <FormControlLabel\n              value=\"payment\"\n              control={<Checkbox />}\n              label=\"Payment\"\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <Typography sx={{ mt: 2, mb: 1 }}> Date Range </Typography>\n              <DateRangePicker\n                calendars={1}\n                value={dateRange}\n                onChange={(newValue) => {\n                  setDateRange(newValue);\n                }}\n                renderInput={(startProps, endProps) => (\n                  <Fragment>\n                    <TextField size=\"small\" {...startProps} />\n                    <Box sx={{ mx: 2 }}> to </Box>\n                    <TextField size=\"small\" {...endProps} />\n                  </Fragment>\n                )}\n              />\n            </LocalizationProvider>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"menu\"\n              label=\"menu\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"menu\"\n              autoComplete=\"menu\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bank_account\"\n              label=\"bank_account\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"bank_account\"\n              autoComplete=\"bank_account\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"payment_method\"\n              label=\"payment_method\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"payment_method\"\n              autoComplete=\"payment_method\"\n            />\n            <FormControl component=\"fieldset\">\n              <RadioGroup\n                row\n                aria-label=\"isPlan\"\n                defaultValue={isPlan}\n                name=\"isPlan\"\n                onChange={(e) => setIsPlan(e)}\n                id=\"isPlan\"\n                autoComplete=\"isPlan\"\n              >\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"Invoice Payment\"\n                />\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Payment Plan\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Box>\n        </Grid>\n        <Grid item xs={12}>\n          <TableContainer>\n            {isPlan ? <PaymentPlan /> : <InvoicePayment />}\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Payment;\n","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Category/ManageCategory.jsx",["270","271","272","273","274","275","276","277","278","279","280","281","282","283"],"/** @format */\n\nimport React, { Fragment, useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { Typography, Grid } from \"@mui/material\";\n\nimport SubCategory from \"./SubCategory\";\nimport Category from \"./Category\";\nimport Classification from \"./Classification\";\n\nconst CONFIG = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n};\n\nconst ManageCategory = () => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const [categoryData, setCategoryData] = useState([]);\n  const [subCategoryData, setSubCategoryData] = useState([]);\n  const [classificationData, setClassificationData] = useState([]);\n\n  // useEffect(() => {\n  //   axios\n  //     .all([\n  //       axios.get(`${process.env.REACT_APP_API_URL}/api/category/`, CONFIG),\n  //       axios.get(`${process.env.REACT_APP_API_URL}/api/category/`, CONFIG),\n  //       axios.get(`${process.env.REACT_APP_API_URL}/api/category/`, CONFIG),\n  //     ])\n  //     .then((response) => {\n  //       setLoading(false);\n  //       setCategoryData(response[0].data);\n  //       setSubCategoryData(response[1].data);\n  //       setClassificationData(response[2].data);\n  //     })\n  //     .catch((error) => {\n  //       setLoading(false);\n  //       setError(\"Opps! Somethingwent wrong. Please Try Again.\");\n  //     });\n  // }, []);\n\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item xs={8}>\n          <Typography component=\"h3\" variant=\"h5\">\n            Manage Category, Sub-category, Classification\n          </Typography>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Grid container spacing={5} mt={1}>\n            <Grid item xs={4}>\n              <Category />\n            </Grid>\n            <Grid item xs={4}>\n              <SubCategory />\n            </Grid>\n            <Grid item xs={4}>\n              <Classification />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ManageCategory;\n","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Category/Category.jsx",["284","285","286","287"],"/** @format */\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport ActionAlerts from \"../../utils/ActionAlerts\";\n\nconst CONFIG = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n};\n\nconst catHandler = (id) => {\n  console.log(id);\n};\n\nconst Category = () => {\n  const [category, setCategory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/category/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setCategory(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/category/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/category/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New category\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Add New Category\"}</DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Category Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? (\n        category.map((data) => (\n          <Box mt={1}>\n            <List>\n              <ListItem disablePadding>\n                <ListItemText>{data.name}</ListItemText>\n                <Button\n                  variant=\"contained\"\n                  value={data.id}\n                  onClick={() => handleDelete(data.id)}\n                  sx={{\n                    borderRadius: \"0.5rem\",\n                    float: \"right\",\n                  }}\n                >\n                  <ClearIcon />\n                </Button>\n              </ListItem>\n            </List>\n          </Box>\n        ))\n      ) : (\n        <Typography>Loading ...</Typography>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Category;\n","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Category/SubCategory.jsx",["288","289","290","291","292"],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Category/Classification.jsx",["293"],"/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport ActionAlerts from \"../../utils/ActionAlerts\";\n\nconst CONFIG = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n};\n\nconst Classification = () => {\n  const [classification, setClassification] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/classification/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setClassification(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/classification/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        setStatus(res.statusText);\n        return <ActionAlerts value={{ status: status }} />;\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/api/classification/`,\n        body,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        return <ActionAlerts value={{ status: res.statusText }} />;\n      })\n      .catch((err) => {\n        FetchData();\n        return <ActionAlerts value={{ status: err.statusText }} />;\n      });\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New Classification\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Add New Classification\"}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Classification Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? (\n        classification.map((data) => (\n          <Box mt={1}>\n            <List>\n              <ListItem disablePadding>\n                <ListItemText>{data.name}</ListItemText>\n                <Button\n                  variant=\"contained\"\n                  value={data.id}\n                  onClick={() => handleDelete(data.id)}\n                  sx={{\n                    borderRadius: \"0.5rem\",\n                    float: \"right\",\n                  }}\n                >\n                  <ClearIcon />\n                </Button>\n              </ListItem>\n            </List>\n          </Box>\n        ))\n      ) : (\n        <Typography>Loading ...</Typography>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Classification;\n","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/utils/ActionAlerts.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/utils/ApiController.js",[],{"ruleId":"294","severity":1,"message":"295","line":8,"column":3,"nodeType":"296","messageId":"297","endLine":8,"endColumn":13},{"ruleId":"294","severity":1,"message":"298","line":9,"column":3,"nodeType":"296","messageId":"297","endLine":9,"endColumn":9},{"ruleId":"294","severity":1,"message":"299","line":10,"column":3,"nodeType":"296","messageId":"297","endLine":10,"endColumn":11},{"ruleId":"300","severity":1,"message":"301","line":378,"column":15,"nodeType":"302","endLine":378,"endColumn":29},{"ruleId":"294","severity":1,"message":"303","line":13,"column":3,"nodeType":"296","messageId":"297","endLine":13,"endColumn":11},{"ruleId":"294","severity":1,"message":"304","line":23,"column":3,"nodeType":"296","messageId":"297","endLine":23,"endColumn":7},{"ruleId":"294","severity":1,"message":"305","line":25,"column":10,"nodeType":"296","messageId":"297","endLine":25,"endColumn":19},{"ruleId":"294","severity":1,"message":"306","line":146,"column":10,"nodeType":"296","messageId":"297","endLine":146,"endColumn":17},{"ruleId":"294","severity":1,"message":"307","line":146,"column":19,"nodeType":"296","messageId":"297","endLine":146,"endColumn":29},{"ruleId":"294","severity":1,"message":"307","line":24,"column":19,"nodeType":"296","messageId":"297","endLine":24,"endColumn":29},{"ruleId":"308","severity":1,"message":"309","line":84,"column":36,"nodeType":"310","messageId":"311","endLine":84,"endColumn":38},{"ruleId":"294","severity":1,"message":"307","line":14,"column":19,"nodeType":"296","messageId":"297","endLine":14,"endColumn":29},{"ruleId":"308","severity":1,"message":"309","line":48,"column":34,"nodeType":"310","messageId":"311","endLine":48,"endColumn":36},{"ruleId":"294","severity":1,"message":"312","line":18,"column":26,"nodeType":"296","messageId":"297","endLine":18,"endColumn":43},{"ruleId":"294","severity":1,"message":"313","line":19,"column":23,"nodeType":"296","messageId":"297","endLine":19,"endColumn":37},{"ruleId":"294","severity":1,"message":"314","line":20,"column":26,"nodeType":"296","messageId":"297","endLine":20,"endColumn":43},{"ruleId":"294","severity":1,"message":"315","line":20,"column":23,"nodeType":"296","messageId":"297","endLine":20,"endColumn":37},{"ruleId":"294","severity":1,"message":"312","line":23,"column":26,"nodeType":"296","messageId":"297","endLine":23,"endColumn":43},{"ruleId":"294","severity":1,"message":"313","line":24,"column":23,"nodeType":"296","messageId":"297","endLine":24,"endColumn":37},{"ruleId":"294","severity":1,"message":"316","line":5,"column":22,"nodeType":"296","messageId":"297","endLine":5,"endColumn":33},{"ruleId":"294","severity":1,"message":"317","line":15,"column":19,"nodeType":"296","messageId":"297","endLine":15,"endColumn":29},{"ruleId":"308","severity":1,"message":"309","line":51,"column":37,"nodeType":"310","messageId":"311","endLine":51,"endColumn":39},{"ruleId":"294","severity":1,"message":"318","line":22,"column":10,"nodeType":"296","messageId":"297","endLine":22,"endColumn":16},{"ruleId":"294","severity":1,"message":"317","line":58,"column":19,"nodeType":"296","messageId":"297","endLine":58,"endColumn":29},{"ruleId":"308","severity":1,"message":"309","line":277,"column":43,"nodeType":"310","messageId":"311","endLine":277,"endColumn":45},{"ruleId":"294","severity":1,"message":"319","line":52,"column":20,"nodeType":"296","messageId":"297","endLine":52,"endColumn":31},{"ruleId":"294","severity":1,"message":"320","line":30,"column":23,"nodeType":"296","messageId":"297","endLine":30,"endColumn":37},{"ruleId":"294","severity":1,"message":"321","line":104,"column":23,"nodeType":"296","messageId":"297","endLine":104,"endColumn":37},{"ruleId":"294","severity":1,"message":"322","line":3,"column":37,"nodeType":"296","messageId":"297","endLine":3,"endColumn":46},{"ruleId":"294","severity":1,"message":"323","line":3,"column":48,"nodeType":"296","messageId":"297","endLine":3,"endColumn":59},{"ruleId":"294","severity":1,"message":"324","line":4,"column":8,"nodeType":"296","messageId":"297","endLine":4,"endColumn":13},{"ruleId":"294","severity":1,"message":"325","line":11,"column":7,"nodeType":"296","messageId":"297","endLine":11,"endColumn":13},{"ruleId":"294","severity":1,"message":"326","line":19,"column":10,"nodeType":"296","messageId":"297","endLine":19,"endColumn":17},{"ruleId":"294","severity":1,"message":"327","line":19,"column":19,"nodeType":"296","messageId":"297","endLine":19,"endColumn":29},{"ruleId":"294","severity":1,"message":"328","line":20,"column":10,"nodeType":"296","messageId":"297","endLine":20,"endColumn":15},{"ruleId":"294","severity":1,"message":"329","line":20,"column":17,"nodeType":"296","messageId":"297","endLine":20,"endColumn":25},{"ruleId":"294","severity":1,"message":"330","line":22,"column":10,"nodeType":"296","messageId":"297","endLine":22,"endColumn":22},{"ruleId":"294","severity":1,"message":"331","line":22,"column":24,"nodeType":"296","messageId":"297","endLine":22,"endColumn":39},{"ruleId":"294","severity":1,"message":"332","line":23,"column":10,"nodeType":"296","messageId":"297","endLine":23,"endColumn":25},{"ruleId":"294","severity":1,"message":"333","line":23,"column":27,"nodeType":"296","messageId":"297","endLine":23,"endColumn":45},{"ruleId":"294","severity":1,"message":"334","line":24,"column":10,"nodeType":"296","messageId":"297","endLine":24,"endColumn":28},{"ruleId":"294","severity":1,"message":"335","line":24,"column":30,"nodeType":"296","messageId":"297","endLine":24,"endColumn":51},{"ruleId":"294","severity":1,"message":"336","line":15,"column":3,"nodeType":"296","messageId":"297","endLine":15,"endColumn":20},{"ruleId":"294","severity":1,"message":"337","line":29,"column":7,"nodeType":"296","messageId":"297","endLine":29,"endColumn":17},{"ruleId":"294","severity":1,"message":"328","line":36,"column":10,"nodeType":"296","messageId":"297","endLine":36,"endColumn":15},{"ruleId":"294","severity":1,"message":"338","line":37,"column":10,"nodeType":"296","messageId":"297","endLine":37,"endColumn":16},{"ruleId":"294","severity":1,"message":"323","line":3,"column":48,"nodeType":"296","messageId":"297","endLine":3,"endColumn":59},{"ruleId":"294","severity":1,"message":"339","line":20,"column":8,"nodeType":"296","messageId":"297","endLine":20,"endColumn":20},{"ruleId":"294","severity":1,"message":"328","line":33,"column":10,"nodeType":"296","messageId":"297","endLine":33,"endColumn":15},{"ruleId":"294","severity":1,"message":"329","line":33,"column":17,"nodeType":"296","messageId":"297","endLine":33,"endColumn":25},{"ruleId":"294","severity":1,"message":"338","line":34,"column":10,"nodeType":"296","messageId":"297","endLine":34,"endColumn":16},{"ruleId":"294","severity":1,"message":"336","line":16,"column":3,"nodeType":"296","messageId":"297","endLine":16,"endColumn":20},"no-unused-vars","'InputLabel' is defined but never used.","Identifier","unusedVar","'Select' is defined but never used.","'MenuItem' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Checkbox' is defined but never used.","'Link' is defined but never used.","'fontStyle' is defined but never used.","'matters' is assigned a value but never used.","'setMatters' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'setCalendarToggle' is assigned a value but never used.","'setTasksToggle' is assigned a value but never used.","'setProgressToggle' is assigned a value but never used.","'setCardsToggle' is assigned a value but never used.","'setProgress' is assigned a value but never used.","'setInvoice' is assigned a value but never used.","'styled' is defined but never used.","'setRedirect' is assigned a value but never used.","'setPaymentData' is assigned a value but never used.","'setInvoiceData' is assigned a value but never used.","'useEffect' is defined but never used.","'useCallback' is defined but never used.","'axios' is defined but never used.","'CONFIG' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'categoryData' is assigned a value but never used.","'setCategoryData' is assigned a value but never used.","'subCategoryData' is assigned a value but never used.","'setSubCategoryData' is assigned a value but never used.","'classificationData' is assigned a value but never used.","'setClassificationData' is assigned a value but never used.","'DialogContentText' is defined but never used.","'catHandler' is assigned a value but never used.","'status' is assigned a value but never used.","'ActionAlerts' is defined but never used."]