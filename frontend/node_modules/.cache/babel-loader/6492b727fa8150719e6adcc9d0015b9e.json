{"ast":null,"code":"var _jsxFileName = \"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Category/ManageCategory.jsx\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Typography, Button, Grid, Box, Checkbox, FormControlLabel } from \"@mui/material\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { Get } from \"../../utils/OperationCURD\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ManageCategory = () => {\n  _s();\n\n  const [category, setCategory] = useState([]);\n  const [subCategory, setSubCategory] = useState([]);\n  const [classification, setClassification] = useState([]);\n  const [catId, setCatId] = useState(0);\n  const [subId, setSubId] = useState(0);\n  const [classId, setClassId] = useState(0);\n  useEffect(() => {\n    const cat = Get(\"category\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h3\",\n          variant: \"h5\",\n          children: \"Manage Category, Sub-category, Classification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          sx: {\n            float: \"right\",\n            borderRadius: \"0.5rem\",\n            paddingInline: \"1.5rem\"\n          },\n          children: \"Delete Checked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 5,\n          mt: 1,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              fullWidth: true,\n              sx: {\n                borderRadius: \"0.5rem\"\n              },\n              children: \"+ New Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), category.map(data => /*#__PURE__*/_jsxDEV(Box, {\n              mt: 1,\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                fullWidth: true,\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  name: data.name,\n                  value: data.name,\n                  id: data.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 23\n                }, this),\n                label: data.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                sx: {\n                  borderRadius: \"0.5rem\",\n                  float: \"right\"\n                },\n                children: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              fullWidth: true,\n              sx: {\n                borderRadius: \"0.5rem\"\n              },\n              children: \"+ New Sub Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), category.map(data => /*#__PURE__*/_jsxDEV(Box, {\n              mt: 1,\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                fullWidth: true,\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  name: data.name,\n                  value: data.name,\n                  id: data.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 23\n                }, this),\n                label: data.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                sx: {\n                  borderRadius: \"0.5rem\",\n                  float: \"right\"\n                },\n                children: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              fullWidth: true,\n              sx: {\n                borderRadius: \"0.5rem\"\n              },\n              children: \"+ New Classification\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), category.map(data => /*#__PURE__*/_jsxDEV(Box, {\n              mt: 1,\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                fullWidth: true,\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  name: data.name,\n                  value: data.name,\n                  id: data.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 23\n                }, this),\n                label: data.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                sx: {\n                  borderRadius: \"0.5rem\",\n                  float: \"right\"\n                },\n                children: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ManageCategory, \"VSbIeRnEK4aElX/O+DrZa47Bfg4=\");\n\n_c = ManageCategory;\nexport default ManageCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManageCategory\");","map":{"version":3,"sources":["/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Category/ManageCategory.jsx"],"names":["React","Fragment","useState","useEffect","axios","Typography","Button","Grid","Box","Checkbox","FormControlLabel","ClearIcon","Get","ManageCategory","category","setCategory","subCategory","setSubCategory","classification","setClassification","catId","setCatId","subId","setSubId","classId","setClassId","cat","float","borderRadius","paddingInline","map","data","name","id"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Typography,\n  Button,\n  Grid,\n  Box,\n  Checkbox,\n  FormControlLabel,\n} from \"@mui/material\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\n\nimport { Get } from \"../../utils/OperationCURD\";\n\nconst ManageCategory = () => {\n  const [category, setCategory] = useState([]);\n  const [subCategory, setSubCategory] = useState([]);\n  const [classification, setClassification] = useState([]);\n\n  const [catId, setCatId] = useState(0);\n  const [subId, setSubId] = useState(0);\n  const [classId, setClassId] = useState(0);\n  useEffect(() => {\n    const cat = Get(\"category\");\n  }, []);\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item xs={8}>\n          <Typography component=\"h3\" variant=\"h5\">\n            Manage Category, Sub-category, Classification\n          </Typography>\n        </Grid>\n        <Grid item xs={4}>\n          <Button\n            variant=\"contained\"\n            sx={{\n              float: \"right\",\n              borderRadius: \"0.5rem\",\n              paddingInline: \"1.5rem\",\n            }}\n          >\n            Delete Checked\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          <Grid container spacing={5} mt={1}>\n            <Grid item xs={4}>\n              <Button\n                variant=\"contained\"\n                fullWidth\n                sx={{\n                  borderRadius: \"0.5rem\",\n                }}\n              >\n                + New Category\n              </Button>\n              {category.map((data) => (\n                <Box mt={1}>\n                  <FormControlLabel\n                    fullWidth\n                    control={\n                      <Checkbox\n                        name={data.name}\n                        value={data.name}\n                        id={data.id}\n                      />\n                    }\n                    label={data.name}\n                  />\n                  <Button\n                    variant=\"contained\"\n                    sx={{\n                      borderRadius: \"0.5rem\",\n                      float: \"right\",\n                    }}\n                  >\n                    <ClearIcon />\n                  </Button>\n                </Box>\n              ))}\n            </Grid>\n            <Grid item xs={4}>\n              <Button\n                variant=\"contained\"\n                fullWidth\n                sx={{\n                  borderRadius: \"0.5rem\",\n                }}\n              >\n                + New Sub Category\n              </Button>\n              {category.map((data) => (\n                <Box mt={1}>\n                  <FormControlLabel\n                    fullWidth\n                    control={\n                      <Checkbox\n                        name={data.name}\n                        value={data.name}\n                        id={data.id}\n                      />\n                    }\n                    label={data.name}\n                  />\n                  <Button\n                    variant=\"contained\"\n                    sx={{\n                      borderRadius: \"0.5rem\",\n                      float: \"right\",\n                    }}\n                  >\n                    <ClearIcon />\n                  </Button>\n                </Box>\n              ))}\n            </Grid>\n            <Grid item xs={4}>\n              <Button\n                variant=\"contained\"\n                fullWidth\n                sx={{\n                  borderRadius: \"0.5rem\",\n                }}\n              >\n                + New Classification\n              </Button>\n              {category.map((data) => (\n                <Box mt={1}>\n                  <FormControlLabel\n                    fullWidth\n                    control={\n                      <Checkbox\n                        name={data.name}\n                        value={data.name}\n                        id={data.id}\n                      />\n                    }\n                    label={data.name}\n                  />\n                  <Button\n                    variant=\"contained\"\n                    sx={{\n                      borderRadius: \"0.5rem\",\n                      float: \"right\",\n                    }}\n                  >\n                    <ClearIcon />\n                  </Button>\n                </Box>\n              ))}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ManageCategory;\n"]},"metadata":{},"sourceType":"module"}