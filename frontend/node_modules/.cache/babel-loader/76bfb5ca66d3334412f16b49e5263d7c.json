{"ast":null,"code":"var _jsxFileName = \"/home/supersis03/Projects/dextera-project/frontend/src/containers/Login.js\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login } from '../actions/auth';\nimport { Avatar, Button, Paper, Grid, Box, Typography, TextField } from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport BackgroundImage from '../asserts/login_light.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  login,\n  isAuthenticated\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  const {\n    username,\n    email,\n    password\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    login(username, email, password);\n  }; //   const continueWithGoogle = async () => {\n  //     try {\n  //         const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?redirect_uri=${process.env.REACT_APP_API_URL}/google`)\n  //         window.location.replace(res.data.authorization_url);\n  //     } catch (err) {\n  //     }\n  // };\n  //   const continueWithFacebook = async () => {\n  //       try {\n  //           const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/facebook/?redirect_uri=${process.env.REACT_APP_API_URL}/facebook`)\n  //           window.location.replace(res.data.authorization_url);\n  //       } catch (err) {\n  //       }\n  //   };\n\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    component: \"main\",\n    sx: {\n      height: '87vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: false,\n      sm: 4,\n      md: 8,\n      sx: {\n        backgroundImage: `url(${BackgroundImage})`,\n        backgroundRepeat: 'no-repeat',\n        backgroundColor: t => t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 8,\n      md: 4,\n      component: Paper,\n      elevation: 6,\n      square: true,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          my: 8,\n          mx: 4,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            m: 1,\n            bgcolor: 'warning.main'\n          },\n          children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          Validate: true,\n          sx: {\n            mt: 1\n          },\n          onSubmit: e => onSubmit(e),\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            variant: \"standard\",\n            id: \"username\",\n            label: \"Username\",\n            name: \"username\",\n            value: username,\n            onChange: e => onChange(e),\n            autoComplete: \"username\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            variant: \"standard\",\n            id: \"email\",\n            label: \"Email Address\",\n            name: \"email\",\n            value: email,\n            onChange: e => onChange(e),\n            autoComplete: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            variant: \"standard\",\n            name: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            value: password,\n            onChange: e => onChange(e),\n            id: \"password\",\n            minLength: \"6\",\n            autoComplete: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/reset-password\",\n              variant: \"body2\",\n              children: \"Forgot password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/signup\",\n              variant: \"body2\",\n              children: \"Don't have an account? Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"f9N0QEmAPs7qiUPvbYdzrShQg0o=\");\n\n_c = Login;\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/supersis03/Projects/dextera-project/frontend/src/containers/Login.js"],"names":["React","useState","Link","Redirect","connect","login","Avatar","Button","Paper","Grid","Box","Typography","TextField","LockOutlinedIcon","BackgroundImage","Login","isAuthenticated","formData","setFormData","username","email","password","onChange","e","target","name","value","onSubmit","preventDefault","height","backgroundImage","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","my","mx","display","flexDirection","alignItems","m","bgcolor","mt","mb","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login } from '../actions/auth';\n\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Box,\n  Typography,\n  TextField,\n} from '@mui/material';\n\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n\nimport BackgroundImage from '../asserts/login_light.png';\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n\n  const { username, email, password } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    login(username, email, password);\n  };\n  //   const continueWithGoogle = async () => {\n  //     try {\n  //         const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?redirect_uri=${process.env.REACT_APP_API_URL}/google`)\n\n  //         window.location.replace(res.data.authorization_url);\n  //     } catch (err) {\n\n  //     }\n  // };\n\n  //   const continueWithFacebook = async () => {\n  //       try {\n  //           const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/facebook/?redirect_uri=${process.env.REACT_APP_API_URL}/facebook`)\n\n  //           window.location.replace(res.data.authorization_url);\n  //       } catch (err) {\n\n  //       }\n  //   };\n  if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <Grid container component=\"main\" sx={{ height: '87vh' }}>\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={8}\n        sx={{\n          backgroundImage: `url(${BackgroundImage})`,\n          backgroundRepeat: 'no-repeat',\n          backgroundColor: (t) =>\n            t.palette.mode === 'light'\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n        }}\n      />\n      <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'warning.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{ mt: 1 }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            {/* csrf_token */}\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              variant=\"standard\"\n              id=\"username\"\n              label=\"Username\"\n              name=\"username\"\n              value={username}\n              onChange={(e) => onChange(e)}\n              autoComplete=\"username\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              variant=\"standard\"\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => onChange(e)}\n              autoComplete=\"email\"\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              variant=\"standard\"\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => onChange(e)}\n              id=\"password\"\n              minLength=\"6\"\n              autoComplete=\"password\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n          </Box>\n          <Grid container>\n            <Grid item xs>\n              <Link to=\"/reset-password\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link to=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n"]},"metadata":{},"sourceType":"module"}