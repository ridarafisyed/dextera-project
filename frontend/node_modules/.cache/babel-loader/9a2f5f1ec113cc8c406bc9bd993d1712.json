{"ast":null,"code":"var _jsxFileName = \"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Dashboards/UserRoles/FirmDashboard.jsx\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React from \"react\"; // import axios from 'axios';\n\nimport { connect } from \"react-redux\";\nimport { Paper, Grid } from \"@mui/material\";\nimport Calender from \"../../../components/Dashboard/Calender\";\nimport Tasks from \"../../../components/Dashboard/Tasks\";\nimport Cards from \"../../../components/Dashboard/Cards\";\nimport { cardData } from \"../../../data/data\";\nimport { useToggle } from \"../../../context/useToggle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FirmDashboard = () => {\n  _s();\n\n  // const [revToggle, setRevToggle] = useToggle(true);\n  // const [empToggle, setEmpToggle] = useToggle(true);\n  const [cardsToggle, setCardsToggle] = useToggle(true); // const [sidebarToggle, setSidebarToggle] = useToggle(true);\n\n  const [calendarToggle, setCalendarToggle] = useToggle(true);\n  const [tasksToggle, setTasksToggle] = useToggle(true); // const [progressToggle, setProgressToggle] = useToggle(true);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        minHeight: \"84vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        px: 2,\n        children: [cardsToggle ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          mt: 2,\n          children: /*#__PURE__*/_jsxDEV(Cards, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this) : null, calendarToggle ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Calender, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this) : null, tasksToggle ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          mt: 3,\n          p: 2,\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Tasks, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(FirmDashboard, \"2OsN1Sr8uJ/QE1qCJoyKII3GMHc=\", false, function () {\n  return [useToggle, useToggle, useToggle];\n});\n\n_c = FirmDashboard;\n\nconst mapStateToProps = state => ({\n  // isAuthenticated: state.auth.isAuthenticated\n  user: state.auth.user\n});\n\nexport default connect(mapStateToProps)(FirmDashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"FirmDashboard\");","map":{"version":3,"sources":["/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Dashboards/UserRoles/FirmDashboard.jsx"],"names":["React","connect","Paper","Grid","Calender","Tasks","Cards","cardData","useToggle","FirmDashboard","cardsToggle","setCardsToggle","calendarToggle","setCalendarToggle","tasksToggle","setTasksToggle","minHeight","mapStateToProps","state","user","auth"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,eAA5B;AAEA,OAAOC,QAAP,MAAqB,wCAArB;AACA,OAAOC,KAAP,MAAkB,qCAAlB;AACA,OAAOC,KAAP,MAAkB,qCAAlB;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,SAASC,SAAT,QAA0B,4BAA1B;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B;AACA;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCH,SAAS,CAAC,IAAD,CAA/C,CAH0B,CAI1B;;AAEA,QAAM,CAACI,cAAD,EAAiBC,iBAAjB,IAAsCL,SAAS,CAAC,IAAD,CAArD;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,SAAS,CAAC,IAAD,CAA/C,CAP0B,CAQ1B;;AAEA,sBACE;AAAA,2BAEE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAE,CAAlB;AAAqB,MAAA,EAAE,EAAE;AAAEQ,QAAAA,SAAS,EAAE;AAAb,OAAzB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,EAAE,EAAE,CAApB;AAAA,mBACGN,WAAW,gBACV,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAAA,iCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADU,GAIR,IALN,EAMGE,cAAc,gBACb,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA,iCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADa,GAIX,IAVN,EAWGE,WAAW,gBACV,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAkB,UAAA,CAAC,EAAE,CAArB;AAAwB,UAAA,EAAE,EAAE,CAA5B;AAAA,iCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADU,GAIR,IAfN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF,mBADF;AAwBD,CAlCD;;GAAML,a;UAGkCD,S,EAGMA,S,EACNA,S;;;KAPlCC,a;;AAoCN,MAAMQ,eAAe,GAAIC,KAAD,KAAY;AAClC;AACAC,EAAAA,IAAI,EAAED,KAAK,CAACE,IAAN,CAAWD;AAFiB,CAAZ,CAAxB;;AAIA,eAAelB,OAAO,CAACgB,eAAD,CAAP,CAAyBR,aAAzB,CAAf","sourcesContent":["/** @format */\n\nimport React from \"react\";\n// import axios from 'axios';\n\nimport { connect } from \"react-redux\";\nimport { Paper, Grid } from \"@mui/material\";\n\nimport Calender from \"../../../components/Dashboard/Calender\";\nimport Tasks from \"../../../components/Dashboard/Tasks\";\nimport Cards from \"../../../components/Dashboard/Cards\";\n\nimport { cardData } from \"../../../data/data\";\n\nimport { useToggle } from \"../../../context/useToggle\";\n\nconst FirmDashboard = () => {\n  // const [revToggle, setRevToggle] = useToggle(true);\n  // const [empToggle, setEmpToggle] = useToggle(true);\n  const [cardsToggle, setCardsToggle] = useToggle(true);\n  // const [sidebarToggle, setSidebarToggle] = useToggle(true);\n\n  const [calendarToggle, setCalendarToggle] = useToggle(true);\n  const [tasksToggle, setTasksToggle] = useToggle(true);\n  // const [progressToggle, setProgressToggle] = useToggle(true);\n\n  return (\n    <>\n      {/*main dashboard section for display  */}\n      <Paper elevation={3} sx={{ minHeight: \"84vh\" }}>\n        <Grid container px={2}>\n          {cardsToggle ? (\n            <Grid item xs={12} mt={2}>\n              <Cards />\n            </Grid>\n          ) : null}\n          {calendarToggle ? (\n            <Grid item xs={4}>\n              <Calender />\n            </Grid>\n          ) : null}\n          {tasksToggle ? (\n            <Grid item mt={3} p={2} xs={8}>\n              <Tasks />\n            </Grid>\n          ) : null}\n        </Grid>\n      </Paper>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated\n  user: state.auth.user,\n});\nexport default connect(mapStateToProps)(FirmDashboard);\n"]},"metadata":{},"sourceType":"module"}