{"ast":null,"code":"import _slicedToArray from\"/home/supersis03/Projects/Dextera/dextera-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/** @format */import React,{Fragment,useState,useEffect,useCallback}from\"react\";import axios from\"axios\";import{Typography,Button,Grid,Box,Checkbox,List,ListItem,ListItemButton,ListItemText,FormControlLabel}from\"@mui/material\";import ClearIcon from\"@mui/icons-material/Clear\";import{Get,DeleteById}from\"../../utils/OperationCURD\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CONFIG={headers:{\"Content-Type\":\"application/json\",Accept:\"application/json\"}};var ManageCategory=function ManageCategory(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),category=_useState2[0],setCategory=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),subCategory=_useState4[0],setSubCategory=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),classification=_useState6[0],setClassification=_useState6[1];var cat=Get(\"category\");var subcat=Get(\"sub-category\");var cls=Get(\"classification\");useEffect(function(){setCategory(cat.data);setSubCategory(subcat.data);setClassification(cls.data);},[]);var subCatHandler=function subCatHandler(id){var link=\"sub-category\";DeleteById(link,id);};var catHandler=function catHandler(id){var link=\"category\";DeleteById(link,id);};var clsHandler=function clsHandler(id){var link=\"classification\";DeleteById(link,id);};return/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsxs(Grid,{container:true,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:8,children:/*#__PURE__*/_jsx(Typography,{component:\"h3\",variant:\"h5\",children:\"Manage Category, Sub-category, Classification\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:5,mt:1,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:4,children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",fullWidth:true,sx:{borderRadius:\"0.5rem\"},children:\"+ New Category\"}),category.map(function(data){return/*#__PURE__*/_jsx(Box,{mt:1,children:/*#__PURE__*/_jsx(List,{children:/*#__PURE__*/_jsxs(ListItem,{disablePadding:true,children:[/*#__PURE__*/_jsx(ListItemText,{children:data.name}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:catHandler(data.id),sx:{borderRadius:\"0.5rem\",float:\"right\"},children:/*#__PURE__*/_jsx(ClearIcon,{})})]})})});})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:4,children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",fullWidth:true,sx:{borderRadius:\"0.5rem\"},children:\"+ New Sub Category\"}),subCategory.map(function(data){return/*#__PURE__*/_jsx(Box,{mt:1,children:/*#__PURE__*/_jsx(List,{children:/*#__PURE__*/_jsxs(ListItem,{disablePadding:true,children:[/*#__PURE__*/_jsx(ListItemText,{children:data.name}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:subCatHandler(data.id),sx:{borderRadius:\"0.5rem\",float:\"right\"},children:/*#__PURE__*/_jsx(ClearIcon,{})})]})})});})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:4,children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",fullWidth:true,sx:{borderRadius:\"0.5rem\"},children:\"+ New Classification\"}),classification.map(function(data){return/*#__PURE__*/_jsx(Box,{mt:1,children:/*#__PURE__*/_jsx(List,{children:/*#__PURE__*/_jsxs(ListItem,{disablePadding:true,children:[/*#__PURE__*/_jsx(ListItemText,{children:data.name}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:clsHandler(data.id),sx:{borderRadius:\"0.5rem\",float:\"right\"},children:/*#__PURE__*/_jsx(ClearIcon,{})})]})})});})]})]})})]})});};export default ManageCategory;","map":{"version":3,"sources":["/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Category/ManageCategory.jsx"],"names":["React","Fragment","useState","useEffect","useCallback","axios","Typography","Button","Grid","Box","Checkbox","List","ListItem","ListItemButton","ListItemText","FormControlLabel","ClearIcon","Get","DeleteById","CONFIG","headers","Accept","ManageCategory","category","setCategory","subCategory","setSubCategory","classification","setClassification","cat","subcat","cls","data","subCatHandler","id","link","catHandler","clsHandler","borderRadius","map","name","float"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React, { Fragment, useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport {\n  Typography,\n  Button,\n  Grid,\n  Box,\n  Checkbox,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemText,\n  FormControlLabel,\n} from \"@mui/material\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\n\nimport { Get, DeleteById } from \"../../utils/OperationCURD\";\nconst CONFIG = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n};\n\nconst ManageCategory = () => {\n  const [category, setCategory] = useState([]);\n  const [subCategory, setSubCategory] = useState([]);\n  const [classification, setClassification] = useState([]);\n\n  const cat = Get(\"category\");\n  const subcat = Get(\"sub-category\");\n  const cls = Get(\"classification\");\n\n  useEffect(() => {\n    setCategory(cat.data);\n    setSubCategory(subcat.data);\n    setClassification(cls.data);\n  }, []);\n\n  const subCatHandler = (id) => {\n    const link = \"sub-category\";\n    DeleteById(link, id);\n  };\n  const catHandler = (id) => {\n    const link = \"category\";\n    DeleteById(link, id);\n  };\n  const clsHandler = (id) => {\n    const link = \"classification\";\n    DeleteById(link, id);\n  };\n\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item xs={8}>\n          <Typography component=\"h3\" variant=\"h5\">\n            Manage Category, Sub-category, Classification\n          </Typography>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Grid container spacing={5} mt={1}>\n            <Grid item xs={4}>\n              <Button\n                variant=\"contained\"\n                fullWidth\n                sx={{\n                  borderRadius: \"0.5rem\",\n                }}\n              >\n                + New Category\n              </Button>\n              {category.map((data) => (\n                <Box mt={1}>\n                  <List>\n                    <ListItem disablePadding>\n                      <ListItemText>{data.name}</ListItemText>\n                      <Button\n                        variant=\"contained\"\n                        onClick={catHandler(data.id)}\n                        sx={{\n                          borderRadius: \"0.5rem\",\n                          float: \"right\",\n                        }}\n                      >\n                        <ClearIcon />\n                      </Button>\n                    </ListItem>\n                  </List>\n                </Box>\n              ))}\n            </Grid>\n            <Grid item xs={4}>\n              <Button\n                variant=\"contained\"\n                fullWidth\n                sx={{\n                  borderRadius: \"0.5rem\",\n                }}\n              >\n                + New Sub Category\n              </Button>\n              {subCategory.map((data) => (\n                <Box mt={1}>\n                  <List>\n                    <ListItem disablePadding>\n                      <ListItemText>{data.name}</ListItemText>\n                      <Button\n                        variant=\"contained\"\n                        onClick={subCatHandler(data.id)}\n                        sx={{\n                          borderRadius: \"0.5rem\",\n                          float: \"right\",\n                        }}\n                      >\n                        <ClearIcon />\n                      </Button>\n                    </ListItem>\n                  </List>\n                </Box>\n              ))}\n            </Grid>\n            <Grid item xs={4}>\n              <Button\n                variant=\"contained\"\n                fullWidth\n                sx={{\n                  borderRadius: \"0.5rem\",\n                }}\n              >\n                + New Classification\n              </Button>\n              {classification.map((data) => (\n                <Box mt={1}>\n                  <List>\n                    <ListItem disablePadding>\n                      <ListItemText>{data.name}</ListItemText>\n                      <Button\n                        variant=\"contained\"\n                        onClick={clsHandler(data.id)}\n                        sx={{\n                          borderRadius: \"0.5rem\",\n                          float: \"right\",\n                        }}\n                      >\n                        <ClearIcon />\n                      </Button>\n                    </ListItem>\n                  </List>\n                </Box>\n              ))}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ManageCategory;\n"]},"metadata":{},"sourceType":"module"}