[{"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/index.js":"1","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/App2.js":"2","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/hocs/Layout.js":"3","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/context/User/index.js":"4","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/hocs/Theme.js":"5","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Sidebar/Sidebar.jsx":"6","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Navbars/Navbar.jsx":"7","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/context/User/reducer.js":"8","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/context/useToggle.jsx":"9","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/styles/styles.jsx":"10","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/NewMatter.jsx":"11","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/MatterDetail.jsx":"12","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Matters/MatterDashboard.jsx":"13","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/Calendar.jsx":"14","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Matters/Matters.jsx":"15","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/Filters.jsx":"16","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/Cards.jsx":"17","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/MatterList.jsx":"18","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/MatterListLong.jsx":"19","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/MatterCards.jsx":"20","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/App.js":"21","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Home.js":"22","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/utils/PrivateRoute.js":"23","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Profile/Profile.js":"24","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Auth/Activate.js":"25","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Auth/Login.js":"26","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Auth/ResetPassword.js":"27","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Auth/ResetPasswordConfirm.js":"28","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Auth/Signup.js":"29","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Dashboards/DashBoard.js":"30","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Dashboards/UserRoles/ClientDashboard.jsx":"31","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Dashboards/UserRoles/AdminDashboard.jsx":"32","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Dashboards/UserRoles/LawyerDashboard.jsx":"33","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Dashboards/UserRoles/FirmDashboard.jsx":"34","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Dashboard/ProgressBar.jsx":"35","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Dashboard/Tasks.jsx":"36","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Dashboard/Calender.jsx":"37","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Dashboard/Cards.jsx":"38","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/data/data.jsx":"39","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/store/actions/auth.js":"40","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/store/actions/types.js":"41","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/store/actions/profile.js":"42","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/store/store.js":"43","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/store/reducers/index.js":"44","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/store/reducers/auth.js":"45"},{"size":214,"mtime":1638446938932,"results":"46","hashOfConfig":"47"},{"size":1055,"mtime":1638446241321,"results":"48","hashOfConfig":"47"},{"size":1227,"mtime":1638607462464,"results":"49","hashOfConfig":"47"},{"size":431,"mtime":1637560398977,"results":"50","hashOfConfig":"47"},{"size":377,"mtime":1636440502354,"results":"51","hashOfConfig":"47"},{"size":4660,"mtime":1638445968887,"results":"52","hashOfConfig":"47"},{"size":3927,"mtime":1638449201224,"results":"53","hashOfConfig":"47"},{"size":276,"mtime":1637560343515,"results":"54","hashOfConfig":"47"},{"size":449,"mtime":1638367042591,"results":"55","hashOfConfig":"47"},{"size":1054,"mtime":1638618118081,"results":"56","hashOfConfig":"47"},{"size":5349,"mtime":1638615634426,"results":"57","hashOfConfig":"47"},{"size":6127,"mtime":1638446047233,"results":"58","hashOfConfig":"47"},{"size":631,"mtime":1638446275072,"results":"59","hashOfConfig":"47"},{"size":1977,"mtime":1638446051937,"results":"60","hashOfConfig":"47"},{"size":687,"mtime":1638446302619,"results":"61","hashOfConfig":"47"},{"size":4066,"mtime":1638446047108,"results":"62","hashOfConfig":"47"},{"size":2094,"mtime":1638446046985,"results":"63","hashOfConfig":"47"},{"size":2687,"mtime":1638446047343,"results":"64","hashOfConfig":"47"},{"size":1809,"mtime":1638446047429,"results":"65","hashOfConfig":"47"},{"size":4296,"mtime":1638618151732,"results":"66","hashOfConfig":"47"},{"size":2511,"mtime":1638607447177,"results":"67","hashOfConfig":"47"},{"size":740,"mtime":1638446649748,"results":"68","hashOfConfig":"47"},{"size":463,"mtime":1636993968666,"results":"69","hashOfConfig":"47"},{"size":15947,"mtime":1638449302531,"results":"70","hashOfConfig":"47"},{"size":1154,"mtime":1638449245127,"results":"71","hashOfConfig":"47"},{"size":4621,"mtime":1638449350138,"results":"72","hashOfConfig":"47"},{"size":3104,"mtime":1638449370642,"results":"73","hashOfConfig":"47"},{"size":3386,"mtime":1638449371454,"results":"74","hashOfConfig":"47"},{"size":7122,"mtime":1638449362722,"results":"75","hashOfConfig":"47"},{"size":1269,"mtime":1638446773047,"results":"76","hashOfConfig":"47"},{"size":1338,"mtime":1638447365711,"results":"77","hashOfConfig":"47"},{"size":6005,"mtime":1638447115464,"results":"78","hashOfConfig":"47"},{"size":6006,"mtime":1638447337226,"results":"79","hashOfConfig":"47"},{"size":1743,"mtime":1638447392184,"results":"80","hashOfConfig":"47"},{"size":564,"mtime":1638444685113,"results":"81","hashOfConfig":"47"},{"size":2656,"mtime":1638444685144,"results":"82","hashOfConfig":"47"},{"size":891,"mtime":1638444684977,"results":"83","hashOfConfig":"47"},{"size":734,"mtime":1638447427174,"results":"84","hashOfConfig":"47"},{"size":272,"mtime":1637476045607,"results":"85","hashOfConfig":"47"},{"size":6785,"mtime":1637997850711,"results":"86","hashOfConfig":"47"},{"size":1435,"mtime":1637672498618,"results":"87","hashOfConfig":"47"},{"size":2673,"mtime":1638174831358,"results":"88","hashOfConfig":"47"},{"size":400,"mtime":1638449247211,"results":"89","hashOfConfig":"47"},{"size":115,"mtime":1636871801359,"results":"90","hashOfConfig":"47"},{"size":2685,"mtime":1638449250535,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"yzhj4x",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"94"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/index.js",[],["190","191"],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/App2.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/hocs/Layout.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/context/User/index.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/hocs/Theme.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Sidebar/Sidebar.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Navbars/Navbar.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/context/User/reducer.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/context/useToggle.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/styles/styles.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/NewMatter.jsx",["192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213"],"/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\n\nconst NewMatter = () => {\n  const [matterData, setMatterData] = useState({\n    contact: \"\",\n    matter_number: \"\",\n    matter_name: \"\",\n    // alerts: \"\",\n    matter_type: \"\",\n    matter_source: \"\",\n    matter_status: \"\",\n    assign_to: \"\",\n    billing_rate: \"\",\n    open: \"\",\n    closed: \"\",\n    total_days: \"\",\n    jurisdiction: \"\",\n    status_limitaion: \"\",\n    opposing_counsel: \"\",\n    where: \"\",\n    when: \"\",\n    involved: \"\",\n    witnesses: \"\",\n    narrative: \"\",\n  });\n\n  const {\n    contact,\n    matter_number,\n    matter_name,\n    // alerts,\n    matter_type,\n    matter_source,\n    matter_status,\n    assign_to,\n    billing_rate,\n    open,\n    closed,\n    total_days,\n    jurisdiction,\n    status_limitaion,\n    opposing_counsel,\n    where,\n    when,\n    involved,\n    witnesses,\n    narrative,\n  } = matterData;\n\n  const onChange = (e) =>\n    setMatterData({ ...matterData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    // login(username, email, password);\n  };\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid Container spacing={2}>\n          <Grid item xs={6}>\n            <TextField\n              margin=\"normal\"\n              fullWidth\n              variant=\"standard\"\n              name=\"contact\"\n              label=\"contact\"\n              type=\"text\"\n              value=\"contact\"\n              onChange={(e) => onChange(e)}\n              id=\"contact\"\n              autoComplete=\"contact\"\n            />\n\n            <TextField\n              margin=\"normal\"\n              variant=\"standard\"\n              name=\"matter_number\"\n              label=\"matter_number\"\n              type=\"text\"\n              value=\"matter_number\"\n              onChange={(e) => onChange(e)}\n              id=\"matter_number\"\n              autoComplete=\"matter_number\"\n              disabled\n            />\n            <TextField\n              margin=\"normal\"\n              variant=\"standard\"\n              name=\"matter_name\"\n              label=\"matter_name\"\n              type=\"text\"\n              value=\"matter_name\"\n              onChange={(e) => onChange(e)}\n              id=\"matter_name\"\n              autoComplete=\"matter_name\"\n            />\n            <TextField\n              margin=\"normal\"\n              variant=\"standard\"\n              name=\"matter_type\"\n              label=\"matter_type\"\n              type=\"text\"\n              value=\"matter_type\"\n              onChange={(e) => onChange(e)}\n              id=\"matter_type\"\n              autoComplete=\"matter_type\"\n            />\n            <TextField\n              margin=\"normal\"\n              variant=\"standard\"\n              name=\"matter_source\"\n              label=\"matter_source\"\n              type=\"text\"\n              value=\"matter_source\"\n              onChange={(e) => onChange(e)}\n              id=\"matter_source\"\n              autoComplete=\"matter_source\"\n            />\n            <TextField\n              margin=\"normal\"\n              variant=\"standard\"\n              name=\"matter_status\"\n              label=\"matter_status\"\n              type=\"text\"\n              value=\"matter_status\"\n              onChange={(e) => onChange(e)}\n              id=\"matter_status\"\n              autoComplete=\"matter_status\"\n            />\n            <TextField\n              margin=\"normal\"\n              variant=\"standard\"\n              name=\"assign_to\"\n              label=\"assign_to\"\n              type=\"text\"\n              value=\"assign_to\"\n              onChange={(e) => onChange(e)}\n              id=\"assign_to\"\n              autoComplete=\"assign_to\"\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              margin=\"normal\"\n              variant=\"standard\"\n              name=\"contact\"\n              label=\"contact\"\n              type=\"text\"\n              value=\"contact\"\n              onChange={(e) => onChange(e)}\n              id=\"contact\"\n              autoComplete=\"contact\"\n            />\n            <TextField\n              margin=\"normal\"\n              variant=\"standard\"\n              name=\"billing_rate\"\n              label=\"billing_rate\"\n              type=\"text\"\n              value=\"billing_rate\"\n              onChange={(e) => onChange(e)}\n              id=\"billing_rate\"\n              autoComplete=\"billing_rate\"\n            />\n            <TextField\n              margin=\"normal\"\n              variant=\"standard\"\n              name=\"open\"\n              label=\"open\"\n              type=\"text\"\n              value=\"open\"\n              onChange={(e) => onChange(e)}\n              id=\"open\"\n              autoComplete=\"open\"\n            />\n            <TextField\n              margin=\"normal\"\n              variant=\"standard\"\n              name=\"closed\"\n              label=\"closed\"\n              type=\"text\"\n              value=\"closed\"\n              onChange={(e) => onChange(e)}\n              id=\"closed\"\n              autoComplete=\"closed\"\n            />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default NewMatter;\n","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/MatterDetail.jsx",["214","215","216","217","218"],"/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { styled } from \"@mui/material/styles\";\n\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n  CardContent,\n  Typography,\n  Card,\n  Grid,\n  Box,\n  List,\n  ListItem,\n  Paper,\n  InputBase,\n  Link,\n} from \"@mui/material\";\nimport { fontStyle } from \"@mui/system\";\n\nconst MatterTask = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography sx={{ fontSize: \"0.8rem\" }}>Upcoming Activity</Typography>\n        <List mt={1} sx={{ fontSize: \"0.75rem\" }}>\n          <ListItem components=\"p\">\n            Date: - Activity - Responsible Party\n          </ListItem>\n          <ListItem components=\"p\">\n            YYYY/MM/DD: - Hearing for MSC - MJJ\n          </ListItem>\n          <ListItem components=\"p\">YYYY/MM/DD: - Trail - KSK</ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Activities = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography sx={{ fontSize: \"0.8rem\" }}>Upcoming Activity</Typography>\n        <List mt={1} sx={{ fontSize: \"0.75rem\" }}>\n          <ListItem components=\"p\">\n            Date: - Activity - Responsible Party\n          </ListItem>\n          <ListItem components=\"p\">\n            YYYY/MM/DD: - Hearing for MSC - MJJ\n          </ListItem>\n          <ListItem components=\"p\">YYYY/MM/DD: - Trail - KSK</ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Cards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                Classification\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                % time spent\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                Matter Completion\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst MatterDetail = () => {\n  const Search = styled(\"div\")(({ theme }) => ({\n    position: \"relative\",\n    borderRadius: \"1.5rem\",\n    backgroundColor: \"#eee\",\n    \"&:hover\": {\n      backgroundColor: \"#ddd\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"40%\",\n  }));\n\n  const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  }));\n\n  const StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: \"inherit\",\n    \"& .MuiInputBase-input\": {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"md\")]: {\n        width: \"20ch\",\n      },\n    },\n  }));\n  const [matters, setMatters] = useState(null);\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item xs={12}>\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n        </Grid>\n        <Grid item xs={12}>\n          <Grid container spacing={2}>\n            <Grid item mt={2} xs={7}>\n              <TableContainer>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>#</TableCell>\n                      <TableCell>Recent Document</TableCell>\n                      <TableCell>Version</TableCell>\n                      <TableCell>Last Open</TableCell>\n                      <TableCell>User</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>1</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>2</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>3</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                  </TableHead>\n                </Table>\n              </TableContainer>\n              <Grid container spacing={3}>\n                <Grid item>\n                  <Activities />\n                </Grid>\n                <Grid item>\n                  <MatterTask />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item mt={2} xs={5}>\n              <Cards />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default MatterDetail;\n","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Matters/MatterDashboard.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/Calendar.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Matters/Matters.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/Filters.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/Cards.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/MatterList.jsx",["219","220"],"/** @format */\n\nimport React, { useState } from \"react\";\n\nimport {\n  Paper,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\n\nconst MatterList = () => {\n  const [redTask, setRedTask] = useState(false);\n  const [greenTask, setGreenTask] = useState(false);\n  const [yellowTask, setYellowTask] = useState(false);\n  const [myTask, setMyTask] = useState(true);\n  const [matters, setMatters] = useState(null);\n\n  // useEffect(() => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   };\n  //   const res = axios.get(\n  //     `${process.env.REACT_APP_API_URL}/api/matter`,\n  //     config,\n  //   );\n  //   setMatters(res.data);\n  // }, []);\n  return (\n    <Box component={Paper} p={2}>\n      <FormGroup aria-label=\"position\" row>\n        <FormControlLabel\n          control={\n            <Checkbox value={myTask} onChange={() => setMyTask(!myTask)} />\n          }\n          label=\"My Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox value={redTask} onChange={() => setRedTask(!redTask)} />\n          }\n          label=\"Red Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              value={greenTask}\n              onChange={() => setGreenTask(!greenTask)}\n            />\n          }\n          label=\"Green Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              value={yellowTask}\n              onChange={() => setYellowTask(!yellowTask)}\n            />\n          }\n          label=\"Yellow Tasks\"\n        />\n      </FormGroup>\n      <Typography component=\"h3\">All Matters Task's List</Typography>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assign To</TableCell>\n            </TableRow>\n            {matters?.map((matter) => {\n              <TableRow id={matter.id}>\n                <TableCell>{matter.type}</TableCell>\n                <TableCell>{matter.name}</TableCell>\n                <TableCell>{matter.lastAction}</TableCell>\n                <TableCell>{matter.nextAction}</TableCell>\n                <TableCell>{matter.assign_to}</TableCell>\n              </TableRow>;\n            })}\n          </TableHead>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n\nexport default MatterList;\n","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/MatterListLong.jsx",["221","222"],"/** @format */\n\nimport React, { useState } from \"react\";\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n} from \"@mui/material\";\n\nconst MatterListLong = () => {\n  const [matters, setMatters] = useState(null);\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Matter Tasks</TableCell>\n            <TableCell>Matter Name</TableCell>\n            <TableCell>Matter Contact</TableCell>\n            <TableCell>Matter Type</TableCell>\n            <TableCell>Bill Rate</TableCell>\n            <TableCell>Last Action</TableCell>\n            <TableCell>Next Action</TableCell>\n            <TableCell>Assigned to</TableCell>\n            <TableCell>Billable</TableCell>\n            <TableCell>Open Invoice</TableCell>\n            <TableCell>Trust Account</TableCell>\n            <TableCell>Last Payment</TableCell>\n          </TableRow>\n          {matters?.map((matter) => {\n            <TableRow id={matter.id}>\n              <TableCell>\n                <Checkbox />\n              </TableCell>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Matter Contact</TableCell>\n              <TableCell>Matter Type</TableCell>\n              <TableCell>Bill Rate</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assigned to</TableCell>\n              <TableCell>Billable</TableCell>\n              <TableCell>Open Invoice</TableCell>\n              <TableCell>Trust Account</TableCell>\n              <TableCell>Last Payment</TableCell>\n            </TableRow>;\n          })}\n        </TableHead>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default MatterListLong;\n","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Matter/MatterCards.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/App.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Home.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/utils/PrivateRoute.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Profile/Profile.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Auth/Activate.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Auth/Login.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Auth/ResetPassword.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Auth/ResetPasswordConfirm.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Auth/Signup.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Dashboards/DashBoard.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Dashboards/UserRoles/ClientDashboard.jsx",["223","224","225"],"/** @format */\n\nimport React from \"react\";\n// import axios from 'axios';\n\nimport { connect } from \"react-redux\";\n\nimport { Paper, Grid } from \"@mui/material\";\n\nimport { useToggle } from \"../../../context/useToggle\";\n\nimport Calender from \"../../../components/Dashboard/Calender\";\nimport ProgressBar from \"../../../components/Dashboard/ProgressBar\";\n\nimport Tasks from \"../../../components/Dashboard/Tasks\";\n\nconst ClientDashboard = () => {\n  const [calendarToggle, setCalendarToggle] = useToggle(true);\n  const [tasksToggle, setTasksToggle] = useToggle(true);\n  const [progressToggle, setProgressToggle] = useToggle(true);\n\n  return (\n    <>\n      <Paper elevation={3} sx={{ minHeight: \"84vh\" }}>\n        <Grid container>\n          {calendarToggle ? (\n            <Grid item xs={4}>\n              <Calender />\n            </Grid>\n          ) : null}\n          {tasksToggle ? (\n            <Grid item mt={3} p={2} xs={8}>\n              <Tasks />\n            </Grid>\n          ) : null}\n          {progressToggle ? (\n            <Grid item xs={12}>\n              <ProgressBar />\n            </Grid>\n          ) : null}\n        </Grid>\n      </Paper>\n    </>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated\n  user: state.auth.user,\n});\nexport default connect(mapStateToProps)(ClientDashboard);\n","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Dashboards/UserRoles/AdminDashboard.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Dashboards/UserRoles/LawyerDashboard.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/containers/Dashboards/UserRoles/FirmDashboard.jsx",["226","227","228"],"/** @format */\n\nimport React from \"react\";\n// import axios from 'axios';\n\nimport { connect } from \"react-redux\";\nimport { Paper, Grid } from \"@mui/material\";\n\nimport Calender from \"../../../components/Dashboard/Calender\";\nimport Tasks from \"../../../components/Dashboard/Tasks\";\nimport Cards from \"../../../components/Dashboard/Cards\";\n\nimport { cardData } from \"../../../data/data\";\n\nimport { useToggle } from \"../../../context/useToggle\";\n\nconst FirmDashboard = () => {\n  // const [revToggle, setRevToggle] = useToggle(true);\n  // const [empToggle, setEmpToggle] = useToggle(true);\n  const [cardsToggle, setCardsToggle] = useToggle(true);\n  // const [sidebarToggle, setSidebarToggle] = useToggle(true);\n\n  const [calendarToggle, setCalendarToggle] = useToggle(true);\n  const [tasksToggle, setTasksToggle] = useToggle(true);\n  // const [progressToggle, setProgressToggle] = useToggle(true);\n\n  return (\n    <>\n      {/*main dashboard section for display  */}\n      <Paper elevation={3} sx={{ minHeight: \"84vh\" }}>\n        <Grid container px={2}>\n          {cardsToggle ? (\n            <Grid item xs={12} mt={2}>\n              {cardData.map((data, i) => (\n                <Cards key={i} data={data} />\n              ))}\n            </Grid>\n          ) : null}\n          {calendarToggle ? (\n            <Grid item xs={4}>\n              <Calender />\n            </Grid>\n          ) : null}\n          {tasksToggle ? (\n            <Grid item mt={3} p={2} xs={8}>\n              <Tasks />\n            </Grid>\n          ) : null}\n        </Grid>\n      </Paper>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated\n  user: state.auth.user,\n});\nexport default connect(mapStateToProps)(FirmDashboard);\n","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Dashboard/ProgressBar.jsx",["229"],"import React,{useState} from 'react'\nimport { LinearProgress, Box , Grid, Typography} from '@mui/material';\n\nconst ProgressBar = () => {\n    const [progress, setProgress] = useState(69);\n    return (\n        <Box paddingLeft={3} paddingRight={3}>\n        <Grid container >\n          <Grid item xs={1}>\n            <Typography>{progress}%</Typography>\n          </Grid>\n          <Grid item xs={11}mt={2}>\n            <LinearProgress variant=\"determinate\" value = {progress} />\n          </Grid>\n          </Grid>\n        </Box>\n    )\n}\n\nexport default ProgressBar\n","/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Dashboard/Tasks.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Dashboard/Calender.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Dashboard/Cards.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/data/data.jsx",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/store/actions/auth.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/store/actions/types.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/store/actions/profile.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/store/store.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/store/reducers/index.js",[],"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/store/reducers/auth.js",[],{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","severity":1,"message":"235","line":8,"column":3,"nodeType":"236","messageId":"237","endLine":8,"endColumn":13},{"ruleId":"234","severity":1,"message":"238","line":9,"column":3,"nodeType":"236","messageId":"237","endLine":9,"endColumn":9},{"ruleId":"234","severity":1,"message":"239","line":10,"column":3,"nodeType":"236","messageId":"237","endLine":10,"endColumn":11},{"ruleId":"234","severity":1,"message":"240","line":38,"column":5,"nodeType":"236","messageId":"237","endLine":38,"endColumn":12},{"ruleId":"234","severity":1,"message":"241","line":39,"column":5,"nodeType":"236","messageId":"237","endLine":39,"endColumn":18},{"ruleId":"234","severity":1,"message":"242","line":40,"column":5,"nodeType":"236","messageId":"237","endLine":40,"endColumn":16},{"ruleId":"234","severity":1,"message":"243","line":42,"column":5,"nodeType":"236","messageId":"237","endLine":42,"endColumn":16},{"ruleId":"234","severity":1,"message":"244","line":43,"column":5,"nodeType":"236","messageId":"237","endLine":43,"endColumn":18},{"ruleId":"234","severity":1,"message":"245","line":44,"column":5,"nodeType":"236","messageId":"237","endLine":44,"endColumn":18},{"ruleId":"234","severity":1,"message":"246","line":45,"column":5,"nodeType":"236","messageId":"237","endLine":45,"endColumn":14},{"ruleId":"234","severity":1,"message":"247","line":46,"column":5,"nodeType":"236","messageId":"237","endLine":46,"endColumn":17},{"ruleId":"234","severity":1,"message":"248","line":47,"column":5,"nodeType":"236","messageId":"237","endLine":47,"endColumn":9},{"ruleId":"234","severity":1,"message":"249","line":48,"column":5,"nodeType":"236","messageId":"237","endLine":48,"endColumn":11},{"ruleId":"234","severity":1,"message":"250","line":49,"column":5,"nodeType":"236","messageId":"237","endLine":49,"endColumn":15},{"ruleId":"234","severity":1,"message":"251","line":50,"column":5,"nodeType":"236","messageId":"237","endLine":50,"endColumn":17},{"ruleId":"234","severity":1,"message":"252","line":51,"column":5,"nodeType":"236","messageId":"237","endLine":51,"endColumn":21},{"ruleId":"234","severity":1,"message":"253","line":52,"column":5,"nodeType":"236","messageId":"237","endLine":52,"endColumn":21},{"ruleId":"234","severity":1,"message":"254","line":53,"column":5,"nodeType":"236","messageId":"237","endLine":53,"endColumn":10},{"ruleId":"234","severity":1,"message":"255","line":54,"column":5,"nodeType":"236","messageId":"237","endLine":54,"endColumn":9},{"ruleId":"234","severity":1,"message":"256","line":55,"column":5,"nodeType":"236","messageId":"237","endLine":55,"endColumn":13},{"ruleId":"234","severity":1,"message":"257","line":56,"column":5,"nodeType":"236","messageId":"237","endLine":56,"endColumn":14},{"ruleId":"234","severity":1,"message":"258","line":57,"column":5,"nodeType":"236","messageId":"237","endLine":57,"endColumn":14},{"ruleId":"234","severity":1,"message":"259","line":13,"column":3,"nodeType":"236","messageId":"237","endLine":13,"endColumn":11},{"ruleId":"234","severity":1,"message":"260","line":23,"column":3,"nodeType":"236","messageId":"237","endLine":23,"endColumn":7},{"ruleId":"234","severity":1,"message":"261","line":25,"column":10,"nodeType":"236","messageId":"237","endLine":25,"endColumn":19},{"ruleId":"234","severity":1,"message":"262","line":146,"column":10,"nodeType":"236","messageId":"237","endLine":146,"endColumn":17},{"ruleId":"234","severity":1,"message":"263","line":146,"column":19,"nodeType":"236","messageId":"237","endLine":146,"endColumn":29},{"ruleId":"234","severity":1,"message":"263","line":24,"column":19,"nodeType":"236","messageId":"237","endLine":24,"endColumn":29},{"ruleId":"264","severity":1,"message":"265","line":84,"column":36,"nodeType":"266","messageId":"267","endLine":84,"endColumn":38},{"ruleId":"234","severity":1,"message":"263","line":14,"column":19,"nodeType":"236","messageId":"237","endLine":14,"endColumn":29},{"ruleId":"264","severity":1,"message":"265","line":33,"column":34,"nodeType":"266","messageId":"267","endLine":33,"endColumn":36},{"ruleId":"234","severity":1,"message":"268","line":18,"column":26,"nodeType":"236","messageId":"237","endLine":18,"endColumn":43},{"ruleId":"234","severity":1,"message":"269","line":19,"column":23,"nodeType":"236","messageId":"237","endLine":19,"endColumn":37},{"ruleId":"234","severity":1,"message":"270","line":20,"column":26,"nodeType":"236","messageId":"237","endLine":20,"endColumn":43},{"ruleId":"234","severity":1,"message":"271","line":20,"column":23,"nodeType":"236","messageId":"237","endLine":20,"endColumn":37},{"ruleId":"234","severity":1,"message":"268","line":23,"column":26,"nodeType":"236","messageId":"237","endLine":23,"endColumn":43},{"ruleId":"234","severity":1,"message":"269","line":24,"column":23,"nodeType":"236","messageId":"237","endLine":24,"endColumn":37},{"ruleId":"234","severity":1,"message":"272","line":5,"column":22,"nodeType":"236","messageId":"237","endLine":5,"endColumn":33},"no-native-reassign",["273"],"no-negated-in-lhs",["274"],"no-unused-vars","'InputLabel' is defined but never used.","Identifier","unusedVar","'Select' is defined but never used.","'MenuItem' is defined but never used.","'contact' is assigned a value but never used.","'matter_number' is assigned a value but never used.","'matter_name' is assigned a value but never used.","'matter_type' is assigned a value but never used.","'matter_source' is assigned a value but never used.","'matter_status' is assigned a value but never used.","'assign_to' is assigned a value but never used.","'billing_rate' is assigned a value but never used.","'open' is assigned a value but never used.","'closed' is assigned a value but never used.","'total_days' is assigned a value but never used.","'jurisdiction' is assigned a value but never used.","'status_limitaion' is assigned a value but never used.","'opposing_counsel' is assigned a value but never used.","'where' is assigned a value but never used.","'when' is assigned a value but never used.","'involved' is assigned a value but never used.","'witnesses' is assigned a value but never used.","'narrative' is assigned a value but never used.","'Checkbox' is defined but never used.","'Link' is defined but never used.","'fontStyle' is defined but never used.","'matters' is assigned a value but never used.","'setMatters' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'setCalendarToggle' is assigned a value but never used.","'setTasksToggle' is assigned a value but never used.","'setProgressToggle' is assigned a value but never used.","'setCardsToggle' is assigned a value but never used.","'setProgress' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]