{"ast":null,"code":"var _jsxFileName = \"/home/supersis03/Projects/dextera-project/frontend/src/components/Profile/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle'; // import {useToggle} from '../../context/useToggle'\n\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Profile = ({\n  user\n}) => {\n  _s();\n\n  const [open, setOpen] = React.useToggle(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleClickOpen,\n      children: \"Open alert dialog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: () => setOpen(open),\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \"Use Google's location service?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpen(open),\n          children: \"Disagree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpen(open),\n          autoFocus: true,\n          children: \"Agree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Profile, \"EkIIPXoQZjsDHfo0WzzBrYXK5fs=\", false, function () {\n  return [React.useToggle];\n});\n\n_c = Profile;\n\nconst mapStateToProps = state => ({\n  // isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user\n});\n\nexport default connect(mapStateToProps)(Profile);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/supersis03/Projects/dextera-project/frontend/src/components/Profile/Profile.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","connect","Profile","user","open","setOpen","useToggle","handleClickOpen","mapStateToProps","state","auth"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,WAAP,MAAwB,2BAAxB,C,CAEA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;;AAEA,MAAMC,OAAO,GAAG,CAAE;AAACC,EAAAA;AAAD,CAAF,KAAc;AAAA;;AAE1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,KAAK,CAACY,SAAN,CAAgB,KAAhB,CAAxB;AAGA,sBACI;AAAA,4BACA,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,UAAhB;AAA2B,MAAA,OAAO,EAAEC,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAII,QAAC,MAAD;AACI,MAAA,IAAI,EAAEH,IADV;AAEI,MAAA,OAAO,EAAE,MAAKC,OAAO,CAACD,IAAD,CAFzB;AAGI,yBAAgB,oBAHpB;AAII,0BAAiB,0BAJrB;AAAA,8BAMI,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,oBAAhB;AAAA,kBACC;AADD;AAAA;AAAA;AAAA;AAAA,cANJ,eASI,QAAC,aAAD;AAAA,+BACA,QAAC,iBAAD;AAAmB,UAAA,EAAE,EAAC,0BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cATJ,eAeI,QAAC,aAAD;AAAA,gCACA,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAKC,OAAO,CAACD,IAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAKC,OAAO,CAACD,IAAD,CAA7B;AAAqC,UAAA,SAAS,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AA6BH,CAlCD;;GAAMF,O;UAEsBR,KAAK,CAACY,S;;;KAF5BJ,O;;AAmCN,MAAMM,eAAe,GAAGC,KAAK,KAAK;AAC9B;AACAN,EAAAA,IAAI,EAACM,KAAK,CAACC,IAAN,CAAWP;AAFc,CAAL,CAA7B;;AAMA,eAAeF,OAAO,CAACO,eAAD,CAAP,CAAyBN,OAAzB,CAAf","sourcesContent":["import React from 'react'\n\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\n// import {useToggle} from '../../context/useToggle'\nimport {connect} from 'react-redux'\n\nconst Profile = ( {user} ) => {\n\n    const [open, setOpen] = React.useToggle(false);\n\n    \n    return (\n        <>\n        <Button variant=\"outlined\" onClick={handleClickOpen}>\n                Open alert dialog\n            </Button>\n            <Dialog\n                open={open}\n                onClose={()=> setOpen(open)}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                {\"Use Google's location service?\"}\n                </DialogTitle>\n                <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    Let Google help apps determine location. This means sending anonymous\n                    location data to Google, even when no apps are running.\n                </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                <Button onClick={()=> setOpen(open)}>Disagree</Button>\n                <Button onClick={()=> setOpen(open)} autoFocus>\n                    Agree\n                </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\nconst mapStateToProps = state => ({\n    // isAuthenticated: state.auth.isAuthenticated,\n    user:state.auth.user\n});\n\n\nexport default connect(mapStateToProps)(Profile);\n"]},"metadata":{},"sourceType":"module"}