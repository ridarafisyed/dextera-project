{"ast":null,"code":"var _jsxFileName = \"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Category/Classification.jsx\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Button, Box, List, ListItem, ListItemText, Typography, Dialog } from \"@mui/material\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport ActionAlerts from \"../../utils/ActionAlerts\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONFIG = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\"\n  }\n};\n\nconst Classification = () => {\n  _s();\n\n  const [classification, setClassification] = useState([]);\n  const [open, setOpen] = useToggle(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n\n  const FetchData = () => {\n    axios.get(`${process.env.REACT_APP_API_URL}/api/classification/`, CONFIG).then(res => {\n      console.log(res.data);\n      setLoading(false);\n      setStatus(res.statusText);\n      setClassification(res.data);\n    }).catch(err => {\n      console.log(err);\n      setLoading(false);\n      setError(err.message);\n    });\n  };\n\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  const clsHandler = id => {\n    axios.delete(`${process.env.REACT_APP_API_URL}/api/classification/${id}/`, CONFIG).then(res => {\n      FetchData();\n      return /*#__PURE__*/_jsxDEV(ActionAlerts, {\n        value: {\n          status: res.statusText,\n          message: \"Success\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this);\n    });\n  };\n\n  const addHandler = () => {\n    return /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: () => setOpen(open),\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: \"home sweet home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: addHandler(),\n      fullWidth: true,\n      sx: {\n        borderRadius: \"0.5rem\"\n      },\n      children: \"+ New Classification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), !loading ? classification.map(data => /*#__PURE__*/_jsxDEV(Box, {\n      mt: 1,\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          disablePadding: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            children: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            value: data.id,\n            onClick: () => clsHandler(data.id),\n            sx: {\n              borderRadius: \"0.5rem\",\n              float: \"right\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Classification, \"ePtERZYxlPG4s6f5u5kLPB6loRU=\", false, function () {\n  return [useToggle];\n});\n\n_c = Classification;\nexport default Classification;\n\nvar _c;\n\n$RefreshReg$(_c, \"Classification\");","map":{"version":3,"sources":["/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Category/Classification.jsx"],"names":["React","Fragment","useState","useEffect","axios","Button","Box","List","ListItem","ListItemText","Typography","Dialog","ClearIcon","ActionAlerts","useToggle","CONFIG","headers","Accept","Classification","classification","setClassification","open","setOpen","loading","setLoading","error","setError","status","setStatus","FetchData","get","process","env","REACT_APP_API_URL","then","res","console","log","data","statusText","catch","err","message","clsHandler","id","delete","addHandler","borderRadius","map","name","float"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport ActionAlerts from \"../../utils/ActionAlerts\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nconst CONFIG = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n};\n\nconst Classification = () => {\n  const [classification, setClassification] = useState([]);\n  const [open, setOpen] = useToggle(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/classification/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setClassification(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const clsHandler = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/classification/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const addHandler = () => {\n    return (\n      <Dialog\n        open={open}\n        onClose={() => setOpen(open)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        home sweet home\n      </Dialog>\n    );\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={addHandler()}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New Classification\n      </Button>\n      {!loading ? (\n        classification.map((data) => (\n          <Box mt={1}>\n            <List>\n              <ListItem disablePadding>\n                <ListItemText>{data.name}</ListItemText>\n                <Button\n                  variant=\"contained\"\n                  value={data.id}\n                  onClick={() => clsHandler(data.id)}\n                  sx={{\n                    borderRadius: \"0.5rem\",\n                    float: \"right\",\n                  }}\n                >\n                  <ClearIcon />\n                </Button>\n              </ListItem>\n            </List>\n          </Box>\n        ))\n      ) : (\n        <Typography>Loading ...</Typography>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Classification;\n"]},"metadata":{},"sourceType":"module"}