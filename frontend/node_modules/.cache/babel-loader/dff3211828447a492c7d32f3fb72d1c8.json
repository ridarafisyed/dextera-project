{"ast":null,"code":"var _jsxFileName = \"/home/supersis03/Projects/dextera-project/frontend/src/containers/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signup } from '../actions/auth';\nimport { Avatar, Button, Paper, Grid, Box, Typography, TextField, FormControlLabel, FormLabel, RadioGroup, Radio } from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport BackgroundImage from '../asserts/signup_light.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signup = ({\n  signup,\n  isAuthenticated\n}) => {\n  _s();\n\n  const [accountCreated, setAccountCreated] = useState(false);\n  const [formData, setFormData] = useState({\n    first_name: '',\n    last_name: '',\n    email: '',\n    password: '',\n    re_password: '',\n    is_firm: '',\n    is_client: ''\n  });\n  const {\n    email,\n    first_name,\n    last_name,\n    password,\n    re_password,\n    is_firm,\n    is_client\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const [isFirm, setIsFirm] = useState(false);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (isFirm === true) {\n      is_firm = true;\n      is_client = false;\n    } else {\n      is_firm = false;\n      is_client = true;\n    }\n\n    if (password === re_password) {\n      signup(email, first_name, last_name, password, re_password, is_firm, is_client);\n      setAccountCreated(true);\n    }\n  };\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 14\n    }, this);\n  }\n\n  if (accountCreated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    component: \"main\",\n    sx: {\n      height: '85vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: false,\n      sm: 4,\n      md: 8,\n      sx: {\n        backgroundImage: `url(${BackgroundImage})`,\n        backgroundRepeat: 'no-repeat',\n        backgroundColor: t => t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 8,\n      md: 4,\n      component: Paper,\n      elevation: 6,\n      square: true,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          my: 8,\n          mx: 4,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            m: 1,\n            bgcolor: 'warning.main'\n          },\n          children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          Validate: true,\n          sx: {\n            mt: 1\n          },\n          onSubmit: e => onSubmit(e),\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                margin: \"normal\",\n                required: true,\n                fullWidth: true,\n                id: \"first_name\",\n                label: \"First Name\",\n                name: \"first_name\",\n                value: first_name,\n                onChange: e => onChange(e),\n                autoComplete: \"first_name\",\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                margin: \"normal\",\n                required: true,\n                fullWidth: true,\n                id: \"last_name\",\n                label: \"Last Name\",\n                name: \"last_name\",\n                autoComplete: \"last_name\",\n                value: last_name,\n                onChange: e => onChange(e),\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              id: \"email\",\n              label: \"Email Address\",\n              name: \"email\",\n              autoComplete: \"email\",\n              value: email,\n              onChange: e => onChange(e),\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              name: \"password\",\n              label: \"Password\",\n              type: \"password\",\n              id: \"password\",\n              autoComplete: \"password\",\n              value: password,\n              onChange: e => onChange(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              name: \"re_password\",\n              label: \"Confirm Password\",\n              type: \"password\",\n              value: re_password,\n              onChange: e => onChange(e),\n              id: \"re_password\",\n              autoComplete: \"re_password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              component: \"legend\",\n              children: \"Account Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n              row: true,\n              value: isFirm,\n              onChange: e = setIsFirm(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: true,\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 65\n                }, this),\n                label: \"Firm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: false,\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 66\n                }, this),\n                label: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              variant: \"body2\",\n              children: \"Already have an account? Sign in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Signup, \"9xZHMfQ+cK5ahsPiyztCYd+hmSg=\");\n\n_c = Signup;\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  signup\n})(Signup);\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/supersis03/Projects/dextera-project/frontend/src/containers/Signup.js"],"names":["React","useState","Link","Redirect","connect","signup","Avatar","Button","Paper","Grid","Box","Typography","TextField","FormControlLabel","FormLabel","RadioGroup","Radio","LockOutlinedIcon","BackgroundImage","Signup","isAuthenticated","accountCreated","setAccountCreated","formData","setFormData","first_name","last_name","email","password","re_password","is_firm","is_client","onChange","e","target","name","value","isFirm","setIsFirm","onSubmit","preventDefault","height","backgroundImage","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","my","mx","display","flexDirection","alignItems","m","bgcolor","mt","mb","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signup } from '../actions/auth';\n\nimport {\n    Avatar,\n    Button, \n    Paper,\n    Grid,\n    Box,\n    Typography,\n    TextField,\n    FormControlLabel,\n    FormLabel,\n    RadioGroup,\n    Radio,\n\n} from '@mui/material';\n\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n\nimport BackgroundImage from '../asserts/signup_light.png'\n\n\nconst Signup = ({ signup, isAuthenticated }) => {\n    const [accountCreated, setAccountCreated] = useState(false);\n    const [formData, setFormData] = useState({\n        first_name: '',\n        last_name: '',\n        email: '',\n        password: '',\n        re_password: '',\n        is_firm: '',\n        is_client:'',\n    });\n\n    const {email, first_name, last_name,  password, re_password, is_firm, is_client } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n    const [isFirm, setIsFirm] = useState(false)\n    \n    const onSubmit = e => {\n        e.preventDefault();\n        if (isFirm === true){\n          is_firm = true\n          is_client = false\n        }\n        else {\n          is_firm = false\n          is_client = true\n        }\n\n        if (password === re_password) {\n\n            signup(email, first_name, last_name,  password, re_password, is_firm, is_client);\n            setAccountCreated(true);\n        }\n    };\n\n    if (isAuthenticated) {\n      return <Redirect to='/' />\n  }\n  if (accountCreated) {\n      return <Redirect to='/login' />\n  }\n\n\n    return (\n        <Grid container component=\"main\" sx={{ height: '85vh' }}>\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={8}\n          sx={{\n            backgroundImage: `url(${BackgroundImage})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundColor: (t) =>\n              t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n          }}\n        />\n          <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >   \n            <Avatar sx={{ m: 1, bgcolor: 'warning.main' }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n            </Typography>\n                <Box component=\"form\" Validate sx={{ mt: 1 }}onSubmit={e => onSubmit(e)}>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12} sm={6}>\n                      <TextField\n                              margin=\"normal\"\n                              required\n                              fullWidth\n                              id=\"first_name\"\n                              label=\"First Name\"\n                              name=\"first_name\"\n                              value={first_name}\n                              onChange={e => onChange(e)}\n                              autoComplete=\"first_name\"\n                              autoFocus\n                          />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                    <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"last_name\"\n                            label=\"Last Name\"\n                            name=\"last_name\"\n                            autoComplete=\"last_name\"\n                            value={last_name}\n                            onChange={e => onChange(e)}\n                            autoFocus\n                        />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} >\n                      <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            value={email}\n                            onChange={e => onChange(e)}\n                            autoFocus\n                        />\n                      </Grid>\n                      <Grid item xs={12} >\n                          <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"password\"\n                            value={password}\n                            onChange={e => onChange(e)}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                          margin=\"normal\"\n                          required\n                          fullWidth\n                          name=\"re_password\"\n                          label=\"Confirm Password\"\n                          type=\"password\"\n                          value={re_password}\n                          onChange={e => onChange(e)}\n                          id=\"re_password\"\n                          autoComplete=\"re_password\"\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <FormLabel component=\"legend\">Account Type</FormLabel>\n                      <RadioGroup row\n                        value = {isFirm}\n                        onChange = {e=setIsFirm(e.target.value)}>\n                        <FormControlLabel value={true} control={<Radio />} label=\"Firm\" />\n                        <FormControlLabel value={false} control={<Radio />} label=\"User\" />\n                      </RadioGroup>\n                    </Grid>\n                    <Button type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{ mt: 3, mb: 2 }}>Register</Button>\n            </Box>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link to='/login' variant=\"body2\">\n                 {\"Already have an account? Sign in\"}\n                </Link>\n              </Grid>\n            </Grid>\n            \n        </Box>\n        </Grid></Grid>\n    );\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { signup })(Signup);\n"]},"metadata":{},"sourceType":"module"}