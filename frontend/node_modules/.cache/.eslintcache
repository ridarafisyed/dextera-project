[{"/home/supersis03/Projects/dextera-project/frontend/src/index.js":"1","/home/supersis03/Projects/dextera-project/frontend/src/App.js":"2","/home/supersis03/Projects/dextera-project/frontend/src/store.js":"3","/home/supersis03/Projects/dextera-project/frontend/src/containers/Home.js":"4","/home/supersis03/Projects/dextera-project/frontend/src/containers/DashBoard.js":"5","/home/supersis03/Projects/dextera-project/frontend/src/containers/Login.js":"6","/home/supersis03/Projects/dextera-project/frontend/src/containers/Signup.js":"7","/home/supersis03/Projects/dextera-project/frontend/src/containers/Activate.js":"8","/home/supersis03/Projects/dextera-project/frontend/src/containers/ResetPasswordConfirm.js":"9","/home/supersis03/Projects/dextera-project/frontend/src/containers/ResetPassword.js":"10","/home/supersis03/Projects/dextera-project/frontend/src/hocs/Layout.js":"11","/home/supersis03/Projects/dextera-project/frontend/src/hocs/Theme.js":"12","/home/supersis03/Projects/dextera-project/frontend/src/actions/auth.js":"13","/home/supersis03/Projects/dextera-project/frontend/src/reducers/index.js":"14","/home/supersis03/Projects/dextera-project/frontend/src/actions/types.js":"15","/home/supersis03/Projects/dextera-project/frontend/src/reducers/auth.js":"16","/home/supersis03/Projects/dextera-project/frontend/src/styles/styles.jsx":"17","/home/supersis03/Projects/dextera-project/frontend/src/components/Dashboard/index.jsx":"18","/home/supersis03/Projects/dextera-project/frontend/src/utils/PrivateRoute.js":"19","/home/supersis03/Projects/dextera-project/frontend/src/components/Profile/Profile.js":"20","/home/supersis03/Projects/dextera-project/frontend/src/components/Navbars/Navbar.jsx":"21","/home/supersis03/Projects/dextera-project/frontend/src/components/Dashboard/components/Calender.jsx":"22","/home/supersis03/Projects/dextera-project/frontend/src/components/Dashboard/components/Tasks.jsx":"23","/home/supersis03/Projects/dextera-project/frontend/src/components/Dashboard/LawyerDashboard.jsx":"24","/home/supersis03/Projects/dextera-project/frontend/src/components/Dashboard/FirmDashboard.jsx":"25","/home/supersis03/Projects/dextera-project/frontend/src/components/Dashboard/AdminDashboard.jsx":"26","/home/supersis03/Projects/dextera-project/frontend/src/components/Dashboard/ClientDashboard.jsx":"27","/home/supersis03/Projects/dextera-project/frontend/src/components/Dashboard/components/ProgressBar.jsx":"28","/home/supersis03/Projects/dextera-project/frontend/src/context/useToggle.jsx":"29","/home/supersis03/Projects/dextera-project/frontend/src/components/Dashboard/components/Cards.jsx":"30","/home/supersis03/Projects/dextera-project/frontend/src/data/data.jsx":"31","/home/supersis03/Projects/dextera-project/frontend/src/components/Matter/MatterDashboard.jsx":"32","/home/supersis03/Projects/dextera-project/frontend/src/components/Sidebar/Sidebar.jsx":"33","/home/supersis03/Projects/dextera-project/frontend/src/context/User/index.js":"34","/home/supersis03/Projects/dextera-project/frontend/src/context/User/reducer.js":"35","/home/supersis03/Projects/dextera-project/frontend/src/actions/profile.js":"36"},{"size":197,"mtime":1635497201397,"results":"37","hashOfConfig":"38"},{"size":2063,"mtime":1637928776924,"results":"39","hashOfConfig":"38"},{"size":389,"mtime":1636615195734,"results":"40","hashOfConfig":"38"},{"size":888,"mtime":1637391309478,"results":"41","hashOfConfig":"38"},{"size":239,"mtime":1637649003458,"results":"42","hashOfConfig":"38"},{"size":4609,"mtime":1637942671411,"results":"43","hashOfConfig":"38"},{"size":8009,"mtime":1637390971875,"results":"44","hashOfConfig":"38"},{"size":1298,"mtime":1637391449986,"results":"45","hashOfConfig":"38"},{"size":4069,"mtime":1637391461948,"results":"46","hashOfConfig":"38"},{"size":3674,"mtime":1636182493629,"results":"47","hashOfConfig":"38"},{"size":1239,"mtime":1637928371994,"results":"48","hashOfConfig":"38"},{"size":377,"mtime":1636440502354,"results":"49","hashOfConfig":"38"},{"size":6785,"mtime":1637997850711,"results":"50","hashOfConfig":"38"},{"size":115,"mtime":1636871801359,"results":"51","hashOfConfig":"38"},{"size":1435,"mtime":1637672498618,"results":"52","hashOfConfig":"38"},{"size":2720,"mtime":1637927899722,"results":"53","hashOfConfig":"38"},{"size":645,"mtime":1637559101481,"results":"54","hashOfConfig":"38"},{"size":1832,"mtime":1637649044223,"results":"55","hashOfConfig":"38"},{"size":463,"mtime":1636993968666,"results":"56","hashOfConfig":"38"},{"size":16035,"mtime":1638008587142,"results":"57","hashOfConfig":"38"},{"size":3921,"mtime":1637928358026,"results":"58","hashOfConfig":"38"},{"size":891,"mtime":1637401966254,"results":"59","hashOfConfig":"38"},{"size":2656,"mtime":1637395365345,"results":"60","hashOfConfig":"38"},{"size":5991,"mtime":1637469506774,"results":"61","hashOfConfig":"38"},{"size":2128,"mtime":1637649067478,"results":"62","hashOfConfig":"38"},{"size":5989,"mtime":1637469485923,"results":"63","hashOfConfig":"38"},{"size":1371,"mtime":1637559678147,"results":"64","hashOfConfig":"38"},{"size":564,"mtime":1637401745222,"results":"65","hashOfConfig":"38"},{"size":456,"mtime":1637561446183,"results":"66","hashOfConfig":"38"},{"size":777,"mtime":1637471806939,"results":"67","hashOfConfig":"38"},{"size":272,"mtime":1637476045607,"results":"68","hashOfConfig":"38"},{"size":2041,"mtime":1637556684092,"results":"69","hashOfConfig":"38"},{"size":3361,"mtime":1637658666370,"results":"70","hashOfConfig":"38"},{"size":431,"mtime":1637560398977,"results":"71","hashOfConfig":"38"},{"size":276,"mtime":1637560343515,"results":"72","hashOfConfig":"38"},{"size":2660,"mtime":1638008657027,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"884ogu",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/supersis03/Projects/dextera-project/frontend/src/index.js",[],"/home/supersis03/Projects/dextera-project/frontend/src/App.js",[],"/home/supersis03/Projects/dextera-project/frontend/src/store.js",[],"/home/supersis03/Projects/dextera-project/frontend/src/containers/Home.js",[],"/home/supersis03/Projects/dextera-project/frontend/src/containers/DashBoard.js",["160"],"/** @format */\n\nimport React from 'react';\nimport { Grid } from '@mui/material';\n\nimport Dashboard from '../components/Dashboard';\n\nconst DashBoard = () => {\n  return (\n    <>\n      <Dashboard />\n    </>\n  );\n};\n\nexport default DashBoard;\n","/home/supersis03/Projects/dextera-project/frontend/src/containers/Login.js",[],"/home/supersis03/Projects/dextera-project/frontend/src/containers/Signup.js",[],"/home/supersis03/Projects/dextera-project/frontend/src/containers/Activate.js",[],"/home/supersis03/Projects/dextera-project/frontend/src/containers/ResetPasswordConfirm.js",[],"/home/supersis03/Projects/dextera-project/frontend/src/containers/ResetPassword.js",[],"/home/supersis03/Projects/dextera-project/frontend/src/hocs/Layout.js",["161","162"],"/** @format */\n\nimport React, { Fragment } from 'react';\nimport Navbar from '../components/Navbars/Navbar';\nimport Sidebar from '../components/Sidebar/Sidebar';\nimport { connect } from 'react-redux';\nimport { checkAuthenticated, load_user } from '../actions/auth';\n\nimport { ThemeProvider } from '@mui/material/styles';\nimport { Grid, Box } from '@mui/material';\nimport theme from './Theme';\nconst Layout = ({\n  checkAuthenticated,\n  load_user,\n  children,\n  isAuthenticated,\n}) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid contianer rowSpacing={2} columnSpacing={2}>\n        <Grid item xs={12}>\n          <Navbar />\n        </Grid>\n\n        {isAuthenticated ? (\n          <Grid container direction=\"row\" wrap=\"nowrap\">\n            <Grid item xs={2} m={3}>\n              <Sidebar />\n            </Grid>\n            <Grid item xs={10} p={3}>\n              {children}\n            </Grid>\n          </Grid>\n        ) : (\n          <Grid item xs={12}>\n            {children}\n          </Grid>\n        )}\n      </Grid>\n    </ThemeProvider>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { checkAuthenticated, load_user })(\n  Layout,\n);\n","/home/supersis03/Projects/dextera-project/frontend/src/hocs/Theme.js",[],"/home/supersis03/Projects/dextera-project/frontend/src/actions/auth.js",[],"/home/supersis03/Projects/dextera-project/frontend/src/reducers/index.js",[],"/home/supersis03/Projects/dextera-project/frontend/src/actions/types.js",[],"/home/supersis03/Projects/dextera-project/frontend/src/reducers/auth.js",["163","164"],"/** @format */\n\nimport {\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  USER_LOADED_SUCCESS,\n  USER_LOADED_FAIL,\n  AUTHENTICATED_SUCCESS,\n  AUTHENTICATED_FAIL,\n  PASSWORD_RESET_SUCCESS,\n  PASSWORD_RESET_FAIL,\n  PASSWORD_RESET_CONFIRM_SUCCESS,\n  PASSWORD_RESET_CONFIRM_FAIL,\n  SIGNUP_SUCCESS,\n  SIGNUP_FAIL,\n  ACTIVATION_SUCCESS,\n  ACTIVATION_FAIL,\n  GOOGLE_AUTH_SUCCESS,\n  GOOGLE_AUTH_FAIL,\n  FACEBOOK_AUTH_SUCCESS,\n  FACEBOOK_AUTH_FAIL,\n  LOGOUT,\n  PROFILE_CREATED_SUCCESS,\n  PROFILE_CREATED_FAIL,\n  PROFILE_LOADED_SUCCESS,\n  PROFILE_LOADED_FAIL,\n  PROFILE_UPDATE_SUCCESS,\n  PROFILE_UPDATE_FAIL,\n} from '../actions/types';\n\nconst initialState = {\n  access: localStorage.getItem('access'),\n  refresh: localStorage.getItem('refresh'),\n  isAuthenticated: null,\n  user: null,\n  profile: null,\n};\n// eslint-disable-next-line\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case AUTHENTICATED_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n      };\n    case LOGIN_SUCCESS:\n\n    case GOOGLE_AUTH_SUCCESS:\n    case FACEBOOK_AUTH_SUCCESS:\n      localStorage.setItem('access', payload.access);\n      localStorage.setItem('refresh', payload.refresh);\n      return {\n        ...state,\n        isAuthenticated: true,\n        access: payload.access,\n        refresh: payload.refresh,\n      };\n    case SIGNUP_SUCCESS:\n    case PROFILE_CREATED_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: false,\n      };\n    case USER_LOADED_SUCCESS:\n      return {\n        ...state,\n        user: payload,\n      };\n    case AUTHENTICATED_FAIL:\n      return {\n        ...state,\n        isAuthenticated: false,\n      };\n    case USER_LOADED_FAIL:\n      return {\n        ...state,\n        user: null,\n      };\n    case PROFILE_LOADED_SUCCESS:\n    case PROFILE_CREATED_SUCCESS:\n    case PROFILE_UPDATE_SUCCESS:\n      return {\n        ...state,\n        profile: payload,\n      };\n    case PROFILE_LOADED_FAIL:\n      return {\n        ...state,\n        profile: null,\n      };\n    case GOOGLE_AUTH_FAIL:\n    case FACEBOOK_AUTH_FAIL:\n    case LOGIN_FAIL:\n    case SIGNUP_FAIL:\n    case LOGOUT:\n      localStorage.removeItem('access');\n      localStorage.removeItem('refresh');\n      return {\n        ...state,\n        access: null,\n        refresh: null,\n        isAuthenticated: false,\n        user: null,\n      };\n    case PASSWORD_RESET_SUCCESS:\n    case PASSWORD_RESET_FAIL:\n    case PASSWORD_RESET_CONFIRM_SUCCESS:\n    case PASSWORD_RESET_CONFIRM_FAIL:\n    case ACTIVATION_SUCCESS:\n    case ACTIVATION_FAIL:\n    case PROFILE_UPDATE_FAIL:\n    case PROFILE_CREATED_FAIL:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n}\n","/home/supersis03/Projects/dextera-project/frontend/src/styles/styles.jsx",[],"/home/supersis03/Projects/dextera-project/frontend/src/components/Dashboard/index.jsx",["165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185"],"/** @format */\n\nimport React, { useState, useEffect, useContext, Fragment } from 'react';\n\nimport { Button, Box, Grid, Paper } from '@mui/material';\n\nimport {\n  TodayRounded,\n  TrendingUp,\n  KeyboardArrowDown,\n  Task,\n  MoneyOff,\n  MonetizationOn,\n  FileCopy,\n  HourglassBottom,\n  AssignmentTurnedIn,\n  Map,\n  AddCircle,\n  TodayOutlined,\n} from '@mui/icons-material';\n\nimport { useToggle } from '../../context/useToggle';\n\nimport { SideBarBtn } from '../../styles/styles';\n// import { UserContext } from '../../context/User';\n\nimport { connect } from 'react-redux';\nimport AdminDashboard from './AdminDashboard';\nimport ClientDashboard from './ClientDashboard';\nimport LawyerDashboard from './LawyerDashboard';\nimport FirmDashboard from './FirmDashboard';\nimport Profile from '../Profile/Profile';\nimport Sidebar from '../Sidebar/Sidebar';\n\n// import DashboardNavbar from '../Navbars/DashboardNavbar';\n\nconst Dashboard = ({ user }) => {\n  // checker type of user\n  const [localuser, setLocalUser] = useState({\n    username: 'Guest',\n    is_firm: true,\n    is_lawyer: false,\n    is_client: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n\n  const dashboardRedirect = () => {\n    if (localuser.is_firm) {\n      return <FirmDashboard />;\n    } else if (localuser.is_client) {\n      return <ClientDashboard />;\n    } else if (localuser.is_lawyer) {\n      return <LawyerDashboard />;\n    } else {\n      return <AdminDashboard />;\n    }\n  };\n  return <>{dashboardRedirect()}</>;\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(Dashboard);\n","/home/supersis03/Projects/dextera-project/frontend/src/utils/PrivateRoute.js",[],"/home/supersis03/Projects/dextera-project/frontend/src/components/Profile/Profile.js",["186","187","188","189","190"],"/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\n\nimport axios from \"axios\";\n\nimport {\n  Button,\n  IconButton,\n  TextField,\n  Checkbox,\n  Grid,\n  FormControlLabel,\n  Tab,\n  Paper,\n  Box,\n} from \"@mui/material\";\nimport { TabList, TabContext, TabPanel } from \"@mui/lab\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { connect } from \"react-redux\";\nimport KeyboardArrowRightIcon from \"@mui/icons-material/KeyboardArrowRight\";\n\nimport { update_profile } from \"../../actions/profile\";\n\nconst Profile = ({ user, profile }) => {\n  const [open, setOpen] = useToggle(false);\n  const [value, setValue] = React.useState(\"1\");\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    mobile: 0,\n    phone: 0,\n    state: \"\",\n    city: \"\",\n    language: \"\",\n    locate: false,\n    search_active: false,\n    law_school: \"\",\n    grad_year: 0,\n    bar_admit_date: \"\",\n    undergrad_school: \"\",\n    undergrad_area: \"\",\n    undergrad_year: \"\",\n    bar_no: \"\",\n    admitted_practice: \"\",\n    practice_time: \"\",\n    longest_tenure: \"\",\n    average_tenure: \"\",\n    current_tenure: \"\",\n    past_bar_companies_no: \"\",\n    primary_area: \"\",\n  });\n  const {\n    username,\n    email,\n    mobile,\n    phone,\n    state,\n    city,\n    language,\n    locate,\n    search_active,\n    law_school,\n    grad_year,\n    bar_admit_date,\n    undergrad_school,\n    undergrad_area,\n    undergrad_year,\n    bar_no,\n    admitted_practice,\n    practice_time,\n    longest_tenure,\n    average_tenure,\n    current_tenure,\n    past_bar_companies_no,\n    primary_area,\n  } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    console.log(\"sumited\");\n\n    update_profile(\n      username,\n      email,\n      mobile,\n      phone,\n      state,\n      city,\n      language,\n      locate,\n      search_active,\n      law_school,\n      grad_year,\n      bar_admit_date,\n      undergrad_school,\n      undergrad_area,\n      undergrad_year,\n      bar_no,\n      admitted_practice,\n      practice_time,\n      longest_tenure,\n      average_tenure,\n      current_tenure,\n      past_bar_companies_no,\n      primary_area,\n    );\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Fragment>\n      <Box p={5}>\n        <Paper elevation={5} sx={{ borderRadius: 3 }}>\n          <TabContext value={value} p={8}>\n            <Box component=\"form\" onSubmit={(e) => onSubmit(e)}>\n              <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n                <TabList\n                  onChange={handleChange}\n                  aria-label=\"lab API tabs example\"\n                >\n                  <Tab label=\"profile\" value=\"1\" />\n                  <Tab label=\"Education\" value=\"2\" />\n                  <Tab label=\"Work History\" value=\"3\" />\n                </TabList>\n              </Box>\n              <TabPanel value=\"1\">\n                <Grid container spacing={2}>\n                  <Grid item sx={12} xs={4}>\n                    <TextField\n                      margin=\"normal\"\n                      fullWidth\n                      variant=\"standard\"\n                      label=\"Username\"\n                      value={username}\n                      id=\"username\"\n                      name=\"username\"\n                      type=\"text\"\n                      onChange={(e) => onChange(e)}\n                      defaultValue={profile.username}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"standard\"\n                      label=\"Mobile #\"\n                      id=\"mobile\"\n                      name=\"mobile\"\n                      type=\"number\"\n                      value={mobile}\n                      onChange={(e) => onChange(e)}\n                      defaultValue={profile.mobile}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"standard\"\n                      label=\"Phone #\"\n                      id=\"phone\"\n                      name=\"phone\"\n                      type=\"text\"\n                      value={phone}\n                      onChange={(e) => onChange(e)}\n                      defaultValue={profile.phone}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"standard\"\n                      label=\"Email #\"\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      value={email}\n                      onChange={(e) => onChange(e)}\n                      defaultValue={profile.email}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"standard\"\n                      label=\"State\"\n                      id=\"state\"\n                      name=\"state\"\n                      type=\"text\"\n                      value={state}\n                      onChange={(e) => onChange(e)}\n                      defaultValue={profile.state}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"standard\"\n                      label=\"City\"\n                      id=\"city\"\n                      name=\"city\"\n                      type=\"text\"\n                      value={city}\n                      onChange={(e) => onChange(e)}\n                      defaultValue={profile.city}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"standard\"\n                      label=\"Language\"\n                      value={language}\n                      id=\"language\"\n                      name=\"language\"\n                      type=\"text\"\n                      onChange={(e) => onChange(e)}\n                      defaultValue={profile.language}\n                    />\n                    <FormControlLabel\n                      fullWidth\n                      control={<Checkbox defaultChecked />}\n                      label=\"Willing to locate\"\n                      labelPlacement=\"start\"\n                      id=\"locate\"\n                      name=\"locate\"\n                      value={locate}\n                      onChange={(e) => onChange(e)}\n                      defaultValue={profile.locate}\n                    />\n                    <FormControlLabel\n                      fullWidth\n                      control={<Checkbox defaultChecked />}\n                      label=\"Search Type (Active/ Passiv)\"\n                      labelPlacement=\"start\"\n                      id=\"search_active\"\n                      name=\"search_active\"\n                      value={search_active}\n                      onChange={(e) => onChange(e)}\n                      defaultValue={profile.search_active}\n                    />\n                    <br />\n                    <br />\n                    <Button\n                      m={5}\n                      variant=\"contained\"\n                      sx={{\n                        float: \"right\",\n                      }}\n                      color=\"success\"\n                      onClick={() => setValue(\"2\")}\n                      endIcon={<KeyboardArrowRightIcon />}\n                    >\n                      Save & Next\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n              <TabPanel value=\"2\">\n                <Grid container spacing={2}>\n                  <Grid item xs={4}>\n                    <TextField\n                      margin=\"normal\"\n                      fullWidth\n                      variant=\"standard\"\n                      label=\"Law School\"\n                      id=\"law_school\"\n                      name=\"law_school\"\n                      value={law_school}\n                      onChange={(e) => onChange(e)}\n                      defaultValue={profile.law_school}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"standard\"\n                      label=\"Grad year\"\n                      id=\"grad_year\"\n                      name=\"grad_year\"\n                      value={grad_year}\n                      onChange={(e) => onChange(e)}\n                      defaultValue={profile.grad_year}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"standard\"\n                      label=\"Bar Admittance Date\"\n                      id=\"bar_admit_date\"\n                      name=\"bar_admit_date\"\n                      value={bar_admit_date}\n                      onChange={(e) => onChange(e)}\n                      defaultValue={profile.bar_admit_date}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"standard\"\n                      label=\"Undergrad school\"\n                      id=\"undergrad_school\"\n                      name=\"undergrad_school\"\n                      value={undergrad_school}\n                      onChange={(e) => onChange(e)}\n                      defaultValue={profile.undergrad_school}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"standard\"\n                      label=\"Undergrade area of study\"\n                      id=\"undergrad_area\"\n                      name=\"undergrad_area\"\n                      value={undergrad_area}\n                      onChange={(e) => onChange(e)}\n                      defaultValue={profile.undergrad_area}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"standard\"\n                      label=\"Undergrade year\"\n                      id=\"undergrad_year\"\n                      name=\"undergrad_year\"\n                      value={undergrad_year}\n                      onChange={(e) => onChange(e)}\n                      defaultValue={profile.undergrad_year}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"standard\"\n                      label=\"Bar\"\n                      id=\"bar_no\"\n                      name=\"bar_no\"\n                      value={bar_no}\n                      onChange={(e) => onChange(e)}\n                      defaultValue={profile.bar_no}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"standard\"\n                      label=\"Admitted practice (state & District)\"\n                      value={admitted_practice}\n                      id=\"admitted_practice\"\n                      name=\"admitted_practice\"\n                      onChange={(e) => onChange(e)}\n                      defaultValue={profile.admitted_practice}\n                    />\n                    <br />\n                    <br />\n                    <Button\n                      variant=\"contained\"\n                      mb={5}\n                      sx={{\n                        float: \"right\",\n                      }}\n                      color=\"success\"\n                      onClick={() => setValue(\"3\")}\n                      endIcon={<KeyboardArrowRightIcon />}\n                    >\n                      Save & Next\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n              <TabPanel value=\"3\">\n                <Grid container spacing={2}>\n                  <Grid item xs={4}>\n                    <TextField\n                      margin=\"normal\"\n                      fullWidth\n                      variant=\"standard\"\n                      label=\"Practive Time (months / years)\"\n                      id=\"practice_time\"\n                      name=\"practice_time\"\n                      value={practice_time}\n                      onChange={(e) => onChange(e)}\n                      defaultValue={profile.practice_time}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"standard\"\n                      label=\"Longest tenure (months / years)\"\n                      id=\"longest_tenure\"\n                      name=\"longest_tenure\"\n                      value={longest_tenure}\n                      onChange={(e) => onChange(e)}\n                      defaultValue={profile.longest_tenure}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"standard\"\n                      label=\"Average tenure (months / years)\"\n                      value={average_tenure}\n                      onChange={(e) => onChange(e)}\n                      id=\"average_tenure\"\n                      name=\"average_tenure\"\n                      defaultValue={profile.average_tenure}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"standard\"\n                      label=\"Time at Current Company (months / years)\"\n                      id=\"current_tenure\"\n                      name=\"current_tenure\"\n                      value={current_tenure}\n                      onChange={(e) => onChange(e)}\n                      defaultValue={profile.current_tenure}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"standard\"\n                      label=\"# of Companies past Bar\"\n                      id=\"past_bar_companies_no\"\n                      name=\"past_bar_companies_no\"\n                      value={past_bar_companies_no}\n                      onChange={(e) => onChange(e)}\n                      defaultValue={profile.past_bar_companies_no}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"standard\"\n                      label=\"Primary areas of Law\"\n                      id=\"primary_area\"\n                      name=\"primary_area\"\n                      value={primary_area}\n                      onChange={(e) => onChange(e)}\n                      defaultValue={profile.primary_area}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <Button\n                      variant=\"contained\"\n                      type=\"submit\"\n                      sx={{\n                        float: \"right\",\n                        marginTop: \"10rem\",\n                      }}\n                      color=\"success\"\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n            </Box>\n          </TabContext>\n        </Paper>\n      </Box>\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n  profile: state.auth.profile,\n});\n\nexport default connect(mapStateToProps)(Profile);\n","/home/supersis03/Projects/dextera-project/frontend/src/components/Navbars/Navbar.jsx",[],"/home/supersis03/Projects/dextera-project/frontend/src/components/Dashboard/components/Calender.jsx",[],"/home/supersis03/Projects/dextera-project/frontend/src/components/Dashboard/components/Tasks.jsx",[],"/home/supersis03/Projects/dextera-project/frontend/src/components/Dashboard/LawyerDashboard.jsx",["191","192"],"/** @format */\n\nimport React, { useState, Fragment } from 'react';\n// import axios from 'axios';\n\nimport { connect } from 'react-redux';\n\nimport { Box, Button, Paper, Grid } from '@mui/material';\nimport { SideBarBtn } from '../../styles/styles';\nimport {\n  TodayRounded,\n  TrendingUp,\n  KeyboardArrowDown,\n  Task,\n  MoneyOff,\n  MonetizationOn,\n  FileCopy,\n  HourglassBottom,\n  AssignmentTurnedIn,\n  Map,\n  AddCircle,\n  TodayOutlined,\n} from '@mui/icons-material';\n\nimport Calender from './components/Calender';\nimport ProgressBar from './components/ProgressBar';\n\nimport { useToggle } from '../../context/useToggle';\n\nimport Tasks from './components/Tasks';\n\nconst LawyerDashboard = () => {\n  const [revToggle, setRevToggle] = useToggle(true);\n  const [empToggle, setEmpToggle] = useToggle(true);\n\n  const [calendarToggle, setCalendarToggle] = useToggle(true);\n  const [tasksToggle, setTasksToggle] = useToggle(true);\n  const [progressToggle, setProgressToggle] = useToggle(true);\n\n  return (\n    <>\n      <Grid item xs={2}>\n        <Paper elevation={3} sx={{ minHeight: '84vh' }}>\n          <Button\n            variant=\"text\"\n            fullWidth\n            endIcon={<KeyboardArrowDown />}\n            sx={{ padding: '0.3em', marginTop: '0.5em', textTransform: 'none' }}\n            onClick={() => setRevToggle(revToggle)}\n          >\n            Components\n          </Button>\n\n          {revToggle ? (\n            <Box>\n              <SideBarBtn\n                variant=\"outlined\"\n                onClick={() => setCalendarToggle(calendarToggle)}\n              >\n                <Grid>\n                  <Grid item>\n                    <TodayRounded fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Calendar</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn\n                variant=\"outlined\"\n                onClick={() => setTasksToggle(tasksToggle)}\n              >\n                <Grid>\n                  <Grid item>\n                    <Task fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Tasks</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn\n                variant=\"outlined\"\n                onClick={() => setProgressToggle(progressToggle)}\n              >\n                <Grid>\n                  <Grid item>\n                    <TrendingUp fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Progress</Grid>\n                </Grid>\n              </SideBarBtn>\n            </Box>\n          ) : null}\n\n          <Button\n            variant=\"text\"\n            fullWidth\n            endIcon={<KeyboardArrowDown />}\n            sx={{ padding: '0.5em', marginTop: '0.5em', textTransform: 'none' }}\n            onClick={() => setEmpToggle(empToggle)}\n          >\n            Employee Performance\n          </Button>\n\n          {empToggle ? (\n            <Box>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <AddCircle fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>New Accounts</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <Map fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Map</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <AssignmentTurnedIn fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Task Completed</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <HourglassBottom fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Billable Hour</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <FileCopy fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Billable v Non-Billable</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <MoneyOff fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Spending</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <MonetizationOn fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Profit & Lost</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <Task fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Tasks</Grid>\n                </Grid>\n              </SideBarBtn>\n            </Box>\n          ) : null}\n        </Paper>\n      </Grid>\n      <Grid item xs={10}>\n        <Paper elevation={3} sx={{ minHeight: '84vh' }}>\n          <Grid container>\n            {calendarToggle ? (\n              <Grid item xs={4}>\n                <Calender />\n              </Grid>\n            ) : null}\n            {tasksToggle ? (\n              <Grid item mt={3} p={2} xs={8}>\n                <Tasks />\n              </Grid>\n            ) : null}\n            {progressToggle ? (\n              <Grid item xs={12}>\n                <ProgressBar />\n              </Grid>\n            ) : null}\n          </Grid>\n        </Paper>\n      </Grid>\n    </>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated\n  user: state.auth.user,\n});\nexport default connect(mapStateToProps)(LawyerDashboard);\n","/home/supersis03/Projects/dextera-project/frontend/src/components/Dashboard/FirmDashboard.jsx",["193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225"],"/** @format */\n\nimport React, { useState, Fragment } from 'react';\n// import axios from 'axios';\n\nimport { connect } from 'react-redux';\n\nimport { Box, Button, Paper, Grid, IconButton, Tab } from '@mui/material';\nimport {} from '@mui/lab';\nimport { SideBarBtn } from '../../styles/styles';\nimport {\n  TodayRounded,\n  TrendingUp,\n  KeyboardArrowDown,\n  Task,\n  MoneyOff,\n  MonetizationOn,\n  FileCopy,\n  HourglassBottom,\n  AssignmentTurnedIn,\n  Map,\n  AddCircle,\n  TodayOutlined,\n  PaymentRounded,\n  ArrowBackIos,\n  ArrowForwardIos,\n} from '@mui/icons-material';\n\nimport Calender from './components/Calender';\nimport Tasks from './components/Tasks';\nimport ProgressBar from './components/ProgressBar';\n\nimport { useToggle } from '../../context/useToggle';\nimport Cards from './components/Cards';\nimport { cardData } from '../../data/data';\n\nconst FirmDashboard = () => {\n  const [revToggle, setRevToggle] = useToggle(true);\n  const [empToggle, setEmpToggle] = useToggle(true);\n  const [cardsToggle, setCardsToggle] = useToggle(true);\n  const [sidebarToggle, setSidebarToggle] = useToggle(true);\n\n  const [calendarToggle, setCalendarToggle] = useToggle(true);\n  const [tasksToggle, setTasksToggle] = useToggle(true);\n  const [progressToggle, setProgressToggle] = useToggle(true);\n\n  return (\n    <>\n      {/*main dashboard section for display  */}\n      <Paper elevation={3} sx={{ minHeight: '84vh' }}>\n        <Grid container px={2}>\n          {cardsToggle ? (\n            <Grid item xs={12} mt={2}>\n              {cardData.map((data, i) => (\n                <Cards key={i} data={data} />\n              ))}\n            </Grid>\n          ) : null}\n          {calendarToggle ? (\n            <Grid item xs={4}>\n              <Calender />\n            </Grid>\n          ) : null}\n          {tasksToggle ? (\n            <Grid item mt={3} p={2} xs={8}>\n              <Tasks />\n            </Grid>\n          ) : null}\n        </Grid>\n      </Paper>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated\n  user: state.auth.user,\n});\nexport default connect(mapStateToProps)(FirmDashboard);\n","/home/supersis03/Projects/dextera-project/frontend/src/components/Dashboard/AdminDashboard.jsx",["226","227"],"/** @format */\n\nimport React, { useState, Fragment } from 'react';\n// import axios from 'axios';\n\nimport { connect } from 'react-redux';\n\nimport { Box, Button, Paper, Grid } from '@mui/material';\nimport { SideBarBtn } from '../../styles/styles';\nimport {\n  TodayRounded,\n  TrendingUp,\n  KeyboardArrowDown,\n  Task,\n  MoneyOff,\n  MonetizationOn,\n  FileCopy,\n  HourglassBottom,\n  AssignmentTurnedIn,\n  Map,\n  AddCircle,\n  TodayOutlined,\n} from '@mui/icons-material';\n\nimport Calender from './components/Calender';\nimport ProgressBar from './components/ProgressBar';\n\nimport { useToggle } from '../../context/useToggle';\n\nimport Tasks from './components/Tasks';\n\nconst AdminDashboard = () => {\n  const [revToggle, setRevToggle] = useToggle(true);\n  const [empToggle, setEmpToggle] = useToggle(true);\n\n  const [calendarToggle, setCalendarToggle] = useToggle(true);\n  const [tasksToggle, setTasksToggle] = useToggle(true);\n  const [progressToggle, setProgressToggle] = useToggle(true);\n\n  return (\n    <>\n      <Grid item xs={2}>\n        <Paper elevation={3} sx={{ minHeight: '84vh' }}>\n          <Button\n            variant=\"text\"\n            fullWidth\n            endIcon={<KeyboardArrowDown />}\n            sx={{ padding: '0.3em', marginTop: '0.5em', textTransform: 'none' }}\n            onClick={() => setRevToggle(revToggle)}\n          >\n            Components\n          </Button>\n\n          {revToggle ? (\n            <Box>\n              <SideBarBtn\n                variant=\"outlined\"\n                onClick={() => setCalendarToggle(calendarToggle)}\n              >\n                <Grid>\n                  <Grid item>\n                    <TodayRounded fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Calendar</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn\n                variant=\"outlined\"\n                onClick={() => setTasksToggle(tasksToggle)}\n              >\n                <Grid>\n                  <Grid item>\n                    <Task fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Tasks</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn\n                variant=\"outlined\"\n                onClick={() => setProgressToggle(progressToggle)}\n              >\n                <Grid>\n                  <Grid item>\n                    <TrendingUp fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Progress</Grid>\n                </Grid>\n              </SideBarBtn>\n            </Box>\n          ) : null}\n\n          <Button\n            variant=\"text\"\n            fullWidth\n            endIcon={<KeyboardArrowDown />}\n            sx={{ padding: '0.5em', marginTop: '0.5em', textTransform: 'none' }}\n            onClick={() => setEmpToggle(empToggle)}\n          >\n            Employee Performance\n          </Button>\n\n          {empToggle ? (\n            <Box>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <AddCircle fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>New Accounts</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <Map fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Map</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <AssignmentTurnedIn fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Task Completed</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <HourglassBottom fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Billable Hour</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <FileCopy fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Billable v Non-Billable</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <MoneyOff fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Spending</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <MonetizationOn fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Profit & Lost</Grid>\n                </Grid>\n              </SideBarBtn>\n              <SideBarBtn variant=\"outlined\">\n                <Grid>\n                  <Grid item>\n                    <Task fontSize=\"medium\" />\n                  </Grid>\n                  <Grid item>Tasks</Grid>\n                </Grid>\n              </SideBarBtn>\n            </Box>\n          ) : null}\n        </Paper>\n      </Grid>\n      <Grid item xs={10}>\n        <Paper elevation={3} sx={{ minHeight: '84vh' }}>\n          <Grid container>\n            {calendarToggle ? (\n              <Grid item xs={4}>\n                <Calender />\n              </Grid>\n            ) : null}\n            {tasksToggle ? (\n              <Grid item mt={3} p={2} xs={8}>\n                <Tasks />\n              </Grid>\n            ) : null}\n            {progressToggle ? (\n              <Grid item xs={12}>\n                <ProgressBar />\n              </Grid>\n            ) : null}\n          </Grid>\n        </Paper>\n      </Grid>\n    </>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated\n  user: state.auth.user,\n});\nexport default connect(mapStateToProps)(AdminDashboard);\n","/home/supersis03/Projects/dextera-project/frontend/src/components/Dashboard/ClientDashboard.jsx",["228","229","230","231","232","233","234"],"/** @format */\n\nimport React, { useState, Fragment } from 'react';\n// import axios from 'axios';\n\nimport { connect } from 'react-redux';\n\nimport { Box, Button, Paper, Grid } from '@mui/material';\nimport { SideBarBtn } from '../../styles/styles';\n\nimport Calender from './components/Calender';\nimport ProgressBar from './components/ProgressBar';\n\nimport { useToggle } from '../../context/useToggle';\n\nimport Tasks from './components/Tasks';\n\nconst ClientDashboard = () => {\n  const [calendarToggle, setCalendarToggle] = useToggle(true);\n  const [tasksToggle, setTasksToggle] = useToggle(true);\n  const [progressToggle, setProgressToggle] = useToggle(true);\n\n  return (\n    <>\n      <Paper elevation={3} sx={{ minHeight: '84vh' }}>\n        <Grid container>\n          {calendarToggle ? (\n            <Grid item xs={4}>\n              <Calender />\n            </Grid>\n          ) : null}\n          {tasksToggle ? (\n            <Grid item mt={3} p={2} xs={8}>\n              <Tasks />\n            </Grid>\n          ) : null}\n          {progressToggle ? (\n            <Grid item xs={12}>\n              <ProgressBar />\n            </Grid>\n          ) : null}\n        </Grid>\n      </Paper>\n    </>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated\n  user: state.auth.user,\n});\nexport default connect(mapStateToProps)(ClientDashboard);\n","/home/supersis03/Projects/dextera-project/frontend/src/components/Dashboard/components/ProgressBar.jsx",["235"],"import React,{useState} from 'react'\nimport { LinearProgress, Box , Grid, Typography} from '@mui/material';\n\nconst ProgressBar = () => {\n    const [progress, setProgress] = useState(69);\n    return (\n        <Box paddingLeft={3} paddingRight={3}>\n        <Grid container >\n          <Grid item xs={1}>\n            <Typography>{progress}%</Typography>\n          </Grid>\n          <Grid item xs={11}mt={2}>\n            <LinearProgress variant=\"determinate\" value = {progress} />\n          </Grid>\n          </Grid>\n        </Box>\n    )\n}\n\nexport default ProgressBar\n","/home/supersis03/Projects/dextera-project/frontend/src/context/useToggle.jsx",["236"],"/** @format */\n\nimport React, { useState, useCallback } from 'react';\n\nexport const useToggle = (initialState) => {\n  const [isToggled, setIsToggled] = useState(initialState);\n\n  // put [setIsToggled] into the useCallback's dependencies array\n  // this value never changes so the callback is not going to be ever re-created\n  const toggle = useCallback(\n    () => setIsToggled((state) => !state),\n    [setIsToggled],\n  );\n\n  return [isToggled, toggle];\n};\n","/home/supersis03/Projects/dextera-project/frontend/src/components/Dashboard/components/Cards.jsx",["237","238","239"],"/** @format */\n\nimport React from 'react';\nimport {\n  Box,\n  Card,\n  CardActions,\n  CardContent,\n  Button,\n  Typography,\n  Paper,\n} from '@mui/material';\n\nconst Cards = ({ data }) => {\n  return (\n    <>\n      <Box\n        key={data.id}\n        component=\"span\"\n        sx={{ display: 'inline-block', mx: '1.5rem' }}\n      >\n        <Card sx={{ minWidth: 275 }}>\n          <CardContent>\n            <Typography\n              sx={{ fontSize: 14 }}\n              color=\"text.secondary\"\n              gutterBottom\n            >\n              {data.title}\n            </Typography>\n            <Typography variant=\"h3\" component=\"h4\">\n              {data.amount}\n            </Typography>\n          </CardContent>\n        </Card>\n      </Box>\n    </>\n  );\n};\n\nexport default Cards;\n","/home/supersis03/Projects/dextera-project/frontend/src/data/data.jsx",[],"/home/supersis03/Projects/dextera-project/frontend/src/components/Matter/MatterDashboard.jsx",["240","241"],"/** @format */\n\nimport { Typography, Box, FormLabel, MenuItem, TextField } from '@mui/material';\nimport React, { Fragment } from 'react';\n\nconst MatterDashboard = () => {\n  const currencies = [\n    {\n      value: 1,\n      label: 'Sam',\n    },\n    {\n      value: 1,\n      label: 'Joe',\n    },\n    {\n      value: 1,\n      label: 'Will',\n    },\n  ];\n  const [currency, setCurrency] = React.useState('EUR');\n\n  const handleChange = (event) => {\n    setCurrency(event.target.value);\n  };\n\n  return (\n    <Fragment>\n      <Box\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          '& > :not(style)': { m: 1 },\n        }}\n      >\n        <TextField\n          id=\"filled-select-currency\"\n          select\n          label=\"Select\"\n          value={currency}\n          onChange={handleChange}\n          helperText=\"Please select your currency\"\n          variant=\"filled\"\n        >\n          {currencies.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n\n        <TextField\n          id=\"filled-select-currency\"\n          select\n          label=\"Select\"\n          value={currency}\n          onChange={handleChange}\n          helperText=\"Please select your currency\"\n          variant=\"filled\"\n        >\n          {currencies.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n\n        <TextField\n          id=\"filled-select-currency\"\n          select\n          label=\"Select\"\n          value={currency}\n          onChange={handleChange}\n          helperText=\"Please select your currency\"\n          variant=\"filled\"\n        >\n          {currencies.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default MatterDashboard;\n","/home/supersis03/Projects/dextera-project/frontend/src/components/Sidebar/Sidebar.jsx",["242","243","244","245","246","247","248"],"/** @format */\n\nimport React, { Fragment, useContext } from 'react';\nimport { Button, Box, Grid, Paper } from '@mui/material';\n\nimport {\n  TodayRounded,\n  TrendingUp,\n  KeyboardArrowDown,\n  Task,\n  MoneyOff,\n  MonetizationOn,\n  FileCopy,\n  HourglassBottom,\n  AssignmentTurnedIn,\n  Map,\n  AddCircle,\n  TodayOutlined,\n} from '@mui/icons-material';\n\nimport { useToggle } from '../../context/useToggle';\n\nimport { SideBarBtn } from '../../styles/styles';\nimport { Link } from 'react-router-dom';\n// import { UserContext } from '../../context/User';\n\nconst Sidebar = () => {\n  const [revToggle, setRevToggle] = useToggle(true);\n  const [empToggle, setEmpToggle] = useToggle(true);\n\n  // const [state, dispatch] = useContext(UserContext);\n  return (\n    <Paper elevation={3}>\n      <Button\n        variant=\"text\"\n        fullWidth\n        endIcon={<KeyboardArrowDown />}\n        sx={{ padding: '0.5em', marginTop: '0.5em', textTransform: 'none' }}\n        onClick={() => setEmpToggle(empToggle)}\n      >\n        Employee Performance\n      </Button>\n      {empToggle ? (\n        <Box>\n          <SideBarBtn variant=\"outlined\">\n            <Grid>\n              <Box component={Link} to=\"/dashboard\">\n                <Grid item>\n                  <AddCircle fontSize=\"medium\" />\n                </Grid>\n                <Grid item>DashBoard</Grid>\n              </Box>\n            </Grid>\n          </SideBarBtn>\n          <SideBarBtn variant=\"outlined\">\n            <Grid>\n              <Box component={Link} to=\"/Profile\">\n                <Grid item>\n                  <Map fontSize=\"medium\" />\n                </Grid>\n                <Grid item>Profile</Grid>\n              </Box>\n            </Grid>\n          </SideBarBtn>\n          <SideBarBtn variant=\"outlined\">\n            <Grid>\n              <Box component={Link} to=\"/matters\">\n                <Grid item>\n                  <AssignmentTurnedIn fontSize=\"medium\" />\n                </Grid>\n                <Grid item>Matters</Grid>\n              </Box>\n            </Grid>\n          </SideBarBtn>\n          <SideBarBtn variant=\"outlined\">\n            <Grid>\n              <Grid item>\n                <HourglassBottom fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Billable Hour</Grid>\n            </Grid>\n          </SideBarBtn>\n          <SideBarBtn variant=\"outlined\">\n            <Grid>\n              <Grid item>\n                <FileCopy fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Billable v Non-Billable</Grid>\n            </Grid>\n          </SideBarBtn>\n          <SideBarBtn variant=\"outlined\">\n            <Grid>\n              <Grid item>\n                <MoneyOff fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Spending</Grid>\n            </Grid>\n          </SideBarBtn>\n          <SideBarBtn variant=\"outlined\">\n            <Grid>\n              <Grid item>\n                <MonetizationOn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Profit & Lost</Grid>\n            </Grid>\n          </SideBarBtn>\n          <SideBarBtn variant=\"outlined\">\n            <Grid>\n              <Grid item>\n                <Task fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Tasks</Grid>\n            </Grid>\n          </SideBarBtn>\n        </Box>\n      ) : null}\n    </Paper>\n  );\n};\n\nexport default Sidebar;\n","/home/supersis03/Projects/dextera-project/frontend/src/context/User/index.js",[],"/home/supersis03/Projects/dextera-project/frontend/src/context/User/reducer.js",[],"/home/supersis03/Projects/dextera-project/frontend/src/actions/profile.js",[],{"ruleId":"249","severity":1,"message":"250","line":4,"column":10,"nodeType":"251","messageId":"252","endLine":4,"endColumn":14},{"ruleId":"249","severity":1,"message":"253","line":3,"column":17,"nodeType":"251","messageId":"252","endLine":3,"endColumn":25},{"ruleId":"249","severity":1,"message":"254","line":10,"column":16,"nodeType":"251","messageId":"252","endLine":10,"endColumn":19},{"ruleId":"255","severity":1,"message":"256","line":50,"column":5,"nodeType":"257","messageId":"258","endLine":50,"endColumn":30},{"ruleId":"259","severity":1,"message":"260","line":82,"column":5,"nodeType":"257","messageId":"261","endLine":82,"endColumn":34},{"ruleId":"249","severity":1,"message":"262","line":3,"column":38,"nodeType":"251","messageId":"252","endLine":3,"endColumn":48},{"ruleId":"249","severity":1,"message":"263","line":5,"column":10,"nodeType":"251","messageId":"252","endLine":5,"endColumn":16},{"ruleId":"249","severity":1,"message":"254","line":5,"column":18,"nodeType":"251","messageId":"252","endLine":5,"endColumn":21},{"ruleId":"249","severity":1,"message":"250","line":5,"column":23,"nodeType":"251","messageId":"252","endLine":5,"endColumn":27},{"ruleId":"249","severity":1,"message":"264","line":5,"column":29,"nodeType":"251","messageId":"252","endLine":5,"endColumn":34},{"ruleId":"249","severity":1,"message":"265","line":8,"column":3,"nodeType":"251","messageId":"252","endLine":8,"endColumn":15},{"ruleId":"249","severity":1,"message":"266","line":9,"column":3,"nodeType":"251","messageId":"252","endLine":9,"endColumn":13},{"ruleId":"249","severity":1,"message":"267","line":10,"column":3,"nodeType":"251","messageId":"252","endLine":10,"endColumn":20},{"ruleId":"249","severity":1,"message":"268","line":11,"column":3,"nodeType":"251","messageId":"252","endLine":11,"endColumn":7},{"ruleId":"249","severity":1,"message":"269","line":12,"column":3,"nodeType":"251","messageId":"252","endLine":12,"endColumn":11},{"ruleId":"249","severity":1,"message":"270","line":13,"column":3,"nodeType":"251","messageId":"252","endLine":13,"endColumn":17},{"ruleId":"249","severity":1,"message":"271","line":14,"column":3,"nodeType":"251","messageId":"252","endLine":14,"endColumn":11},{"ruleId":"249","severity":1,"message":"272","line":15,"column":3,"nodeType":"251","messageId":"252","endLine":15,"endColumn":18},{"ruleId":"249","severity":1,"message":"273","line":16,"column":3,"nodeType":"251","messageId":"252","endLine":16,"endColumn":21},{"ruleId":"249","severity":1,"message":"274","line":17,"column":3,"nodeType":"251","messageId":"252","endLine":17,"endColumn":6},{"ruleId":"249","severity":1,"message":"275","line":18,"column":3,"nodeType":"251","messageId":"252","endLine":18,"endColumn":12},{"ruleId":"249","severity":1,"message":"276","line":19,"column":3,"nodeType":"251","messageId":"252","endLine":19,"endColumn":16},{"ruleId":"249","severity":1,"message":"277","line":22,"column":10,"nodeType":"251","messageId":"252","endLine":22,"endColumn":19},{"ruleId":"249","severity":1,"message":"278","line":24,"column":10,"nodeType":"251","messageId":"252","endLine":24,"endColumn":20},{"ruleId":"249","severity":1,"message":"279","line":32,"column":8,"nodeType":"251","messageId":"252","endLine":32,"endColumn":15},{"ruleId":"249","severity":1,"message":"280","line":33,"column":8,"nodeType":"251","messageId":"252","endLine":33,"endColumn":15},{"ruleId":"249","severity":1,"message":"281","line":3,"column":37,"nodeType":"251","messageId":"252","endLine":3,"endColumn":46},{"ruleId":"249","severity":1,"message":"282","line":5,"column":8,"nodeType":"251","messageId":"252","endLine":5,"endColumn":13},{"ruleId":"249","severity":1,"message":"283","line":9,"column":3,"nodeType":"251","messageId":"252","endLine":9,"endColumn":13},{"ruleId":"249","severity":1,"message":"284","line":26,"column":10,"nodeType":"251","messageId":"252","endLine":26,"endColumn":14},{"ruleId":"249","severity":1,"message":"285","line":26,"column":16,"nodeType":"251","messageId":"252","endLine":26,"endColumn":23},{"ruleId":"249","severity":1,"message":"286","line":3,"column":17,"nodeType":"251","messageId":"252","endLine":3,"endColumn":25},{"ruleId":"249","severity":1,"message":"276","line":22,"column":3,"nodeType":"251","messageId":"252","endLine":22,"endColumn":16},{"ruleId":"249","severity":1,"message":"286","line":3,"column":17,"nodeType":"251","messageId":"252","endLine":3,"endColumn":25},{"ruleId":"249","severity":1,"message":"254","line":8,"column":10,"nodeType":"251","messageId":"252","endLine":8,"endColumn":13},{"ruleId":"249","severity":1,"message":"263","line":8,"column":15,"nodeType":"251","messageId":"252","endLine":8,"endColumn":21},{"ruleId":"249","severity":1,"message":"283","line":8,"column":36,"nodeType":"251","messageId":"252","endLine":8,"endColumn":46},{"ruleId":"249","severity":1,"message":"287","line":8,"column":48,"nodeType":"251","messageId":"252","endLine":8,"endColumn":51},{"ruleId":"249","severity":1,"message":"278","line":10,"column":10,"nodeType":"251","messageId":"252","endLine":10,"endColumn":20},{"ruleId":"249","severity":1,"message":"265","line":12,"column":3,"nodeType":"251","messageId":"252","endLine":12,"endColumn":15},{"ruleId":"249","severity":1,"message":"266","line":13,"column":3,"nodeType":"251","messageId":"252","endLine":13,"endColumn":13},{"ruleId":"249","severity":1,"message":"267","line":14,"column":3,"nodeType":"251","messageId":"252","endLine":14,"endColumn":20},{"ruleId":"249","severity":1,"message":"268","line":15,"column":3,"nodeType":"251","messageId":"252","endLine":15,"endColumn":7},{"ruleId":"249","severity":1,"message":"269","line":16,"column":3,"nodeType":"251","messageId":"252","endLine":16,"endColumn":11},{"ruleId":"249","severity":1,"message":"270","line":17,"column":3,"nodeType":"251","messageId":"252","endLine":17,"endColumn":17},{"ruleId":"249","severity":1,"message":"271","line":18,"column":3,"nodeType":"251","messageId":"252","endLine":18,"endColumn":11},{"ruleId":"249","severity":1,"message":"272","line":19,"column":3,"nodeType":"251","messageId":"252","endLine":19,"endColumn":18},{"ruleId":"249","severity":1,"message":"273","line":20,"column":3,"nodeType":"251","messageId":"252","endLine":20,"endColumn":21},{"ruleId":"249","severity":1,"message":"274","line":21,"column":3,"nodeType":"251","messageId":"252","endLine":21,"endColumn":6},{"ruleId":"249","severity":1,"message":"275","line":22,"column":3,"nodeType":"251","messageId":"252","endLine":22,"endColumn":12},{"ruleId":"249","severity":1,"message":"276","line":23,"column":3,"nodeType":"251","messageId":"252","endLine":23,"endColumn":16},{"ruleId":"249","severity":1,"message":"288","line":24,"column":3,"nodeType":"251","messageId":"252","endLine":24,"endColumn":17},{"ruleId":"249","severity":1,"message":"289","line":25,"column":3,"nodeType":"251","messageId":"252","endLine":25,"endColumn":15},{"ruleId":"249","severity":1,"message":"290","line":26,"column":3,"nodeType":"251","messageId":"252","endLine":26,"endColumn":18},{"ruleId":"249","severity":1,"message":"291","line":31,"column":8,"nodeType":"251","messageId":"252","endLine":31,"endColumn":19},{"ruleId":"249","severity":1,"message":"292","line":38,"column":10,"nodeType":"251","messageId":"252","endLine":38,"endColumn":19},{"ruleId":"249","severity":1,"message":"293","line":38,"column":21,"nodeType":"251","messageId":"252","endLine":38,"endColumn":33},{"ruleId":"249","severity":1,"message":"294","line":39,"column":10,"nodeType":"251","messageId":"252","endLine":39,"endColumn":19},{"ruleId":"249","severity":1,"message":"295","line":39,"column":21,"nodeType":"251","messageId":"252","endLine":39,"endColumn":33},{"ruleId":"249","severity":1,"message":"296","line":40,"column":23,"nodeType":"251","messageId":"252","endLine":40,"endColumn":37},{"ruleId":"249","severity":1,"message":"297","line":41,"column":10,"nodeType":"251","messageId":"252","endLine":41,"endColumn":23},{"ruleId":"249","severity":1,"message":"298","line":41,"column":25,"nodeType":"251","messageId":"252","endLine":41,"endColumn":41},{"ruleId":"249","severity":1,"message":"299","line":43,"column":26,"nodeType":"251","messageId":"252","endLine":43,"endColumn":43},{"ruleId":"249","severity":1,"message":"300","line":44,"column":23,"nodeType":"251","messageId":"252","endLine":44,"endColumn":37},{"ruleId":"249","severity":1,"message":"301","line":45,"column":10,"nodeType":"251","messageId":"252","endLine":45,"endColumn":24},{"ruleId":"249","severity":1,"message":"302","line":45,"column":26,"nodeType":"251","messageId":"252","endLine":45,"endColumn":43},{"ruleId":"249","severity":1,"message":"286","line":3,"column":17,"nodeType":"251","messageId":"252","endLine":3,"endColumn":25},{"ruleId":"249","severity":1,"message":"276","line":22,"column":3,"nodeType":"251","messageId":"252","endLine":22,"endColumn":16},{"ruleId":"249","severity":1,"message":"286","line":3,"column":17,"nodeType":"251","messageId":"252","endLine":3,"endColumn":25},{"ruleId":"249","severity":1,"message":"254","line":8,"column":10,"nodeType":"251","messageId":"252","endLine":8,"endColumn":13},{"ruleId":"249","severity":1,"message":"263","line":8,"column":15,"nodeType":"251","messageId":"252","endLine":8,"endColumn":21},{"ruleId":"249","severity":1,"message":"278","line":9,"column":10,"nodeType":"251","messageId":"252","endLine":9,"endColumn":20},{"ruleId":"249","severity":1,"message":"299","line":19,"column":26,"nodeType":"251","messageId":"252","endLine":19,"endColumn":43},{"ruleId":"249","severity":1,"message":"300","line":20,"column":23,"nodeType":"251","messageId":"252","endLine":20,"endColumn":37},{"ruleId":"249","severity":1,"message":"302","line":21,"column":26,"nodeType":"251","messageId":"252","endLine":21,"endColumn":43},{"ruleId":"249","severity":1,"message":"303","line":5,"column":22,"nodeType":"251","messageId":"252","endLine":5,"endColumn":33},{"ruleId":"249","severity":1,"message":"304","line":3,"column":8,"nodeType":"251","messageId":"252","endLine":3,"endColumn":13},{"ruleId":"249","severity":1,"message":"305","line":7,"column":3,"nodeType":"251","messageId":"252","endLine":7,"endColumn":14},{"ruleId":"249","severity":1,"message":"263","line":9,"column":3,"nodeType":"251","messageId":"252","endLine":9,"endColumn":9},{"ruleId":"249","severity":1,"message":"264","line":11,"column":3,"nodeType":"251","messageId":"252","endLine":11,"endColumn":8},{"ruleId":"249","severity":1,"message":"306","line":3,"column":10,"nodeType":"251","messageId":"252","endLine":3,"endColumn":20},{"ruleId":"249","severity":1,"message":"307","line":3,"column":27,"nodeType":"251","messageId":"252","endLine":3,"endColumn":36},{"ruleId":"249","severity":1,"message":"253","line":3,"column":17,"nodeType":"251","messageId":"252","endLine":3,"endColumn":25},{"ruleId":"249","severity":1,"message":"262","line":3,"column":27,"nodeType":"251","messageId":"252","endLine":3,"endColumn":37},{"ruleId":"249","severity":1,"message":"265","line":7,"column":3,"nodeType":"251","messageId":"252","endLine":7,"endColumn":15},{"ruleId":"249","severity":1,"message":"266","line":8,"column":3,"nodeType":"251","messageId":"252","endLine":8,"endColumn":13},{"ruleId":"249","severity":1,"message":"276","line":18,"column":3,"nodeType":"251","messageId":"252","endLine":18,"endColumn":16},{"ruleId":"249","severity":1,"message":"292","line":28,"column":10,"nodeType":"251","messageId":"252","endLine":28,"endColumn":19},{"ruleId":"249","severity":1,"message":"293","line":28,"column":21,"nodeType":"251","messageId":"252","endLine":28,"endColumn":33},"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'Fragment' is defined but never used.","'Box' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-duplicate-case","Duplicate case label.","unexpected","'useContext' is defined but never used.","'Button' is defined but never used.","'Paper' is defined but never used.","'TodayRounded' is defined but never used.","'TrendingUp' is defined but never used.","'KeyboardArrowDown' is defined but never used.","'Task' is defined but never used.","'MoneyOff' is defined but never used.","'MonetizationOn' is defined but never used.","'FileCopy' is defined but never used.","'HourglassBottom' is defined but never used.","'AssignmentTurnedIn' is defined but never used.","'Map' is defined but never used.","'AddCircle' is defined but never used.","'TodayOutlined' is defined but never used.","'useToggle' is defined but never used.","'SideBarBtn' is defined but never used.","'Profile' is defined but never used.","'Sidebar' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'IconButton' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'useState' is defined but never used.","'Tab' is defined but never used.","'PaymentRounded' is defined but never used.","'ArrowBackIos' is defined but never used.","'ArrowForwardIos' is defined but never used.","'ProgressBar' is defined but never used.","'revToggle' is assigned a value but never used.","'setRevToggle' is assigned a value but never used.","'empToggle' is assigned a value but never used.","'setEmpToggle' is assigned a value but never used.","'setCardsToggle' is assigned a value but never used.","'sidebarToggle' is assigned a value but never used.","'setSidebarToggle' is assigned a value but never used.","'setCalendarToggle' is assigned a value but never used.","'setTasksToggle' is assigned a value but never used.","'progressToggle' is assigned a value but never used.","'setProgressToggle' is assigned a value but never used.","'setProgress' is assigned a value but never used.","'React' is defined but never used.","'CardActions' is defined but never used.","'Typography' is defined but never used.","'FormLabel' is defined but never used."]