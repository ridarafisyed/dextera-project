{"ast":null,"code":"var _jsxFileName = \"/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Category/Classification.jsx\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Button, Box, List, ListItem, ListItemText, Typography } from \"@mui/material\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport ActionAlerts from \"../../utils/ActionAlerts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONFIG = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\"\n  }\n};\n\nconst FetchData = () => {\n  axios.get(`${process.env.REACT_APP_API_URL}/api/classification/`, CONFIG).then(res => {\n    console.log(res.data);\n    setLoading(false);\n    setStatus(res.statusText);\n    setClassification(res.data);\n  }).catch(err => {\n    console.log(err);\n    setLoading(false);\n    setError(err.message);\n  });\n};\n\n_c = FetchData;\n\nconst Classification = () => {\n  _s();\n\n  const [classification, setClassification] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  const clsHandler = id => {\n    axios.delete(`${process.env.REACT_APP_API_URL}/api/classification/${id}/`, CONFIG).then(res => {\n      /*#__PURE__*/\n      _jsxDEV(ActionAlerts, {\n        value: {\n          status: res.statusText,\n          message: \"Success\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      fullWidth: true,\n      sx: {\n        borderRadius: \"0.5rem\"\n      },\n      children: \"+ New Classification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), !loading ? classification.map(data => /*#__PURE__*/_jsxDEV(Box, {\n      mt: 1,\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          disablePadding: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            children: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            value: data.id,\n            onClick: () => clsHandler(data.id),\n            sx: {\n              borderRadius: \"0.5rem\",\n              float: \"right\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Classification, \"QtivK5qNdg4IE4z5zTzQyqcigVE=\");\n\n_c2 = Classification;\nexport default Classification;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FetchData\");\n$RefreshReg$(_c2, \"Classification\");","map":{"version":3,"sources":["/home/supersis03/Projects/Dextera/dextera-project/frontend/src/components/Category/Classification.jsx"],"names":["React","Fragment","useState","useEffect","axios","Button","Box","List","ListItem","ListItemText","Typography","ClearIcon","ActionAlerts","CONFIG","headers","Accept","FetchData","get","process","env","REACT_APP_API_URL","then","res","console","log","data","setLoading","setStatus","statusText","setClassification","catch","err","setError","message","Classification","classification","loading","error","status","clsHandler","id","delete","borderRadius","map","name","float"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport ActionAlerts from \"../../utils/ActionAlerts\";\n\nconst CONFIG = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n};\nconst FetchData = () => {\n  axios\n    .get(`${process.env.REACT_APP_API_URL}/api/classification/`, CONFIG)\n    .then((res) => {\n      console.log(res.data);\n      setLoading(false);\n      setStatus(res.statusText);\n      setClassification(res.data);\n    })\n    .catch((err) => {\n      console.log(err);\n      setLoading(false);\n      setError(err.message);\n    });\n};\nconst Classification = () => {\n  const [classification, setClassification] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const clsHandler = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/classification/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        <ActionAlerts value={{ status: res.statusText, message: \"Success\" }} />;\n      });\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New Classification\n      </Button>\n      {!loading ? (\n        classification.map((data) => (\n          <Box mt={1}>\n            <List>\n              <ListItem disablePadding>\n                <ListItemText>{data.name}</ListItemText>\n                <Button\n                  variant=\"contained\"\n                  value={data.id}\n                  onClick={() => clsHandler(data.id)}\n                  sx={{\n                    borderRadius: \"0.5rem\",\n                    float: \"right\",\n                  }}\n                >\n                  <ClearIcon />\n                </Button>\n              </ListItem>\n            </List>\n          </Box>\n        ))\n      ) : (\n        <Typography>Loading ...</Typography>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Classification;\n"]},"metadata":{},"sourceType":"module"}